Rules useless in parser due to conflicts

  132 continuous_assign: NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments ';'

  136 name_of_variable: IDENTIFIER

  146 charge_strength_opt: /* empty */

  204 name_of_UDP: IDENTIFIER

  216 name_of_module: IDENTIFIER

  269 non_blocking_assignment: lvalue '=' delay_or_event_control expression ';'

  379 if_expression_opt: /* empty */


State 10 conflicts: 2 reduce/reduce
State 13 conflicts: 1 reduce/reduce
State 22 conflicts: 7 reduce/reduce
State 62 conflicts: 2 reduce/reduce
State 99 conflicts: 1 shift/reduce, 5 reduce/reduce
State 131 conflicts: 3 reduce/reduce
State 134 conflicts: 1 shift/reduce
State 142 conflicts: 3 shift/reduce, 2 reduce/reduce
State 151 conflicts: 1 shift/reduce
State 209 conflicts: 1 shift/reduce
State 258 conflicts: 1 shift/reduce
State 303 conflicts: 22 shift/reduce
State 382 conflicts: 1 reduce/reduce
State 504 conflicts: 1 reduce/reduce
State 519 conflicts: 1 shift/reduce
State 523 conflicts: 22 shift/reduce
State 550 conflicts: 24 reduce/reduce
State 568 conflicts: 1 shift/reduce
State 619 conflicts: 1 shift/reduce
State 622 conflicts: 1 shift/reduce
State 663 conflicts: 23 reduce/reduce
State 675 conflicts: 1 shift/reduce
State 684 conflicts: 1 shift/reduce
State 692 conflicts: 23 reduce/reduce
State 700 conflicts: 1 reduce/reduce
State 707 conflicts: 3 reduce/reduce
State 711 conflicts: 55 reduce/reduce
State 736 conflicts: 3 reduce/reduce
State 750 conflicts: 22 shift/reduce, 1 reduce/reduce
State 799 conflicts: 2 shift/reduce


Grammar

    0 $accept: source_text $end

    1 source_text: description_list

    2 description_list: /* empty */
    3                 | description_list description

    4 description: module
    5            | UDP

    6 module_item_list: /* empty */
    7                 | module_item_list module_item

    8 module: MODULE name_of_module list_of_ports_encl_opt ';' module_item_list ENDMODULE
    9       | MACROMODULE name_of_module list_of_ports_encl_opt ';' module_item_list ENDMODULE

   10 name_of_module: IDENTIFIER

   11 list_of_ports_encl_opt: /* empty */
   12                       | list_of_ports_encl

   13 list_of_ports_encl: '(' list_of_ports ')'

   14 list_of_ports: port
   15              | list_of_ports ',' port

   16 port: port_expression_opt
   17     | '.' name_of_port '(' port_expression_opt ')'

   18 port_expression_opt: /* empty */
   19                    | port_expression

   20 port_expression: port_reference
   21                | '{' port_reference_list '}'

   22 port_reference_list: port_reference
   23                    | port_reference_list ',' port_reference

   24 port_reference: name_of_variable
   25               | name_of_variable '[' constant_expression ']'
   26               | name_of_variable '[' constant_expression ':' constant_expression ']'

   27 name_of_port: IDENTIFIER

   28 name_of_variable: IDENTIFIER

   29 module_item: parameter_declaration
   30            | input_declaration
   31            | output_declaration
   32            | inout_declaration
   33            | net_declaration
   34            | reg_declaration
   35            | time_declaration
   36            | integer_declaration
   37            | real_declaration
   38            | event_declaration
   39            | gate_declaration
   40            | UDP_instantiation
   41            | module_instantiation
   42            | parameter_override
   43            | continuous_assign
   44            | specify_block
   45            | initial_statement
   46            | always_statement
   47            | task
   48            | function

   49 UDP: PRIMITIVE name_of_UDP '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

   50 name_of_UDP: IDENTIFIER

   51 UDP_declaration_list: UDP_declaration
   52                     | UDP_declaration_list UDP_declaration

   53 UDP_declaration: output_declaration
   54                | reg_declaration
   55                | input_declaration

   56 UDP_initial_statement_opt: /* empty */
   57                          | UDP_initial_statement

   58 UDP_initial_statement: _INITIAL_ output_terminal_name '=' INIT_VAL ';'

   59 output_terminal_name: name_of_variable

   60 table_definition: TABLE table_entries ENDTABLE

   61 table_entries: combinational_entry_list
   62              | sequential_entry_list

   63 combinational_entry_list: combinational_entry
   64                         | combinational_entry_list combinational_entry

   65 combinational_entry: level_input_list ':' OUTPUT_SYMBOL ';'

   66 sequential_entry_list: sequential_entry
   67                      | sequential_entry_list sequential_entry

   68 sequential_entry: input_list ':' state ':' next_state ';'

   69 input_list: level_input_list
   70           | edge_input_list

   71 level_input_list: level_symbol_plus

   72 edge_input_list: level_symbol_star edge level_symbol_star

   73 edge: '(' LEVEL_SYMBOL LEVEL_SYMBOL ')'
   74     | EDGE_SYMBOL

   75 state: LEVEL_SYMBOL

   76 next_state: OUTPUT_SYMBOL
   77           | '-'

   78 level_symbol_star: /* empty */
   79                  | level_symbol_star LEVEL_SYMBOL

   80 level_symbol_plus: LEVEL_SYMBOL
   81                  | level_symbol_plus LEVEL_SYMBOL

   82 task: TASK name_of_task ';' tf_declaration_star statement_or_null ENDTASK

   83 name_of_task: IDENTIFIER

   84 function: FUNCTION range_or_type_opt name_of_function ';' tf_declaration_plus statement ENDFUNCTION

   85 range_or_type_opt: /* empty */
   86                  | range_or_type

   87 range_or_type: range
   88              | INTEGER
   89              | REAL

   90 name_of_function: IDENTIFIER

   91 tf_declaration_star: /* empty */
   92                    | tf_declaration_star tf_declaration

   93 tf_declaration_plus: tf_declaration
   94                    | tf_declaration_plus tf_declaration

   95 tf_declaration: parameter_declaration
   96               | input_declaration
   97               | output_declaration
   98               | inout_declaration
   99               | reg_declaration
  100               | time_declaration
  101               | integer_declaration
  102               | real_declaration

  103 parameter_declaration: PARAMETER list_of_param_assignments ';'

  104 input_declaration: INPUT range_opt list_of_variables ';'

  105 output_declaration: OUTPUT range_opt list_of_variables ';'

  106 inout_declaration: INOUT range_opt list_of_variables ';'

  107 net_declaration: NETTYPE expandrange_opt delay_opt list_of_variables ';'
  108                | TRIREG charge_strength_opt expandrange_opt delay_opt list_of_variables ';'
  109                | NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments ';'

  110 NETTYPE: WIRE
  111        | TRI
  112        | TRI1
  113        | SUPPLY0
  114        | WAND
  115        | TRIAND
  116        | TRI0
  117        | SUPPLY1
  118        | WOR
  119        | TRIOR
  120        | TRIREG

  121 expandrange_opt: /* empty */
  122                | expandrange

  123 expandrange: range
  124            | SCALARED range
  125            | VECTORED range

  126 reg_declaration: REG range_opt list_of_register_variables ';'

  127 time_declaration: TIME list_of_register_variables ';'

  128 integer_declaration: INTEGER list_of_register_variables ';'

  129 real_declaration: REAL list_of_variables ';'

  130 event_declaration: EVENT list_of_name_of_events ';'

  131 continuous_assign: ASSIGN drive_strength_opt delay_opt list_of_assignments ';'
  132                  | NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments ';'

  133 parameter_override: DEFPARAM list_of_param_assignments ';'

  134 list_of_variables: name_of_variable
  135                  | list_of_variables ',' name_of_variable

  136 name_of_variable: IDENTIFIER

  137 list_of_register_variables: register_variable
  138                           | list_of_register_variables ',' register_variable

  139 register_variable: name_of_register
  140                  | name_of_memory '[' constant_expression ':' constant_expression ']'

  141 name_of_register: IDENTIFIER

  142 name_of_memory: IDENTIFIER

  143 list_of_name_of_events: name_of_event
  144                       | list_of_name_of_events ',' name_of_event

  145 name_of_event: IDENTIFIER

  146 charge_strength_opt: /* empty */
  147                    | charge_strength

  148 charge_strength: '(' SMALL ')'
  149                | '(' MEDIUM ')'
  150                | '(' LARGE ')'

  151 drive_strength_opt: /* empty */
  152                   | drive_strength

  153 drive_strength: '(' STRENGTH0 ',' STRENGTH1 ')'
  154               | '(' STRENGTH1 ',' STRENGTH0 ')'

  155 STRENGTH0: SUPPLY0
  156          | STRONG0
  157          | PULL0
  158          | WEAK0
  159          | HIGHZ0

  160 STRENGTH1: SUPPLY1
  161          | STRONG1
  162          | PULL1
  163          | WEAK1
  164          | HIGHZ1

  165 range_opt: /* empty */
  166          | range

  167 range: '[' constant_expression ':' constant_expression ']'

  168 list_of_assignments: assignment
  169                    | list_of_assignments ',' assignment

  170 gate_declaration: GATETYPE drive_strength_opt delay_opt gate_instance_list ';'

  171 GATETYPE: AND
  172         | NAND
  173         | OR
  174         | NOR
  175         | XOR
  176         | XNOR
  177         | BUF
  178         | BUFIF0
  179         | BUFIF1
  180         | NOT
  181         | NOTIF0
  182         | NOTIF1
  183         | PULLDOWN
  184         | PULLUP
  185         | NMOS
  186         | RNMOS
  187         | PMOS
  188         | RPMOS
  189         | CMOS
  190         | RCMOS
  191         | TRAN
  192         | RTRAN
  193         | TRANIF0
  194         | RTRANIF0
  195         | TRANIF1
  196         | RTRANIF1

  197 gate_instance_list: gate_instance
  198                   | gate_instance_list ',' gate_instance

  199 gate_instance: name_of_gate_instance_opt '(' terminal_list ')'

  200 name_of_gate_instance_opt: /* empty */
  201                          | name_of_gate_instance

  202 name_of_gate_instance: IDENTIFIER range_opt

  203 UDP_instantiation: name_of_UDP drive_strength_opt delay_opt UDP_instance_list ';'

  204 name_of_UDP: IDENTIFIER

  205 UDP_instance_list: UDP_instance
  206                  | UDP_instance_list ',' UDP_instance

  207 UDP_instance: name_of_UDP_instance_opt '(' terminal_list ')'

  208 name_of_UDP_instance_opt: /* empty */
  209                         | name_of_UDP_instance

  210 name_of_UDP_instance: IDENTIFIER range_opt

  211 terminal_list: terminal
  212              | terminal_list ',' terminal

  213 terminal: expression
  214         | IDENTIFIER

  215 module_instantiation: name_of_module parameter_value_assignment_opt module_instance_list ';'

  216 name_of_module: IDENTIFIER

  217 parameter_value_assignment_opt: /* empty */
  218                               | parameter_value_assignment

  219 parameter_value_assignment: '#' '(' expression_list ')'

  220 module_instance_list: module_instance
  221                     | module_instance_list ',' module_instance

  222 module_instance: name_of_instance '(' list_of_module_connections_opt ')'

  223 name_of_instance: IDENTIFIER range_opt

  224 list_of_module_connections_opt: /* empty */
  225                               | list_of_module_connections

  226 list_of_module_connections: module_port_connection_list
  227                           | named_port_connection_list

  228 module_port_connection_list: module_port_connection
  229                            | module_port_connection_list ',' module_port_connection

  230 module_port_connection: /* empty */
  231                       | expression

  232 named_port_connection_list: named_port_connection
  233                           | named_port_connection_list ',' named_port_connection

  234 named_port_connection: '.' IDENTIFIER '(' expression ')'

  235 initial_statement: _INITIAL_ statement

  236 always_statement: ALWAYS statement

  237 statement_or_null: statement
  238                  | ';'

  239 statement_list: /* empty */
  240               | statement_list statement

  241 statement: blocking_assignment ';'
  242          | non_blocking_assignment ';'
  243          | IF '(' expression ')' statement_or_null
  244          | IF '(' expression ')' statement_or_null ELSE statement_or_null
  245          | CASE '(' expression ')' case_item_list ENDCASE
  246          | CASEZ '(' expression ')' case_item_list ENDCASE
  247          | CASEX '(' expression ')' case_item_list ENDCASE
  248          | FOREVER statement
  249          | REPEAT '(' expression ')' statement
  250          | WHILE '(' expression ')' statement
  251          | FOR '(' assignment ';' expression ';' assignment ')' statement
  252          | delay_or_event_control statement_or_null
  253          | WAIT '(' expression ')' statement_or_null
  254          | HYPH_GT name_of_event ';'
  255          | seq_block
  256          | par_block
  257          | task_enable
  258          | system_task_enable
  259          | DISABLE name_of_task ';'
  260          | DISABLE name_of_block ';'
  261          | ASSIGN assignment ';'
  262          | DEASSIGN lvalue ';'
  263          | FORCE assignment ';'
  264          | RELEASE lvalue ';'

  265 assignment: lvalue '=' expression

  266 blocking_assignment: lvalue '=' expression
  267                    | lvalue '=' delay_or_event_control expression ';'

  268 non_blocking_assignment: lvalue LTE expression
  269                        | lvalue '=' delay_or_event_control expression ';'

  270 delay_or_event_control: delay_control
  271                       | event_control
  272                       | REPEAT '(' expression ')' event_control

  273 case_item_list: case_item
  274               | case_item_list case_item

  275 case_item: expression_list ':' statement_or_null
  276          | DEFAULT ':' statement_or_null
  277          | DEFAULT statement_or_null

  278 seq_block: _BEGIN_ statement_list END
  279          | _BEGIN_ ':' name_of_block block_declaration_list statement_list END

  280 par_block: FORK statement_list JOIN
  281          | FORK ':' name_of_block block_declaration_list statement_list JOIN

  282 name_of_block: IDENTIFIER

  283 block_declaration_list: /* empty */
  284                       | block_declaration_list block_declaration

  285 block_declaration: parameter_declaration
  286                  | reg_declaration
  287                  | integer_declaration
  288                  | real_declaration
  289                  | time_declaration
  290                  | event_declaration

  291 task_enable: name_of_task
  292            | name_of_task '(' expression_list ')' ';'

  293 system_task_enable: name_of_system_task ';'
  294                   | name_of_system_task '(' expression_list ')' ';'

  295 name_of_system_task: '$' system_identifier

  296 system_identifier: IDENTIFIER

  297 specify_block: SPECIFY specify_item_list ENDSPECIFY

  298 specify_item_list: /* empty */
  299                  | specify_item_list specify_item

  300 specify_item: specparam_declaration
  301             | path_declaration
  302             | level_sensitive_path_declaration
  303             | edge_sensitive_path_declaration
  304             | system_timing_check
  305             | sdpd

  306 specparam_declaration: SPECPARAM list_of_param_assignments ';'

  307 list_of_param_assignments: param_assignment
  308                          | list_of_param_assignments ',' param_assignment

  309 param_assignment: identifier_hier '=' constant_expression

  310 path_declaration: path_description '=' path_delay_value ';'

  311 path_description: '(' specify_input_terminal_descriptor EQ_GT specify_output_terminal_descriptor ')'
  312                 | '(' list_of_path_inputs AST_GT list_of_path_outputs ')'

  313 list_of_path_inputs: specify_input_terminal_descriptor_list

  314 list_of_path_outputs: specify_output_terminal_descriptor_list

  315 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor
  316                                       | specify_input_terminal_descriptor_list ',' specify_input_terminal_descriptor

  317 specify_input_terminal_descriptor: input_identifier
  318                                  | input_identifier '[' constant_expression ']'
  319                                  | input_identifier '[' constant_expression ':' constant_expression ']'

  320 specify_output_terminal_descriptor_list: specify_output_terminal_descriptor
  321                                        | specify_output_terminal_descriptor_list ',' specify_output_terminal_descriptor

  322 specify_output_terminal_descriptor: output_identifier
  323                                   | output_identifier '[' constant_expression ']'
  324                                   | output_identifier '[' constant_expression ':' constant_expression ']'

  325 input_identifier: IDENTIFIER

  326 output_identifier: IDENTIFIER

  327 path_delay_value: path_delay_expression
  328                 | '(' path_delay_expression ',' path_delay_expression ')'
  329                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  330                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  331                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

  332 path_delay_expression: mintypmax_expression

  333 comma_const_exp_comma_notify_reg_opt: /* empty */
  334                                     | ',' constant_expression ',' notify_register

  335 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  336                    | '$' HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  337                    | '$' PERIOD '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  338                    | '$' WIDTH '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'
  339                    | '$' SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  340                    | '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  341                    | '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

  342 timing_check_event: timing_check_event_control_opt specify_terminal_descriptor amp_timing_check_condition_opt

  343 specify_terminal_descriptor: specify_input_terminal_descriptor
  344                            | specify_output_terminal_descriptor

  345 controlled_timing_check_event: timing_check_event_control specify_terminal_descriptor amp_timing_check_condition_opt

  346 timing_check_event_control_opt: /* empty */
  347                               | timing_check_event_control

  348 timing_check_event_control: POSEDGE
  349                           | NEGEDGE
  350                           | edge_control_specifier

  351 edge_control_specifier: EDGE '[' edge_descriptor_list ']'

  352 edge_descriptor_list: EDGE_DESCRIPTOR
  353                     | edge_descriptor_list ',' EDGE_DESCRIPTOR

  354 amp_timing_check_condition_opt: /* empty */
  355                               | AMP_AMP_AMP timing_check_condition

  356 timing_check_condition: scalar_timing_check_condition
  357                       | '(' scalar_timing_check_condition ')'

  358 scalar_timing_check_condition: scalar_expression
  359                              | '~' scalar_expression
  360                              | scalar_expression EQ_EQ SCALAR_CONSTANT
  361                              | scalar_expression EQ_EQ_EQ SCALAR_CONSTANT
  362                              | scalar_expression NOT_EQ SCALAR_CONSTANT
  363                              | scalar_expression NOT_EQ_EQ SCALAR_CONSTANT

  364 scalar_expression: identifier_hier
  365                  | identifier_hier '[' expression ']'

  366 timing_check_limit: expression

  367 comma_notify_register_opt: /* empty */
  368                          | ',' notify_register

  369 notify_register: identifier_hier

  370 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  371                                 | IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

  372 conditional_port_expression: port_reference
  373                            | UNARY_OPERATOR port_reference
  374                            | port_reference BINARY_OPERATOR port_reference

  375 polarity_operator_opt: /* empty */
  376                      | polarity_operator

  377 polarity_operator: '+'
  378                  | '-'

  379 if_expression_opt: /* empty */
  380                  | IF '(' expression ')'

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'
  382                                | if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

  383 data_source_expression: expression

  384 edge_identifier_opt: /* empty */
  385                    | edge_identifier

  386 edge_identifier: POSEDGE
  387                | NEGEDGE

  388 sdpd: IF '(' sdpd_conditional_expression ')' path_description '=' path_delay_value ';'

  389 sdpd_conditional_expression: expression BINARY_OPERATOR expression
  390                            | UNARY_OPERATOR expression

  391 lvalue: identifier_hier
  392       | identifier_hier '[' expression ']'
  393       | identifier_hier '[' constant_expression ':' constant_expression ']'
  394       | concatenation

  395 constant_expression: expression

  396 comma_mintypmax_expression_opt: /* empty */
  397                               | ',' mintypmax_expression

  398 mintypmax_expression: expression
  399                     | expression ':' expression ':' expression

  400 expression_list: expression
  401                | expression_list ',' expression

  402 expression: primary
  403           | UNARY_OPERATOR primary
  404           | expression BINARY_OPERATOR expression
  405           | expression '?' expression ':' expression
  406           | STRING

  407 UNARY_OPERATOR: '+'
  408               | '-'
  409               | '!'
  410               | '~'
  411               | '&'
  412               | TILDE_AMP
  413               | '|'
  414               | CARET_PIPE
  415               | '^'
  416               | TILDE_CARET

  417 BINARY_OPERATOR: '+'
  418                | '-'
  419                | '*'
  420                | '/'
  421                | '%'
  422                | EQ_EQ
  423                | NOT_EQ
  424                | EQ_EQ_EQ
  425                | NOT_EQ_EQ
  426                | AMP_AMP
  427                | PIPE_PIPE
  428                | '<'
  429                | LTE
  430                | '>'
  431                | GTE
  432                | '&'
  433                | '|'
  434                | '^'
  435                | CARET_TILDE
  436                | RSHIFT
  437                | LSHIFT

  438 primary: number
  439        | identifier_hier
  440        | identifier_hier '[' expression ']'
  441        | identifier_hier '[' constant_expression ':' constant_expression ']'
  442        | concatenation
  443        | multiple_concatenation
  444        | function_call
  445        | '(' mintypmax_expression ')'

  446 unsigned_number_opt: /* empty */
  447                    | UNSIGNED_NUMBER

  448 dot_unsigned_number_opt: /* empty */
  449                        | '.' UNSIGNED_NUMBER

  450 number: DECIMAL_NUMBER
  451       | unsigned_number_opt BASE UNSIGNED_NUMBER
  452       | DECIMAL_NUMBER '.' UNSIGNED_NUMBER
  453       | DECIMAL_NUMBER dot_unsigned_number_opt 'E' DECIMAL_NUMBER
  454       | DECIMAL_NUMBER dot_unsigned_number_opt 'e' DECIMAL_NUMBER

  455 concatenation: '{' expression_list '}'

  456 multiple_concatenation: '{' expression '{' expression_list '}' '}'

  457 function_call: name_of_function '(' expression_list ')'
  458              | name_of_system_function '(' expression_list ')'
  459              | name_of_system_function

  460 name_of_function: identifier_hier

  461 name_of_system_function: '$' system_identifier

  462 identifier_hier: IDENTIFIER
  463                | identifier_hier '.' IDENTIFIER

  464 delay_opt: /* empty */
  465          | delay

  466 delay: '#' number
  467      | '#' identifier_hier
  468      | '#' '(' mintypmax_expression comma_mintypmax_expression_opt comma_mintypmax_expression_opt ')'

  469 delay_control: '#' number
  470              | '#' identifier_hier
  471              | '#' '(' mintypmax_expression ')'

  472 event_control: '@' identifier_hier
  473              | '@' '(' event_expression ')'

  474 event_expression: expression
  475                 | POSEDGE scalar_event_expression
  476                 | NEGEDGE scalar_event_expression
  477                 | event_expression OR event_expression

  478 scalar_event_expression: name_of_variable


Terminals, with rules where they appear

$end (0) 0
'!' (33) 409
'#' (35) 219 466 467 468 469 470 471
'$' (36) 295 335 336 337 338 339 340 341 461
'%' (37) 421
'&' (38) 411 432
'(' (40) 13 17 49 73 148 149 150 153 154 199 207 219 222 234 243 244
    245 246 247 249 250 251 253 272 292 294 311 312 328 329 330 331
    335 336 337 338 339 340 341 357 370 371 380 381 382 388 445 457
    458 468 471 473
')' (41) 13 17 49 73 148 149 150 153 154 199 207 219 222 234 243 244
    245 246 247 249 250 251 253 272 292 294 311 312 328 329 330 331
    335 336 337 338 339 340 341 357 370 371 380 381 382 388 445 457
    458 468 471 473
'*' (42) 419
'+' (43) 377 407 417
',' (44) 15 23 135 138 144 153 154 169 198 206 212 221 229 233 308
    316 321 328 329 330 331 334 335 336 337 338 339 340 341 353 368
    397 401
'-' (45) 77 378 408 418
'.' (46) 17 234 449 452 463
'/' (47) 420
':' (58) 26 65 68 140 167 275 276 279 281 319 324 381 382 393 399 405
    441
';' (59) 8 9 49 58 65 68 82 84 103 104 105 106 107 108 109 126 127
    128 129 130 131 132 133 170 203 215 238 241 242 251 254 259 260
    261 262 263 264 267 269 292 293 294 306 310 335 336 337 338 339
    340 341 370 371 381 382 388
'<' (60) 428
'=' (61) 58 265 266 267 269 309 310 370 371 381 382 388
'>' (62) 430
'?' (63) 405
'@' (64) 472 473
'E' (69) 453
'[' (91) 25 26 140 167 318 319 323 324 351 365 392 393 440 441
']' (93) 25 26 140 167 318 319 323 324 351 365 392 393 440 441
'^' (94) 415 434
'e' (101) 454
'{' (123) 21 455 456
'|' (124) 413 433
'}' (125) 21 455 456
'~' (126) 359 410
error (256)
TILDE_AMP (258) 412
CARET_PIPE (259) 414
TILDE_CARET (260) 416
EQ_EQ (261) 360 422
NOT_EQ (262) 362 423
EQ_EQ_EQ (263) 361 424
NOT_EQ_EQ (264) 363 425
AMP_AMP (265) 426
AMP_AMP_AMP (266) 355
PIPE_PIPE (267) 427
LTE (268) 268 429
GTE (269) 431
CARET_TILDE (270) 435
LSHIFT (271) 437
RSHIFT (272) 436
EQ_GT (273) 311 370 381
AST_GT (274) 312 371 382
HYPH_GT (275) 254
SETUP (276) 335
HOLD (277) 336
PERIOD (278) 337
WIDTH (279) 338
SKEW (280) 339
RECOVERY (281) 340
SETUPHOLD (282) 341
_BEGIN_ (283) 278 279
END (284) 278 279
MACROMODULE (285) 9
MODULE (286) 8
ENDMODULE (287) 8 9
PRIMITIVE (288) 49
ENDPRIMITIVE (289) 49
TABLE (290) 60
ENDTABLE (291) 60
TASK (292) 82
ENDTASK (293) 82
FUNCTION (294) 84
ENDFUNCTION (295) 84
SPECIFY (296) 297
ENDSPECIFY (297) 297
INTEGER (298) 88 128
REAL (299) 89 129
TIME (300) 127
SPECPARAM (301) 306
PARAMETER (302) 103
DEFPARAM (303) 133
INPUT (304) 104
OUTPUT (305) 105
INOUT (306) 106
WIRE (307) 110
TRI (308) 111
TRI0 (309) 116
TRI1 (310) 112
SUPPLY0 (311) 113 155
SUPPLY1 (312) 117 160
WAND (313) 114
TRIAND (314) 115
TRIOR (315) 119
WOR (316) 118
TRIREG (317) 108 120
SCALARED (318) 124
VECTORED (319) 125
REG (320) 126
EVENT (321) 130
SMALL (322) 148
MEDIUM (323) 149
LARGE (324) 150
STRONG0 (325) 156
STRONG1 (326) 161
PULL0 (327) 157
PULL1 (328) 162
WEAK0 (329) 158
WEAK1 (330) 163
HIGHZ0 (331) 159
HIGHZ1 (332) 164
AND (333) 171
NAND (334) 172
OR (335) 173 477
NOR (336) 174
XOR (337) 175
XNOR (338) 176
BUF (339) 177
BUFIF0 (340) 178
BUFIF1 (341) 179
NOT (342) 180
NOTIF0 (343) 181
NOTIF1 (344) 182
PULLDOWN (345) 183
PULLUP (346) 184
NMOS (347) 185
RNMOS (348) 186
PMOS (349) 187
RPMOS (350) 188
CMOS (351) 189
RCMOS (352) 190
TRAN (353) 191
RTRAN (354) 192
TRANIF0 (355) 193
TRANIF1 (356) 195
RTRANIF0 (357) 194
RTRANIF1 (358) 196
ASSIGN (359) 131 261
DEASSIGN (360) 262
_INITIAL_ (361) 58 235
ALWAYS (362) 236
IF (363) 243 244 370 371 380 388
ELSE (364) 244
CASE (365) 245
CASEZ (366) 246
CASEX (367) 247
ENDCASE (368) 245 246 247
DEFAULT (369) 276 277
FOREVER (370) 248
REPEAT (371) 249 272
WHILE (372) 250
FOR (373) 251
WAIT (374) 253
DISABLE (375) 259 260
FORCE (376) 263
RELEASE (377) 264
FORK (378) 280 281
JOIN (379) 280 281
POSEDGE (380) 348 386 475
NEGEDGE (381) 349 387 476
EDGE (382) 351
OUTPUT_SYMBOL (383) 65 76
INIT_VAL (384) 58
STRING (385) 406
IDENTIFIER (386) 10 27 28 50 83 90 136 141 142 145 202 204 210 214
    216 223 234 282 296 325 326 462 463
DECIMAL_NUMBER (387) 450 452 453 454
UNSIGNED_NUMBER (388) 447 449 451 452
BASE (389) 451
SCALAR_CONSTANT (390) 360 361 362 363
LEVEL_SYMBOL (391) 73 75 79 80 81
EDGE_SYMBOL (392) 74
EDGE_DESCRIPTOR (393) 352 353


Nonterminals, with rules where they appear

$accept (168)
    on left: 0
source_text (169)
    on left: 1, on right: 0
description_list (170)
    on left: 2 3, on right: 1 3
description (171)
    on left: 4 5, on right: 3
module_item_list (172)
    on left: 6 7, on right: 7 8 9
module (173)
    on left: 8 9, on right: 4
name_of_module (174)
    on left: 10 216, on right: 8 9 215
list_of_ports_encl_opt (175)
    on left: 11 12, on right: 8 9
list_of_ports_encl (176)
    on left: 13, on right: 12
list_of_ports (177)
    on left: 14 15, on right: 13 15
port (178)
    on left: 16 17, on right: 14 15
port_expression_opt (179)
    on left: 18 19, on right: 16 17
port_expression (180)
    on left: 20 21, on right: 19
port_reference_list (181)
    on left: 22 23, on right: 21 23
port_reference (182)
    on left: 24 25 26, on right: 20 22 23 372 373 374
name_of_port (183)
    on left: 27, on right: 17
name_of_variable (184)
    on left: 28 136, on right: 24 25 26 59 134 135 478
module_item (185)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    47 48, on right: 7
UDP (186)
    on left: 49, on right: 5
name_of_UDP (187)
    on left: 50 204, on right: 49 203
UDP_declaration_list (188)
    on left: 51 52, on right: 49 52
UDP_declaration (189)
    on left: 53 54 55, on right: 51 52
UDP_initial_statement_opt (190)
    on left: 56 57, on right: 49
UDP_initial_statement (191)
    on left: 58, on right: 57
output_terminal_name (192)
    on left: 59, on right: 58
table_definition (193)
    on left: 60, on right: 49
table_entries (194)
    on left: 61 62, on right: 60
combinational_entry_list (195)
    on left: 63 64, on right: 61 64
combinational_entry (196)
    on left: 65, on right: 63 64
sequential_entry_list (197)
    on left: 66 67, on right: 62 67
sequential_entry (198)
    on left: 68, on right: 66 67
input_list (199)
    on left: 69 70, on right: 68
level_input_list (200)
    on left: 71, on right: 65 69
edge_input_list (201)
    on left: 72, on right: 70
edge (202)
    on left: 73 74, on right: 72
state (203)
    on left: 75, on right: 68
next_state (204)
    on left: 76 77, on right: 68
level_symbol_star (205)
    on left: 78 79, on right: 72 79
level_symbol_plus (206)
    on left: 80 81, on right: 71 81
task (207)
    on left: 82, on right: 47
name_of_task (208)
    on left: 83, on right: 82 259 291 292
function (209)
    on left: 84, on right: 48
range_or_type_opt (210)
    on left: 85 86, on right: 84
range_or_type (211)
    on left: 87 88 89, on right: 86
name_of_function (212)
    on left: 90 460, on right: 84 457
tf_declaration_star (213)
    on left: 91 92, on right: 82 92
tf_declaration_plus (214)
    on left: 93 94, on right: 84 94
tf_declaration (215)
    on left: 95 96 97 98 99 100 101 102, on right: 92 93 94
parameter_declaration (216)
    on left: 103, on right: 29 95 285
input_declaration (217)
    on left: 104, on right: 30 55 96
output_declaration (218)
    on left: 105, on right: 31 53 97
inout_declaration (219)
    on left: 106, on right: 32 98
net_declaration (220)
    on left: 107 108 109, on right: 33
NETTYPE (221)
    on left: 110 111 112 113 114 115 116 117 118 119 120, on right:
    107 109 132
expandrange_opt (222)
    on left: 121 122, on right: 107 108 109 132
expandrange (223)
    on left: 123 124 125, on right: 122
reg_declaration (224)
    on left: 126, on right: 34 54 99 286
time_declaration (225)
    on left: 127, on right: 35 100 289
integer_declaration (226)
    on left: 128, on right: 36 101 287
real_declaration (227)
    on left: 129, on right: 37 102 288
event_declaration (228)
    on left: 130, on right: 38 290
continuous_assign (229)
    on left: 131 132, on right: 43
parameter_override (230)
    on left: 133, on right: 42
list_of_variables (231)
    on left: 134 135, on right: 49 104 105 106 107 108 129 135
list_of_register_variables (232)
    on left: 137 138, on right: 126 127 128 138
register_variable (233)
    on left: 139 140, on right: 137 138
name_of_register (234)
    on left: 141, on right: 139
name_of_memory (235)
    on left: 142, on right: 140
list_of_name_of_events (236)
    on left: 143 144, on right: 130 144
name_of_event (237)
    on left: 145, on right: 143 144 254
charge_strength_opt (238)
    on left: 146 147, on right: 108
charge_strength (239)
    on left: 148 149 150, on right: 147
drive_strength_opt (240)
    on left: 151 152, on right: 109 131 132 170 203
drive_strength (241)
    on left: 153 154, on right: 152
STRENGTH0 (242)
    on left: 155 156 157 158 159, on right: 153 154
STRENGTH1 (243)
    on left: 160 161 162 163 164, on right: 153 154
range_opt (244)
    on left: 165 166, on right: 104 105 106 126 202 210 223
range (245)
    on left: 167, on right: 87 123 124 125 166
list_of_assignments (246)
    on left: 168 169, on right: 109 131 132 169
gate_declaration (247)
    on left: 170, on right: 39
GATETYPE (248)
    on left: 171 172 173 174 175 176 177 178 179 180 181 182 183 184
    185 186 187 188 189 190 191 192 193 194 195 196, on right: 170
gate_instance_list (249)
    on left: 197 198, on right: 170 198
gate_instance (250)
    on left: 199, on right: 197 198
name_of_gate_instance_opt (251)
    on left: 200 201, on right: 199
name_of_gate_instance (252)
    on left: 202, on right: 201
UDP_instantiation (253)
    on left: 203, on right: 40
UDP_instance_list (254)
    on left: 205 206, on right: 203 206
UDP_instance (255)
    on left: 207, on right: 205 206
name_of_UDP_instance_opt (256)
    on left: 208 209, on right: 207
name_of_UDP_instance (257)
    on left: 210, on right: 209
terminal_list (258)
    on left: 211 212, on right: 199 207 212
terminal (259)
    on left: 213 214, on right: 211 212
module_instantiation (260)
    on left: 215, on right: 41
parameter_value_assignment_opt (261)
    on left: 217 218, on right: 215
parameter_value_assignment (262)
    on left: 219, on right: 218
module_instance_list (263)
    on left: 220 221, on right: 215 221
module_instance (264)
    on left: 222, on right: 220 221
name_of_instance (265)
    on left: 223, on right: 222
list_of_module_connections_opt (266)
    on left: 224 225, on right: 222
list_of_module_connections (267)
    on left: 226 227, on right: 225
module_port_connection_list (268)
    on left: 228 229, on right: 226 229
module_port_connection (269)
    on left: 230 231, on right: 228 229
named_port_connection_list (270)
    on left: 232 233, on right: 227 233
named_port_connection (271)
    on left: 234, on right: 232 233
initial_statement (272)
    on left: 235, on right: 45
always_statement (273)
    on left: 236, on right: 46
statement_or_null (274)
    on left: 237 238, on right: 82 243 244 252 253 275 276 277
statement_list (275)
    on left: 239 240, on right: 240 278 279 280 281
statement (276)
    on left: 241 242 243 244 245 246 247 248 249 250 251 252 253 254
    255 256 257 258 259 260 261 262 263 264, on right: 84 235 236 237
    240 248 249 250 251
assignment (277)
    on left: 265, on right: 168 169 251 261 263
blocking_assignment (278)
    on left: 266 267, on right: 241
non_blocking_assignment (279)
    on left: 268 269, on right: 242
delay_or_event_control (280)
    on left: 270 271 272, on right: 252 267 269
case_item_list (281)
    on left: 273 274, on right: 245 246 247 274
case_item (282)
    on left: 275 276 277, on right: 273 274
seq_block (283)
    on left: 278 279, on right: 255
par_block (284)
    on left: 280 281, on right: 256
name_of_block (285)
    on left: 282, on right: 260 279 281
block_declaration_list (286)
    on left: 283 284, on right: 279 281 284
block_declaration (287)
    on left: 285 286 287 288 289 290, on right: 284
task_enable (288)
    on left: 291 292, on right: 257
system_task_enable (289)
    on left: 293 294, on right: 258
name_of_system_task (290)
    on left: 295, on right: 293 294
system_identifier (291)
    on left: 296, on right: 295 461
specify_block (292)
    on left: 297, on right: 44
specify_item_list (293)
    on left: 298 299, on right: 297 299
specify_item (294)
    on left: 300 301 302 303 304 305, on right: 299
specparam_declaration (295)
    on left: 306, on right: 300
list_of_param_assignments (296)
    on left: 307 308, on right: 103 133 306 308
param_assignment (297)
    on left: 309, on right: 307 308
path_declaration (298)
    on left: 310, on right: 301
path_description (299)
    on left: 311 312, on right: 310 388
list_of_path_inputs (300)
    on left: 313, on right: 312 371
list_of_path_outputs (301)
    on left: 314, on right: 312 371 382
specify_input_terminal_descriptor_list (302)
    on left: 315 316, on right: 313 316
specify_input_terminal_descriptor (303)
    on left: 317 318 319, on right: 311 315 316 343 370 381 382
specify_output_terminal_descriptor_list (304)
    on left: 320 321, on right: 314 321
specify_output_terminal_descriptor (305)
    on left: 322 323 324, on right: 311 320 321 344 370 381
input_identifier (306)
    on left: 325, on right: 317 318 319
output_identifier (307)
    on left: 326, on right: 322 323 324
path_delay_value (308)
    on left: 327 328 329 330 331, on right: 310 370 371 381 382 388
path_delay_expression (309)
    on left: 332, on right: 327 328 329 330 331
comma_const_exp_comma_notify_reg_opt (310)
    on left: 333 334, on right: 338
system_timing_check (311)
    on left: 335 336 337 338 339 340 341, on right: 304
timing_check_event (312)
    on left: 342, on right: 335 336 339 340 341
specify_terminal_descriptor (313)
    on left: 343 344, on right: 342 345
controlled_timing_check_event (314)
    on left: 345, on right: 337 338 340
timing_check_event_control_opt (315)
    on left: 346 347, on right: 342
timing_check_event_control (316)
    on left: 348 349 350, on right: 345 347
edge_control_specifier (317)
    on left: 351, on right: 350
edge_descriptor_list (318)
    on left: 352 353, on right: 351 353
amp_timing_check_condition_opt (319)
    on left: 354 355, on right: 342 345
timing_check_condition (320)
    on left: 356 357, on right: 355
scalar_timing_check_condition (321)
    on left: 358 359 360 361 362 363, on right: 356 357
scalar_expression (322)
    on left: 364 365, on right: 358 359 360 361 362 363
timing_check_limit (323)
    on left: 366, on right: 335 336 337 338 339 340 341
comma_notify_register_opt (324)
    on left: 367 368, on right: 335 336 337 339 340 341
notify_register (325)
    on left: 369, on right: 334 368
level_sensitive_path_declaration (326)
    on left: 370 371, on right: 302
conditional_port_expression (327)
    on left: 372 373 374, on right: 370 371
polarity_operator_opt (328)
    on left: 375 376, on right: 370 371 381 382
polarity_operator (329)
    on left: 377 378, on right: 376
if_expression_opt (330)
    on left: 379 380, on right: 381 382
edge_sensitive_path_declaration (331)
    on left: 381 382, on right: 303
data_source_expression (332)
    on left: 383, on right: 381 382
edge_identifier_opt (333)
    on left: 384 385, on right: 381 382
edge_identifier (334)
    on left: 386 387, on right: 385
sdpd (335)
    on left: 388, on right: 305
sdpd_conditional_expression (336)
    on left: 389 390, on right: 388
lvalue (337)
    on left: 391 392 393 394, on right: 262 264 265 266 267 268 269
constant_expression (338)
    on left: 395, on right: 25 26 140 167 309 318 319 323 324 334 393
    441
comma_mintypmax_expression_opt (339)
    on left: 396 397, on right: 468
mintypmax_expression (340)
    on left: 398 399, on right: 332 397 445 468 471
expression_list (341)
    on left: 400 401, on right: 219 275 292 294 401 455 456 457 458
expression (342)
    on left: 402 403 404 405 406, on right: 213 231 234 243 244 245
    246 247 249 250 251 253 265 266 267 268 269 272 365 366 380 383
    389 390 392 395 398 399 400 401 404 405 440 456 474
UNARY_OPERATOR (343)
    on left: 407 408 409 410 411 412 413 414 415 416, on right: 373
    390 403
BINARY_OPERATOR (344)
    on left: 417 418 419 420 421 422 423 424 425 426 427 428 429 430
    431 432 433 434 435 436 437, on right: 374 389 404
primary (345)
    on left: 438 439 440 441 442 443 444 445, on right: 402 403
unsigned_number_opt (346)
    on left: 446 447, on right: 451
dot_unsigned_number_opt (347)
    on left: 448 449, on right: 453 454
number (348)
    on left: 450 451 452 453 454, on right: 438 466 469
concatenation (349)
    on left: 455, on right: 394 442
multiple_concatenation (350)
    on left: 456, on right: 443
function_call (351)
    on left: 457 458 459, on right: 444
name_of_system_function (352)
    on left: 461, on right: 458 459
identifier_hier (353)
    on left: 462 463, on right: 309 364 365 369 391 392 393 439 440
    441 460 463 467 470 472
delay_opt (354)
    on left: 464 465, on right: 107 108 109 131 132 170 203
delay (355)
    on left: 466 467 468, on right: 465
delay_control (356)
    on left: 469 470 471, on right: 270
event_control (357)
    on left: 472 473, on right: 271 272
event_expression (358)
    on left: 474 475 476 477, on right: 473 477
scalar_event_expression (359)
    on left: 478, on right: 475 476


State 0

    0 $accept: . source_text $end

    $default  reduce using rule 2 (description_list)

    source_text       go to state 1
    description_list  go to state 2


State 1

    0 $accept: source_text . $end

    $end  shift, and go to state 3


State 2

    1 source_text: description_list .
    3 description_list: description_list . description

    MACROMODULE  shift, and go to state 4
    MODULE       shift, and go to state 5
    PRIMITIVE    shift, and go to state 6

    $default  reduce using rule 1 (source_text)

    description  go to state 7
    module       go to state 8
    UDP          go to state 9


State 3

    0 $accept: source_text $end .

    $default  accept


State 4

    9 module: MACROMODULE . name_of_module list_of_ports_encl_opt ';' module_item_list ENDMODULE

    IDENTIFIER  shift, and go to state 10

    name_of_module  go to state 11


State 5

    8 module: MODULE . name_of_module list_of_ports_encl_opt ';' module_item_list ENDMODULE

    IDENTIFIER  shift, and go to state 10

    name_of_module  go to state 12


State 6

   49 UDP: PRIMITIVE . name_of_UDP '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

    IDENTIFIER  shift, and go to state 13

    name_of_UDP  go to state 14


State 7

    3 description_list: description_list description .

    $default  reduce using rule 3 (description_list)


State 8

    4 description: module .

    $default  reduce using rule 4 (description)


State 9

    5 description: UDP .

    $default  reduce using rule 5 (description)


State 10

   10 name_of_module: IDENTIFIER .
  216               | IDENTIFIER .

    ';'       reduce using rule 10 (name_of_module)
    ';'       [reduce using rule 216 (name_of_module)]
    '('       reduce using rule 10 (name_of_module)
    '('       [reduce using rule 216 (name_of_module)]
    $default  reduce using rule 10 (name_of_module)


State 11

    9 module: MACROMODULE name_of_module . list_of_ports_encl_opt ';' module_item_list ENDMODULE

    '('  shift, and go to state 15

    $default  reduce using rule 11 (list_of_ports_encl_opt)

    list_of_ports_encl_opt  go to state 16
    list_of_ports_encl      go to state 17


State 12

    8 module: MODULE name_of_module . list_of_ports_encl_opt ';' module_item_list ENDMODULE

    '('  shift, and go to state 15

    $default  reduce using rule 11 (list_of_ports_encl_opt)

    list_of_ports_encl_opt  go to state 18
    list_of_ports_encl      go to state 17


State 13

   50 name_of_UDP: IDENTIFIER .
  204            | IDENTIFIER .

    '('       reduce using rule 50 (name_of_UDP)
    '('       [reduce using rule 204 (name_of_UDP)]
    $default  reduce using rule 50 (name_of_UDP)


State 14

   49 UDP: PRIMITIVE name_of_UDP . '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

    '('  shift, and go to state 19


State 15

   13 list_of_ports_encl: '(' . list_of_ports ')'

    '{'         shift, and go to state 20
    '.'         shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    $default  reduce using rule 18 (port_expression_opt)

    list_of_ports        go to state 23
    port                 go to state 24
    port_expression_opt  go to state 25
    port_expression      go to state 26
    port_reference       go to state 27
    name_of_variable     go to state 28


State 16

    9 module: MACROMODULE name_of_module list_of_ports_encl_opt . ';' module_item_list ENDMODULE

    ';'  shift, and go to state 29


State 17

   12 list_of_ports_encl_opt: list_of_ports_encl .

    $default  reduce using rule 12 (list_of_ports_encl_opt)


State 18

    8 module: MODULE name_of_module list_of_ports_encl_opt . ';' module_item_list ENDMODULE

    ';'  shift, and go to state 30


State 19

   49 UDP: PRIMITIVE name_of_UDP '(' . list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

    IDENTIFIER  shift, and go to state 22

    name_of_variable   go to state 31
    list_of_variables  go to state 32


State 20

   21 port_expression: '{' . port_reference_list '}'

    IDENTIFIER  shift, and go to state 22

    port_reference_list  go to state 33
    port_reference       go to state 34
    name_of_variable     go to state 28


State 21

   17 port: '.' . name_of_port '(' port_expression_opt ')'

    IDENTIFIER  shift, and go to state 35

    name_of_port  go to state 36


State 22

   28 name_of_variable: IDENTIFIER .
  136                 | IDENTIFIER .

    ';'       reduce using rule 28 (name_of_variable)
    ';'       [reduce using rule 136 (name_of_variable)]
    ')'       reduce using rule 28 (name_of_variable)
    ')'       [reduce using rule 136 (name_of_variable)]
    '}'       reduce using rule 28 (name_of_variable)
    '}'       [reduce using rule 136 (name_of_variable)]
    '['       reduce using rule 28 (name_of_variable)
    '['       [reduce using rule 136 (name_of_variable)]
    ','       reduce using rule 28 (name_of_variable)
    ','       [reduce using rule 136 (name_of_variable)]
    '='       reduce using rule 28 (name_of_variable)
    '='       [reduce using rule 136 (name_of_variable)]
    OR        reduce using rule 28 (name_of_variable)
    OR        [reduce using rule 136 (name_of_variable)]
    $default  reduce using rule 28 (name_of_variable)


State 23

   13 list_of_ports_encl: '(' list_of_ports . ')'
   15 list_of_ports: list_of_ports . ',' port

    ')'  shift, and go to state 37
    ','  shift, and go to state 38


State 24

   14 list_of_ports: port .

    $default  reduce using rule 14 (list_of_ports)


State 25

   16 port: port_expression_opt .

    $default  reduce using rule 16 (port)


State 26

   19 port_expression_opt: port_expression .

    $default  reduce using rule 19 (port_expression_opt)


State 27

   20 port_expression: port_reference .

    $default  reduce using rule 20 (port_expression)


State 28

   24 port_reference: name_of_variable .
   25               | name_of_variable . '[' constant_expression ']'
   26               | name_of_variable . '[' constant_expression ':' constant_expression ']'

    '['  shift, and go to state 39

    $default  reduce using rule 24 (port_reference)


State 29

    9 module: MACROMODULE name_of_module list_of_ports_encl_opt ';' . module_item_list ENDMODULE

    $default  reduce using rule 6 (module_item_list)

    module_item_list  go to state 40


State 30

    8 module: MODULE name_of_module list_of_ports_encl_opt ';' . module_item_list ENDMODULE

    $default  reduce using rule 6 (module_item_list)

    module_item_list  go to state 41


State 31

  134 list_of_variables: name_of_variable .

    $default  reduce using rule 134 (list_of_variables)


State 32

   49 UDP: PRIMITIVE name_of_UDP '(' list_of_variables . ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE
  135 list_of_variables: list_of_variables . ',' name_of_variable

    ')'  shift, and go to state 42
    ','  shift, and go to state 43


State 33

   21 port_expression: '{' port_reference_list . '}'
   23 port_reference_list: port_reference_list . ',' port_reference

    '}'  shift, and go to state 44
    ','  shift, and go to state 45


State 34

   22 port_reference_list: port_reference .

    $default  reduce using rule 22 (port_reference_list)


State 35

   27 name_of_port: IDENTIFIER .

    $default  reduce using rule 27 (name_of_port)


State 36

   17 port: '.' name_of_port . '(' port_expression_opt ')'

    '('  shift, and go to state 46


State 37

   13 list_of_ports_encl: '(' list_of_ports ')' .

    $default  reduce using rule 13 (list_of_ports_encl)


State 38

   15 list_of_ports: list_of_ports ',' . port

    '{'         shift, and go to state 20
    '.'         shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    $default  reduce using rule 18 (port_expression_opt)

    port                 go to state 47
    port_expression_opt  go to state 25
    port_expression      go to state 26
    port_reference       go to state 27
    name_of_variable     go to state 28


State 39

   25 port_reference: name_of_variable '[' . constant_expression ']'
   26               | name_of_variable '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 66
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 40

    7 module_item_list: module_item_list . module_item
    9 module: MACROMODULE name_of_module list_of_ports_encl_opt ';' module_item_list . ENDMODULE

    ENDMODULE   shift, and go to state 77
    TASK        shift, and go to state 78
    FUNCTION    shift, and go to state 79
    SPECIFY     shift, and go to state 80
    INTEGER     shift, and go to state 81
    REAL        shift, and go to state 82
    TIME        shift, and go to state 83
    PARAMETER   shift, and go to state 84
    DEFPARAM    shift, and go to state 85
    INPUT       shift, and go to state 86
    OUTPUT      shift, and go to state 87
    INOUT       shift, and go to state 88
    WIRE        shift, and go to state 89
    TRI         shift, and go to state 90
    TRI0        shift, and go to state 91
    TRI1        shift, and go to state 92
    SUPPLY0     shift, and go to state 93
    SUPPLY1     shift, and go to state 94
    WAND        shift, and go to state 95
    TRIAND      shift, and go to state 96
    TRIOR       shift, and go to state 97
    WOR         shift, and go to state 98
    TRIREG      shift, and go to state 99
    REG         shift, and go to state 100
    EVENT       shift, and go to state 101
    AND         shift, and go to state 102
    NAND        shift, and go to state 103
    OR          shift, and go to state 104
    NOR         shift, and go to state 105
    XOR         shift, and go to state 106
    XNOR        shift, and go to state 107
    BUF         shift, and go to state 108
    BUFIF0      shift, and go to state 109
    BUFIF1      shift, and go to state 110
    NOT         shift, and go to state 111
    NOTIF0      shift, and go to state 112
    NOTIF1      shift, and go to state 113
    PULLDOWN    shift, and go to state 114
    PULLUP      shift, and go to state 115
    NMOS        shift, and go to state 116
    RNMOS       shift, and go to state 117
    PMOS        shift, and go to state 118
    RPMOS       shift, and go to state 119
    CMOS        shift, and go to state 120
    RCMOS       shift, and go to state 121
    TRAN        shift, and go to state 122
    RTRAN       shift, and go to state 123
    TRANIF0     shift, and go to state 124
    TRANIF1     shift, and go to state 125
    RTRANIF0    shift, and go to state 126
    RTRANIF1    shift, and go to state 127
    ASSIGN      shift, and go to state 128
    _INITIAL_   shift, and go to state 129
    ALWAYS      shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    name_of_module         go to state 132
    module_item            go to state 133
    name_of_UDP            go to state 134
    task                   go to state 135
    function               go to state 136
    parameter_declaration  go to state 137
    input_declaration      go to state 138
    output_declaration     go to state 139
    inout_declaration      go to state 140
    net_declaration        go to state 141
    NETTYPE                go to state 142
    reg_declaration        go to state 143
    time_declaration       go to state 144
    integer_declaration    go to state 145
    real_declaration       go to state 146
    event_declaration      go to state 147
    continuous_assign      go to state 148
    parameter_override     go to state 149
    gate_declaration       go to state 150
    GATETYPE               go to state 151
    UDP_instantiation      go to state 152
    module_instantiation   go to state 153
    initial_statement      go to state 154
    always_statement       go to state 155
    specify_block          go to state 156


State 41

    7 module_item_list: module_item_list . module_item
    8 module: MODULE name_of_module list_of_ports_encl_opt ';' module_item_list . ENDMODULE

    ENDMODULE   shift, and go to state 157
    TASK        shift, and go to state 78
    FUNCTION    shift, and go to state 79
    SPECIFY     shift, and go to state 80
    INTEGER     shift, and go to state 81
    REAL        shift, and go to state 82
    TIME        shift, and go to state 83
    PARAMETER   shift, and go to state 84
    DEFPARAM    shift, and go to state 85
    INPUT       shift, and go to state 86
    OUTPUT      shift, and go to state 87
    INOUT       shift, and go to state 88
    WIRE        shift, and go to state 89
    TRI         shift, and go to state 90
    TRI0        shift, and go to state 91
    TRI1        shift, and go to state 92
    SUPPLY0     shift, and go to state 93
    SUPPLY1     shift, and go to state 94
    WAND        shift, and go to state 95
    TRIAND      shift, and go to state 96
    TRIOR       shift, and go to state 97
    WOR         shift, and go to state 98
    TRIREG      shift, and go to state 99
    REG         shift, and go to state 100
    EVENT       shift, and go to state 101
    AND         shift, and go to state 102
    NAND        shift, and go to state 103
    OR          shift, and go to state 104
    NOR         shift, and go to state 105
    XOR         shift, and go to state 106
    XNOR        shift, and go to state 107
    BUF         shift, and go to state 108
    BUFIF0      shift, and go to state 109
    BUFIF1      shift, and go to state 110
    NOT         shift, and go to state 111
    NOTIF0      shift, and go to state 112
    NOTIF1      shift, and go to state 113
    PULLDOWN    shift, and go to state 114
    PULLUP      shift, and go to state 115
    NMOS        shift, and go to state 116
    RNMOS       shift, and go to state 117
    PMOS        shift, and go to state 118
    RPMOS       shift, and go to state 119
    CMOS        shift, and go to state 120
    RCMOS       shift, and go to state 121
    TRAN        shift, and go to state 122
    RTRAN       shift, and go to state 123
    TRANIF0     shift, and go to state 124
    TRANIF1     shift, and go to state 125
    RTRANIF0    shift, and go to state 126
    RTRANIF1    shift, and go to state 127
    ASSIGN      shift, and go to state 128
    _INITIAL_   shift, and go to state 129
    ALWAYS      shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    name_of_module         go to state 132
    module_item            go to state 133
    name_of_UDP            go to state 134
    task                   go to state 135
    function               go to state 136
    parameter_declaration  go to state 137
    input_declaration      go to state 138
    output_declaration     go to state 139
    inout_declaration      go to state 140
    net_declaration        go to state 141
    NETTYPE                go to state 142
    reg_declaration        go to state 143
    time_declaration       go to state 144
    integer_declaration    go to state 145
    real_declaration       go to state 146
    event_declaration      go to state 147
    continuous_assign      go to state 148
    parameter_override     go to state 149
    gate_declaration       go to state 150
    GATETYPE               go to state 151
    UDP_instantiation      go to state 152
    module_instantiation   go to state 153
    initial_statement      go to state 154
    always_statement       go to state 155
    specify_block          go to state 156


State 42

   49 UDP: PRIMITIVE name_of_UDP '(' list_of_variables ')' . ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

    ';'  shift, and go to state 158


State 43

  135 list_of_variables: list_of_variables ',' . name_of_variable

    IDENTIFIER  shift, and go to state 22

    name_of_variable  go to state 159


State 44

   21 port_expression: '{' port_reference_list '}' .

    $default  reduce using rule 21 (port_expression)


State 45

   23 port_reference_list: port_reference_list ',' . port_reference

    IDENTIFIER  shift, and go to state 22

    port_reference    go to state 160
    name_of_variable  go to state 28


State 46

   17 port: '.' name_of_port '(' . port_expression_opt ')'

    '{'         shift, and go to state 20
    IDENTIFIER  shift, and go to state 22

    $default  reduce using rule 18 (port_expression_opt)

    port_expression_opt  go to state 161
    port_expression      go to state 26
    port_reference       go to state 27
    name_of_variable     go to state 28


State 47

   15 list_of_ports: list_of_ports ',' port .

    $default  reduce using rule 15 (list_of_ports)


State 48

  445 primary: '(' . mintypmax_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    mintypmax_expression     go to state 162
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 49

  455 concatenation: '{' . expression_list '}'
  456 multiple_concatenation: '{' . expression '{' expression_list '}' '}'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression_list          go to state 164
    expression               go to state 165
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 50

  461 name_of_system_function: '$' . system_identifier

    IDENTIFIER  shift, and go to state 166

    system_identifier  go to state 167


State 51

  407 UNARY_OPERATOR: '+' .

    $default  reduce using rule 407 (UNARY_OPERATOR)


State 52

  408 UNARY_OPERATOR: '-' .

    $default  reduce using rule 408 (UNARY_OPERATOR)


State 53

  409 UNARY_OPERATOR: '!' .

    $default  reduce using rule 409 (UNARY_OPERATOR)


State 54

  410 UNARY_OPERATOR: '~' .

    $default  reduce using rule 410 (UNARY_OPERATOR)


State 55

  411 UNARY_OPERATOR: '&' .

    $default  reduce using rule 411 (UNARY_OPERATOR)


State 56

  413 UNARY_OPERATOR: '|' .

    $default  reduce using rule 413 (UNARY_OPERATOR)


State 57

  415 UNARY_OPERATOR: '^' .

    $default  reduce using rule 415 (UNARY_OPERATOR)


State 58

  412 UNARY_OPERATOR: TILDE_AMP .

    $default  reduce using rule 412 (UNARY_OPERATOR)


State 59

  414 UNARY_OPERATOR: CARET_PIPE .

    $default  reduce using rule 414 (UNARY_OPERATOR)


State 60

  416 UNARY_OPERATOR: TILDE_CARET .

    $default  reduce using rule 416 (UNARY_OPERATOR)


State 61

  406 expression: STRING .

    $default  reduce using rule 406 (expression)


State 62

   90 name_of_function: IDENTIFIER .
  462 identifier_hier: IDENTIFIER .

    ';'       reduce using rule 90 (name_of_function)
    ';'       [reduce using rule 462 (identifier_hier)]
    '('       reduce using rule 90 (name_of_function)
    '('       [reduce using rule 462 (identifier_hier)]
    $default  reduce using rule 462 (identifier_hier)


State 63

  450 number: DECIMAL_NUMBER .
  452       | DECIMAL_NUMBER . '.' UNSIGNED_NUMBER
  453       | DECIMAL_NUMBER . dot_unsigned_number_opt 'E' DECIMAL_NUMBER
  454       | DECIMAL_NUMBER . dot_unsigned_number_opt 'e' DECIMAL_NUMBER

    '.'  shift, and go to state 168

    'e'       reduce using rule 448 (dot_unsigned_number_opt)
    'E'       reduce using rule 448 (dot_unsigned_number_opt)
    $default  reduce using rule 450 (number)

    dot_unsigned_number_opt  go to state 169


State 64

  447 unsigned_number_opt: UNSIGNED_NUMBER .

    $default  reduce using rule 447 (unsigned_number_opt)


State 65

  457 function_call: name_of_function . '(' expression_list ')'

    '('  shift, and go to state 170


State 66

   25 port_reference: name_of_variable '[' constant_expression . ']'
   26               | name_of_variable '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 171
    ']'  shift, and go to state 172


State 67

  395 constant_expression: expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 395 (constant_expression)

    BINARY_OPERATOR  go to state 195


State 68

  403 expression: UNARY_OPERATOR . primary

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    primary                  go to state 196
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 69

  402 expression: primary .

    $default  reduce using rule 402 (expression)


State 70

  451 number: unsigned_number_opt . BASE UNSIGNED_NUMBER

    BASE  shift, and go to state 197


State 71

  438 primary: number .

    $default  reduce using rule 438 (primary)


State 72

  442 primary: concatenation .

    $default  reduce using rule 442 (primary)


State 73

  443 primary: multiple_concatenation .

    $default  reduce using rule 443 (primary)


State 74

  444 primary: function_call .

    $default  reduce using rule 444 (primary)


State 75

  458 function_call: name_of_system_function . '(' expression_list ')'
  459              | name_of_system_function .

    '('  shift, and go to state 198

    $default  reduce using rule 459 (function_call)


State 76

  439 primary: identifier_hier .
  440        | identifier_hier . '[' expression ']'
  441        | identifier_hier . '[' constant_expression ':' constant_expression ']'
  460 name_of_function: identifier_hier .
  463 identifier_hier: identifier_hier . '.' IDENTIFIER

    '['  shift, and go to state 199
    '.'  shift, and go to state 200

    '('       reduce using rule 460 (name_of_function)
    $default  reduce using rule 439 (primary)


State 77

    9 module: MACROMODULE name_of_module list_of_ports_encl_opt ';' module_item_list ENDMODULE .

    $default  reduce using rule 9 (module)


State 78

   82 task: TASK . name_of_task ';' tf_declaration_star statement_or_null ENDTASK

    IDENTIFIER  shift, and go to state 201

    name_of_task  go to state 202


State 79

   84 function: FUNCTION . range_or_type_opt name_of_function ';' tf_declaration_plus statement ENDFUNCTION

    '['      shift, and go to state 203
    INTEGER  shift, and go to state 204
    REAL     shift, and go to state 205

    $default  reduce using rule 85 (range_or_type_opt)

    range_or_type_opt  go to state 206
    range_or_type      go to state 207
    range              go to state 208


State 80

  297 specify_block: SPECIFY . specify_item_list ENDSPECIFY

    $default  reduce using rule 298 (specify_item_list)

    specify_item_list  go to state 209


State 81

  128 integer_declaration: INTEGER . list_of_register_variables ';'

    IDENTIFIER  shift, and go to state 210

    list_of_register_variables  go to state 211
    register_variable           go to state 212
    name_of_register            go to state 213
    name_of_memory              go to state 214


State 82

  129 real_declaration: REAL . list_of_variables ';'

    IDENTIFIER  shift, and go to state 22

    name_of_variable   go to state 31
    list_of_variables  go to state 215


State 83

  127 time_declaration: TIME . list_of_register_variables ';'

    IDENTIFIER  shift, and go to state 210

    list_of_register_variables  go to state 216
    register_variable           go to state 212
    name_of_register            go to state 213
    name_of_memory              go to state 214


State 84

  103 parameter_declaration: PARAMETER . list_of_param_assignments ';'

    IDENTIFIER  shift, and go to state 217

    list_of_param_assignments  go to state 218
    param_assignment           go to state 219
    identifier_hier            go to state 220


State 85

  133 parameter_override: DEFPARAM . list_of_param_assignments ';'

    IDENTIFIER  shift, and go to state 217

    list_of_param_assignments  go to state 221
    param_assignment           go to state 219
    identifier_hier            go to state 220


State 86

  104 input_declaration: INPUT . range_opt list_of_variables ';'

    '['  shift, and go to state 203

    $default  reduce using rule 165 (range_opt)

    range_opt  go to state 222
    range      go to state 223


State 87

  105 output_declaration: OUTPUT . range_opt list_of_variables ';'

    '['  shift, and go to state 203

    $default  reduce using rule 165 (range_opt)

    range_opt  go to state 224
    range      go to state 223


State 88

  106 inout_declaration: INOUT . range_opt list_of_variables ';'

    '['  shift, and go to state 203

    $default  reduce using rule 165 (range_opt)

    range_opt  go to state 225
    range      go to state 223


State 89

  110 NETTYPE: WIRE .

    $default  reduce using rule 110 (NETTYPE)


State 90

  111 NETTYPE: TRI .

    $default  reduce using rule 111 (NETTYPE)


State 91

  116 NETTYPE: TRI0 .

    $default  reduce using rule 116 (NETTYPE)


State 92

  112 NETTYPE: TRI1 .

    $default  reduce using rule 112 (NETTYPE)


State 93

  113 NETTYPE: SUPPLY0 .

    $default  reduce using rule 113 (NETTYPE)


State 94

  117 NETTYPE: SUPPLY1 .

    $default  reduce using rule 117 (NETTYPE)


State 95

  114 NETTYPE: WAND .

    $default  reduce using rule 114 (NETTYPE)


State 96

  115 NETTYPE: TRIAND .

    $default  reduce using rule 115 (NETTYPE)


State 97

  119 NETTYPE: TRIOR .

    $default  reduce using rule 119 (NETTYPE)


State 98

  118 NETTYPE: WOR .

    $default  reduce using rule 118 (NETTYPE)


State 99

  108 net_declaration: TRIREG . charge_strength_opt expandrange_opt delay_opt list_of_variables ';'
  120 NETTYPE: TRIREG .

    '('  shift, and go to state 226

    '('         [reduce using rule 120 (NETTYPE)]
    '['         reduce using rule 120 (NETTYPE)
    '['         [reduce using rule 146 (charge_strength_opt)]
    '#'         reduce using rule 120 (NETTYPE)
    '#'         [reduce using rule 146 (charge_strength_opt)]
    SCALARED    reduce using rule 120 (NETTYPE)
    SCALARED    [reduce using rule 146 (charge_strength_opt)]
    VECTORED    reduce using rule 120 (NETTYPE)
    VECTORED    [reduce using rule 146 (charge_strength_opt)]
    IDENTIFIER  reduce using rule 120 (NETTYPE)
    IDENTIFIER  [reduce using rule 146 (charge_strength_opt)]
    $default    reduce using rule 120 (NETTYPE)

    charge_strength_opt  go to state 227
    charge_strength      go to state 228


State 100

  126 reg_declaration: REG . range_opt list_of_register_variables ';'

    '['  shift, and go to state 203

    $default  reduce using rule 165 (range_opt)

    range_opt  go to state 229
    range      go to state 223


State 101

  130 event_declaration: EVENT . list_of_name_of_events ';'

    IDENTIFIER  shift, and go to state 230

    list_of_name_of_events  go to state 231
    name_of_event           go to state 232


State 102

  171 GATETYPE: AND .

    $default  reduce using rule 171 (GATETYPE)


State 103

  172 GATETYPE: NAND .

    $default  reduce using rule 172 (GATETYPE)


State 104

  173 GATETYPE: OR .

    $default  reduce using rule 173 (GATETYPE)


State 105

  174 GATETYPE: NOR .

    $default  reduce using rule 174 (GATETYPE)


State 106

  175 GATETYPE: XOR .

    $default  reduce using rule 175 (GATETYPE)


State 107

  176 GATETYPE: XNOR .

    $default  reduce using rule 176 (GATETYPE)


State 108

  177 GATETYPE: BUF .

    $default  reduce using rule 177 (GATETYPE)


State 109

  178 GATETYPE: BUFIF0 .

    $default  reduce using rule 178 (GATETYPE)


State 110

  179 GATETYPE: BUFIF1 .

    $default  reduce using rule 179 (GATETYPE)


State 111

  180 GATETYPE: NOT .

    $default  reduce using rule 180 (GATETYPE)


State 112

  181 GATETYPE: NOTIF0 .

    $default  reduce using rule 181 (GATETYPE)


State 113

  182 GATETYPE: NOTIF1 .

    $default  reduce using rule 182 (GATETYPE)


State 114

  183 GATETYPE: PULLDOWN .

    $default  reduce using rule 183 (GATETYPE)


State 115

  184 GATETYPE: PULLUP .

    $default  reduce using rule 184 (GATETYPE)


State 116

  185 GATETYPE: NMOS .

    $default  reduce using rule 185 (GATETYPE)


State 117

  186 GATETYPE: RNMOS .

    $default  reduce using rule 186 (GATETYPE)


State 118

  187 GATETYPE: PMOS .

    $default  reduce using rule 187 (GATETYPE)


State 119

  188 GATETYPE: RPMOS .

    $default  reduce using rule 188 (GATETYPE)


State 120

  189 GATETYPE: CMOS .

    $default  reduce using rule 189 (GATETYPE)


State 121

  190 GATETYPE: RCMOS .

    $default  reduce using rule 190 (GATETYPE)


State 122

  191 GATETYPE: TRAN .

    $default  reduce using rule 191 (GATETYPE)


State 123

  192 GATETYPE: RTRAN .

    $default  reduce using rule 192 (GATETYPE)


State 124

  193 GATETYPE: TRANIF0 .

    $default  reduce using rule 193 (GATETYPE)


State 125

  195 GATETYPE: TRANIF1 .

    $default  reduce using rule 195 (GATETYPE)


State 126

  194 GATETYPE: RTRANIF0 .

    $default  reduce using rule 194 (GATETYPE)


State 127

  196 GATETYPE: RTRANIF1 .

    $default  reduce using rule 196 (GATETYPE)


State 128

  131 continuous_assign: ASSIGN . drive_strength_opt delay_opt list_of_assignments ';'

    '('  shift, and go to state 233

    $default  reduce using rule 151 (drive_strength_opt)

    drive_strength_opt  go to state 234
    drive_strength      go to state 235


State 129

  235 initial_statement: _INITIAL_ . statement

    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement                go to state 259
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 130

  236 always_statement: ALWAYS . statement

    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement                go to state 273
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 131

   10 name_of_module: IDENTIFIER .
   50 name_of_UDP: IDENTIFIER .
  204            | IDENTIFIER .
  216 name_of_module: IDENTIFIER .

    '('         reduce using rule 50 (name_of_UDP)
    '('         [reduce using rule 204 (name_of_UDP)]
    '#'         reduce using rule 10 (name_of_module)
    '#'         [reduce using rule 50 (name_of_UDP)]
    '#'         [reduce using rule 204 (name_of_UDP)]
    '#'         [reduce using rule 216 (name_of_module)]
    IDENTIFIER  reduce using rule 10 (name_of_module)
    IDENTIFIER  [reduce using rule 50 (name_of_UDP)]
    IDENTIFIER  [reduce using rule 204 (name_of_UDP)]
    IDENTIFIER  [reduce using rule 216 (name_of_module)]
    $default    reduce using rule 10 (name_of_module)


State 132

  215 module_instantiation: name_of_module . parameter_value_assignment_opt module_instance_list ';'

    '#'  shift, and go to state 274

    $default  reduce using rule 217 (parameter_value_assignment_opt)

    parameter_value_assignment_opt  go to state 275
    parameter_value_assignment      go to state 276


State 133

    7 module_item_list: module_item_list module_item .

    $default  reduce using rule 7 (module_item_list)


State 134

  203 UDP_instantiation: name_of_UDP . drive_strength_opt delay_opt UDP_instance_list ';'

    '('  shift, and go to state 233

    '('       [reduce using rule 151 (drive_strength_opt)]
    $default  reduce using rule 151 (drive_strength_opt)

    drive_strength_opt  go to state 277
    drive_strength      go to state 235


State 135

   47 module_item: task .

    $default  reduce using rule 47 (module_item)


State 136

   48 module_item: function .

    $default  reduce using rule 48 (module_item)


State 137

   29 module_item: parameter_declaration .

    $default  reduce using rule 29 (module_item)


State 138

   30 module_item: input_declaration .

    $default  reduce using rule 30 (module_item)


State 139

   31 module_item: output_declaration .

    $default  reduce using rule 31 (module_item)


State 140

   32 module_item: inout_declaration .

    $default  reduce using rule 32 (module_item)


State 141

   33 module_item: net_declaration .

    $default  reduce using rule 33 (module_item)


State 142

  107 net_declaration: NETTYPE . expandrange_opt delay_opt list_of_variables ';'
  109                | NETTYPE . drive_strength_opt expandrange_opt delay_opt list_of_assignments ';'
  132 continuous_assign: NETTYPE . drive_strength_opt expandrange_opt delay_opt list_of_assignments ';'

    '('       shift, and go to state 233
    '['       shift, and go to state 203
    SCALARED  shift, and go to state 278
    VECTORED  shift, and go to state 279

    '{'         reduce using rule 151 (drive_strength_opt)
    '['         [reduce using rule 151 (drive_strength_opt)]
    '#'         reduce using rule 121 (expandrange_opt)
    '#'         [reduce using rule 151 (drive_strength_opt)]
    SCALARED    [reduce using rule 151 (drive_strength_opt)]
    VECTORED    [reduce using rule 151 (drive_strength_opt)]
    IDENTIFIER  reduce using rule 121 (expandrange_opt)
    IDENTIFIER  [reduce using rule 151 (drive_strength_opt)]
    $default    reduce using rule 121 (expandrange_opt)

    expandrange_opt     go to state 280
    expandrange         go to state 281
    drive_strength_opt  go to state 282
    drive_strength      go to state 235
    range               go to state 283


State 143

   34 module_item: reg_declaration .

    $default  reduce using rule 34 (module_item)


State 144

   35 module_item: time_declaration .

    $default  reduce using rule 35 (module_item)


State 145

   36 module_item: integer_declaration .

    $default  reduce using rule 36 (module_item)


State 146

   37 module_item: real_declaration .

    $default  reduce using rule 37 (module_item)


State 147

   38 module_item: event_declaration .

    $default  reduce using rule 38 (module_item)


State 148

   43 module_item: continuous_assign .

    $default  reduce using rule 43 (module_item)


State 149

   42 module_item: parameter_override .

    $default  reduce using rule 42 (module_item)


State 150

   39 module_item: gate_declaration .

    $default  reduce using rule 39 (module_item)


State 151

  170 gate_declaration: GATETYPE . drive_strength_opt delay_opt gate_instance_list ';'

    '('  shift, and go to state 233

    '('       [reduce using rule 151 (drive_strength_opt)]
    $default  reduce using rule 151 (drive_strength_opt)

    drive_strength_opt  go to state 284
    drive_strength      go to state 235


State 152

   40 module_item: UDP_instantiation .

    $default  reduce using rule 40 (module_item)


State 153

   41 module_item: module_instantiation .

    $default  reduce using rule 41 (module_item)


State 154

   45 module_item: initial_statement .

    $default  reduce using rule 45 (module_item)


State 155

   46 module_item: always_statement .

    $default  reduce using rule 46 (module_item)


State 156

   44 module_item: specify_block .

    $default  reduce using rule 44 (module_item)


State 157

    8 module: MODULE name_of_module list_of_ports_encl_opt ';' module_item_list ENDMODULE .

    $default  reduce using rule 8 (module)


State 158

   49 UDP: PRIMITIVE name_of_UDP '(' list_of_variables ')' ';' . UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

    INPUT   shift, and go to state 86
    OUTPUT  shift, and go to state 87
    REG     shift, and go to state 100

    UDP_declaration_list  go to state 285
    UDP_declaration       go to state 286
    input_declaration     go to state 287
    output_declaration    go to state 288
    reg_declaration       go to state 289


State 159

  135 list_of_variables: list_of_variables ',' name_of_variable .

    $default  reduce using rule 135 (list_of_variables)


State 160

   23 port_reference_list: port_reference_list ',' port_reference .

    $default  reduce using rule 23 (port_reference_list)


State 161

   17 port: '.' name_of_port '(' port_expression_opt . ')'

    ')'  shift, and go to state 290


State 162

  445 primary: '(' mintypmax_expression . ')'

    ')'  shift, and go to state 291


State 163

  398 mintypmax_expression: expression .
  399                     | expression . ':' expression ':' expression
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ':'          shift, and go to state 292
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 398 (mintypmax_expression)

    BINARY_OPERATOR  go to state 195


State 164

  401 expression_list: expression_list . ',' expression
  455 concatenation: '{' expression_list . '}'

    '}'  shift, and go to state 293
    ','  shift, and go to state 294


State 165

  400 expression_list: expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression
  456 multiple_concatenation: '{' expression . '{' expression_list '}' '}'

    '{'          shift, and go to state 295
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 400 (expression_list)

    BINARY_OPERATOR  go to state 195


State 166

  296 system_identifier: IDENTIFIER .

    $default  reduce using rule 296 (system_identifier)


State 167

  461 name_of_system_function: '$' system_identifier .

    $default  reduce using rule 461 (name_of_system_function)


State 168

  449 dot_unsigned_number_opt: '.' . UNSIGNED_NUMBER
  452 number: DECIMAL_NUMBER '.' . UNSIGNED_NUMBER

    UNSIGNED_NUMBER  shift, and go to state 296


State 169

  453 number: DECIMAL_NUMBER dot_unsigned_number_opt . 'E' DECIMAL_NUMBER
  454       | DECIMAL_NUMBER dot_unsigned_number_opt . 'e' DECIMAL_NUMBER

    'e'  shift, and go to state 297
    'E'  shift, and go to state 298


State 170

  457 function_call: name_of_function '(' . expression_list ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression_list          go to state 299
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 171

   26 port_reference: name_of_variable '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 301
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 172

   25 port_reference: name_of_variable '[' constant_expression ']' .

    $default  reduce using rule 25 (port_reference)


State 173

  405 expression: expression '?' . expression ':' expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 302
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 174

  417 BINARY_OPERATOR: '+' .

    $default  reduce using rule 417 (BINARY_OPERATOR)


State 175

  418 BINARY_OPERATOR: '-' .

    $default  reduce using rule 418 (BINARY_OPERATOR)


State 176

  419 BINARY_OPERATOR: '*' .

    $default  reduce using rule 419 (BINARY_OPERATOR)


State 177

  420 BINARY_OPERATOR: '/' .

    $default  reduce using rule 420 (BINARY_OPERATOR)


State 178

  421 BINARY_OPERATOR: '%' .

    $default  reduce using rule 421 (BINARY_OPERATOR)


State 179

  432 BINARY_OPERATOR: '&' .

    $default  reduce using rule 432 (BINARY_OPERATOR)


State 180

  433 BINARY_OPERATOR: '|' .

    $default  reduce using rule 433 (BINARY_OPERATOR)


State 181

  428 BINARY_OPERATOR: '<' .

    $default  reduce using rule 428 (BINARY_OPERATOR)


State 182

  430 BINARY_OPERATOR: '>' .

    $default  reduce using rule 430 (BINARY_OPERATOR)


State 183

  434 BINARY_OPERATOR: '^' .

    $default  reduce using rule 434 (BINARY_OPERATOR)


State 184

  422 BINARY_OPERATOR: EQ_EQ .

    $default  reduce using rule 422 (BINARY_OPERATOR)


State 185

  423 BINARY_OPERATOR: NOT_EQ .

    $default  reduce using rule 423 (BINARY_OPERATOR)


State 186

  424 BINARY_OPERATOR: EQ_EQ_EQ .

    $default  reduce using rule 424 (BINARY_OPERATOR)


State 187

  425 BINARY_OPERATOR: NOT_EQ_EQ .

    $default  reduce using rule 425 (BINARY_OPERATOR)


State 188

  426 BINARY_OPERATOR: AMP_AMP .

    $default  reduce using rule 426 (BINARY_OPERATOR)


State 189

  427 BINARY_OPERATOR: PIPE_PIPE .

    $default  reduce using rule 427 (BINARY_OPERATOR)


State 190

  429 BINARY_OPERATOR: LTE .

    $default  reduce using rule 429 (BINARY_OPERATOR)


State 191

  431 BINARY_OPERATOR: GTE .

    $default  reduce using rule 431 (BINARY_OPERATOR)


State 192

  435 BINARY_OPERATOR: CARET_TILDE .

    $default  reduce using rule 435 (BINARY_OPERATOR)


State 193

  437 BINARY_OPERATOR: LSHIFT .

    $default  reduce using rule 437 (BINARY_OPERATOR)


State 194

  436 BINARY_OPERATOR: RSHIFT .

    $default  reduce using rule 436 (BINARY_OPERATOR)


State 195

  404 expression: expression BINARY_OPERATOR . expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 303
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 196

  403 expression: UNARY_OPERATOR primary .

    $default  reduce using rule 403 (expression)


State 197

  451 number: unsigned_number_opt BASE . UNSIGNED_NUMBER

    UNSIGNED_NUMBER  shift, and go to state 304


State 198

  458 function_call: name_of_system_function '(' . expression_list ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression_list          go to state 305
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 199

  440 primary: identifier_hier '[' . expression ']'
  441        | identifier_hier '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 306
    expression               go to state 307
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 200

  463 identifier_hier: identifier_hier '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 308


State 201

   83 name_of_task: IDENTIFIER .

    $default  reduce using rule 83 (name_of_task)


State 202

   82 task: TASK name_of_task . ';' tf_declaration_star statement_or_null ENDTASK

    ';'  shift, and go to state 309


State 203

  167 range: '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 310
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 204

   88 range_or_type: INTEGER .

    $default  reduce using rule 88 (range_or_type)


State 205

   89 range_or_type: REAL .

    $default  reduce using rule 89 (range_or_type)


State 206

   84 function: FUNCTION range_or_type_opt . name_of_function ';' tf_declaration_plus statement ENDFUNCTION

    IDENTIFIER  shift, and go to state 62

    name_of_function  go to state 311
    identifier_hier   go to state 312


State 207

   86 range_or_type_opt: range_or_type .

    $default  reduce using rule 86 (range_or_type_opt)


State 208

   87 range_or_type: range .

    $default  reduce using rule 87 (range_or_type)


State 209

  297 specify_block: SPECIFY specify_item_list . ENDSPECIFY
  299 specify_item_list: specify_item_list . specify_item

    '('         shift, and go to state 313
    '$'         shift, and go to state 314
    ENDSPECIFY  shift, and go to state 315
    SPECPARAM   shift, and go to state 316
    IF          shift, and go to state 317

    '('  [reduce using rule 379 (if_expression_opt)]

    specify_item                      go to state 318
    specparam_declaration             go to state 319
    path_declaration                  go to state 320
    path_description                  go to state 321
    system_timing_check               go to state 322
    level_sensitive_path_declaration  go to state 323
    if_expression_opt                 go to state 324
    edge_sensitive_path_declaration   go to state 325
    sdpd                              go to state 326


State 210

  141 name_of_register: IDENTIFIER .
  142 name_of_memory: IDENTIFIER .

    '['       reduce using rule 142 (name_of_memory)
    $default  reduce using rule 141 (name_of_register)


State 211

  128 integer_declaration: INTEGER list_of_register_variables . ';'
  138 list_of_register_variables: list_of_register_variables . ',' register_variable

    ';'  shift, and go to state 327
    ','  shift, and go to state 328


State 212

  137 list_of_register_variables: register_variable .

    $default  reduce using rule 137 (list_of_register_variables)


State 213

  139 register_variable: name_of_register .

    $default  reduce using rule 139 (register_variable)


State 214

  140 register_variable: name_of_memory . '[' constant_expression ':' constant_expression ']'

    '['  shift, and go to state 329


State 215

  129 real_declaration: REAL list_of_variables . ';'
  135 list_of_variables: list_of_variables . ',' name_of_variable

    ';'  shift, and go to state 330
    ','  shift, and go to state 43


State 216

  127 time_declaration: TIME list_of_register_variables . ';'
  138 list_of_register_variables: list_of_register_variables . ',' register_variable

    ';'  shift, and go to state 331
    ','  shift, and go to state 328


State 217

  462 identifier_hier: IDENTIFIER .

    $default  reduce using rule 462 (identifier_hier)


State 218

  103 parameter_declaration: PARAMETER list_of_param_assignments . ';'
  308 list_of_param_assignments: list_of_param_assignments . ',' param_assignment

    ';'  shift, and go to state 332
    ','  shift, and go to state 333


State 219

  307 list_of_param_assignments: param_assignment .

    $default  reduce using rule 307 (list_of_param_assignments)


State 220

  309 param_assignment: identifier_hier . '=' constant_expression
  463 identifier_hier: identifier_hier . '.' IDENTIFIER

    '.'  shift, and go to state 200
    '='  shift, and go to state 334


State 221

  133 parameter_override: DEFPARAM list_of_param_assignments . ';'
  308 list_of_param_assignments: list_of_param_assignments . ',' param_assignment

    ';'  shift, and go to state 335
    ','  shift, and go to state 333


State 222

  104 input_declaration: INPUT range_opt . list_of_variables ';'

    IDENTIFIER  shift, and go to state 22

    name_of_variable   go to state 31
    list_of_variables  go to state 336


State 223

  166 range_opt: range .

    $default  reduce using rule 166 (range_opt)


State 224

  105 output_declaration: OUTPUT range_opt . list_of_variables ';'

    IDENTIFIER  shift, and go to state 22

    name_of_variable   go to state 31
    list_of_variables  go to state 337


State 225

  106 inout_declaration: INOUT range_opt . list_of_variables ';'

    IDENTIFIER  shift, and go to state 22

    name_of_variable   go to state 31
    list_of_variables  go to state 338


State 226

  148 charge_strength: '(' . SMALL ')'
  149                | '(' . MEDIUM ')'
  150                | '(' . LARGE ')'

    SMALL   shift, and go to state 339
    MEDIUM  shift, and go to state 340
    LARGE   shift, and go to state 341


State 227

  108 net_declaration: TRIREG charge_strength_opt . expandrange_opt delay_opt list_of_variables ';'

    '['       shift, and go to state 203
    SCALARED  shift, and go to state 278
    VECTORED  shift, and go to state 279

    $default  reduce using rule 121 (expandrange_opt)

    expandrange_opt  go to state 342
    expandrange      go to state 281
    range            go to state 283


State 228

  147 charge_strength_opt: charge_strength .

    $default  reduce using rule 147 (charge_strength_opt)


State 229

  126 reg_declaration: REG range_opt . list_of_register_variables ';'

    IDENTIFIER  shift, and go to state 210

    list_of_register_variables  go to state 343
    register_variable           go to state 212
    name_of_register            go to state 213
    name_of_memory              go to state 214


State 230

  145 name_of_event: IDENTIFIER .

    $default  reduce using rule 145 (name_of_event)


State 231

  130 event_declaration: EVENT list_of_name_of_events . ';'
  144 list_of_name_of_events: list_of_name_of_events . ',' name_of_event

    ';'  shift, and go to state 344
    ','  shift, and go to state 345


State 232

  143 list_of_name_of_events: name_of_event .

    $default  reduce using rule 143 (list_of_name_of_events)


State 233

  153 drive_strength: '(' . STRENGTH0 ',' STRENGTH1 ')'
  154               | '(' . STRENGTH1 ',' STRENGTH0 ')'

    SUPPLY0  shift, and go to state 346
    SUPPLY1  shift, and go to state 347
    STRONG0  shift, and go to state 348
    STRONG1  shift, and go to state 349
    PULL0    shift, and go to state 350
    PULL1    shift, and go to state 351
    WEAK0    shift, and go to state 352
    WEAK1    shift, and go to state 353
    HIGHZ0   shift, and go to state 354
    HIGHZ1   shift, and go to state 355

    STRENGTH0  go to state 356
    STRENGTH1  go to state 357


State 234

  131 continuous_assign: ASSIGN drive_strength_opt . delay_opt list_of_assignments ';'

    '#'  shift, and go to state 358

    $default  reduce using rule 464 (delay_opt)

    delay_opt  go to state 359
    delay      go to state 360


State 235

  152 drive_strength_opt: drive_strength .

    $default  reduce using rule 152 (drive_strength_opt)


State 236

  455 concatenation: '{' . expression_list '}'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression_list          go to state 164
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 237

  472 event_control: '@' . identifier_hier
  473              | '@' . '(' event_expression ')'

    '('         shift, and go to state 361
    IDENTIFIER  shift, and go to state 217

    identifier_hier  go to state 362


State 238

  469 delay_control: '#' . number
  470              | '#' . identifier_hier
  471              | '#' . '(' mintypmax_expression ')'

    '('              shift, and go to state 363
    IDENTIFIER       shift, and go to state 217
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    unsigned_number_opt  go to state 70
    number               go to state 364
    identifier_hier      go to state 365


State 239

  295 name_of_system_task: '$' . system_identifier

    IDENTIFIER  shift, and go to state 166

    system_identifier  go to state 366


State 240

  254 statement: HYPH_GT . name_of_event ';'

    IDENTIFIER  shift, and go to state 230

    name_of_event  go to state 367


State 241

  278 seq_block: _BEGIN_ . statement_list END
  279          | _BEGIN_ . ':' name_of_block block_declaration_list statement_list END

    ':'  shift, and go to state 368

    $default  reduce using rule 239 (statement_list)

    statement_list  go to state 369


State 242

  261 statement: ASSIGN . assignment ';'

    '{'         shift, and go to state 236
    IDENTIFIER  shift, and go to state 217

    assignment       go to state 370
    lvalue           go to state 371
    concatenation    go to state 269
    identifier_hier  go to state 270


State 243

  262 statement: DEASSIGN . lvalue ';'

    '{'         shift, and go to state 236
    IDENTIFIER  shift, and go to state 217

    lvalue           go to state 372
    concatenation    go to state 269
    identifier_hier  go to state 270


State 244

  243 statement: IF . '(' expression ')' statement_or_null
  244          | IF . '(' expression ')' statement_or_null ELSE statement_or_null

    '('  shift, and go to state 373


State 245

  245 statement: CASE . '(' expression ')' case_item_list ENDCASE

    '('  shift, and go to state 374


State 246

  246 statement: CASEZ . '(' expression ')' case_item_list ENDCASE

    '('  shift, and go to state 375


State 247

  247 statement: CASEX . '(' expression ')' case_item_list ENDCASE

    '('  shift, and go to state 376


State 248

  248 statement: FOREVER . statement

    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement                go to state 377
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 249

  249 statement: REPEAT . '(' expression ')' statement
  272 delay_or_event_control: REPEAT . '(' expression ')' event_control

    '('  shift, and go to state 378


State 250

  250 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 379


State 251

  251 statement: FOR . '(' assignment ';' expression ';' assignment ')' statement

    '('  shift, and go to state 380


State 252

  253 statement: WAIT . '(' expression ')' statement_or_null

    '('  shift, and go to state 381


State 253

  259 statement: DISABLE . name_of_task ';'
  260          | DISABLE . name_of_block ';'

    IDENTIFIER  shift, and go to state 382

    name_of_task   go to state 383
    name_of_block  go to state 384


State 254

  263 statement: FORCE . assignment ';'

    '{'         shift, and go to state 236
    IDENTIFIER  shift, and go to state 217

    assignment       go to state 385
    lvalue           go to state 371
    concatenation    go to state 269
    identifier_hier  go to state 270


State 255

  264 statement: RELEASE . lvalue ';'

    '{'         shift, and go to state 236
    IDENTIFIER  shift, and go to state 217

    lvalue           go to state 386
    concatenation    go to state 269
    identifier_hier  go to state 270


State 256

  280 par_block: FORK . statement_list JOIN
  281          | FORK . ':' name_of_block block_declaration_list statement_list JOIN

    ':'  shift, and go to state 387

    $default  reduce using rule 239 (statement_list)

    statement_list  go to state 388


State 257

   83 name_of_task: IDENTIFIER .
  462 identifier_hier: IDENTIFIER .

    '['       reduce using rule 462 (identifier_hier)
    '.'       reduce using rule 462 (identifier_hier)
    '='       reduce using rule 462 (identifier_hier)
    LTE       reduce using rule 462 (identifier_hier)
    $default  reduce using rule 83 (name_of_task)


State 258

  291 task_enable: name_of_task .
  292            | name_of_task . '(' expression_list ')' ';'

    '('  shift, and go to state 389

    '('       [reduce using rule 291 (task_enable)]
    $default  reduce using rule 291 (task_enable)


State 259

  235 initial_statement: _INITIAL_ statement .

    $default  reduce using rule 235 (initial_statement)


State 260

  241 statement: blocking_assignment . ';'

    ';'  shift, and go to state 390


State 261

  242 statement: non_blocking_assignment . ';'

    ';'  shift, and go to state 391


State 262

  252 statement: delay_or_event_control . statement_or_null

    ';'         shift, and go to state 392
    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement_or_null        go to state 393
    statement                go to state 394
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 263

  255 statement: seq_block .

    $default  reduce using rule 255 (statement)


State 264

  256 statement: par_block .

    $default  reduce using rule 256 (statement)


State 265

  257 statement: task_enable .

    $default  reduce using rule 257 (statement)


State 266

  258 statement: system_task_enable .

    $default  reduce using rule 258 (statement)


State 267

  293 system_task_enable: name_of_system_task . ';'
  294                   | name_of_system_task . '(' expression_list ')' ';'

    ';'  shift, and go to state 395
    '('  shift, and go to state 396


State 268

  266 blocking_assignment: lvalue . '=' expression
  267                    | lvalue . '=' delay_or_event_control expression ';'
  268 non_blocking_assignment: lvalue . LTE expression
  269                        | lvalue . '=' delay_or_event_control expression ';'

    '='  shift, and go to state 397
    LTE  shift, and go to state 398


State 269

  394 lvalue: concatenation .

    $default  reduce using rule 394 (lvalue)


State 270

  391 lvalue: identifier_hier .
  392       | identifier_hier . '[' expression ']'
  393       | identifier_hier . '[' constant_expression ':' constant_expression ']'
  463 identifier_hier: identifier_hier . '.' IDENTIFIER

    '['  shift, and go to state 399
    '.'  shift, and go to state 200

    $default  reduce using rule 391 (lvalue)


State 271

  270 delay_or_event_control: delay_control .

    $default  reduce using rule 270 (delay_or_event_control)


State 272

  271 delay_or_event_control: event_control .

    $default  reduce using rule 271 (delay_or_event_control)


State 273

  236 always_statement: ALWAYS statement .

    $default  reduce using rule 236 (always_statement)


State 274

  219 parameter_value_assignment: '#' . '(' expression_list ')'

    '('  shift, and go to state 400


State 275

  215 module_instantiation: name_of_module parameter_value_assignment_opt . module_instance_list ';'

    IDENTIFIER  shift, and go to state 401

    module_instance_list  go to state 402
    module_instance       go to state 403
    name_of_instance      go to state 404


State 276

  218 parameter_value_assignment_opt: parameter_value_assignment .

    $default  reduce using rule 218 (parameter_value_assignment_opt)


State 277

  203 UDP_instantiation: name_of_UDP drive_strength_opt . delay_opt UDP_instance_list ';'

    '#'  shift, and go to state 358

    $default  reduce using rule 464 (delay_opt)

    delay_opt  go to state 405
    delay      go to state 360


State 278

  124 expandrange: SCALARED . range

    '['  shift, and go to state 203

    range  go to state 406


State 279

  125 expandrange: VECTORED . range

    '['  shift, and go to state 203

    range  go to state 407


State 280

  107 net_declaration: NETTYPE expandrange_opt . delay_opt list_of_variables ';'

    '#'  shift, and go to state 358

    $default  reduce using rule 464 (delay_opt)

    delay_opt  go to state 408
    delay      go to state 360


State 281

  122 expandrange_opt: expandrange .

    $default  reduce using rule 122 (expandrange_opt)


State 282

  109 net_declaration: NETTYPE drive_strength_opt . expandrange_opt delay_opt list_of_assignments ';'
  132 continuous_assign: NETTYPE drive_strength_opt . expandrange_opt delay_opt list_of_assignments ';'

    '['       shift, and go to state 203
    SCALARED  shift, and go to state 278
    VECTORED  shift, and go to state 279

    $default  reduce using rule 121 (expandrange_opt)

    expandrange_opt  go to state 409
    expandrange      go to state 281
    range            go to state 283


State 283

  123 expandrange: range .

    $default  reduce using rule 123 (expandrange)


State 284

  170 gate_declaration: GATETYPE drive_strength_opt . delay_opt gate_instance_list ';'

    '#'  shift, and go to state 358

    $default  reduce using rule 464 (delay_opt)

    delay_opt  go to state 410
    delay      go to state 360


State 285

   49 UDP: PRIMITIVE name_of_UDP '(' list_of_variables ')' ';' UDP_declaration_list . UDP_initial_statement_opt table_definition ENDPRIMITIVE
   52 UDP_declaration_list: UDP_declaration_list . UDP_declaration

    INPUT      shift, and go to state 86
    OUTPUT     shift, and go to state 87
    REG        shift, and go to state 100
    _INITIAL_  shift, and go to state 411

    $default  reduce using rule 56 (UDP_initial_statement_opt)

    UDP_declaration            go to state 412
    UDP_initial_statement_opt  go to state 413
    UDP_initial_statement      go to state 414
    input_declaration          go to state 287
    output_declaration         go to state 288
    reg_declaration            go to state 289


State 286

   51 UDP_declaration_list: UDP_declaration .

    $default  reduce using rule 51 (UDP_declaration_list)


State 287

   55 UDP_declaration: input_declaration .

    $default  reduce using rule 55 (UDP_declaration)


State 288

   53 UDP_declaration: output_declaration .

    $default  reduce using rule 53 (UDP_declaration)


State 289

   54 UDP_declaration: reg_declaration .

    $default  reduce using rule 54 (UDP_declaration)


State 290

   17 port: '.' name_of_port '(' port_expression_opt ')' .

    $default  reduce using rule 17 (port)


State 291

  445 primary: '(' mintypmax_expression ')' .

    $default  reduce using rule 445 (primary)


State 292

  399 mintypmax_expression: expression ':' . expression ':' expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 415
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 293

  455 concatenation: '{' expression_list '}' .

    $default  reduce using rule 455 (concatenation)


State 294

  401 expression_list: expression_list ',' . expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 416
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 295

  456 multiple_concatenation: '{' expression '{' . expression_list '}' '}'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression_list          go to state 417
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 296

  449 dot_unsigned_number_opt: '.' UNSIGNED_NUMBER .
  452 number: DECIMAL_NUMBER '.' UNSIGNED_NUMBER .

    'e'       reduce using rule 449 (dot_unsigned_number_opt)
    'E'       reduce using rule 449 (dot_unsigned_number_opt)
    $default  reduce using rule 452 (number)


State 297

  454 number: DECIMAL_NUMBER dot_unsigned_number_opt 'e' . DECIMAL_NUMBER

    DECIMAL_NUMBER  shift, and go to state 418


State 298

  453 number: DECIMAL_NUMBER dot_unsigned_number_opt 'E' . DECIMAL_NUMBER

    DECIMAL_NUMBER  shift, and go to state 419


State 299

  401 expression_list: expression_list . ',' expression
  457 function_call: name_of_function '(' expression_list . ')'

    ')'  shift, and go to state 420
    ','  shift, and go to state 294


State 300

  400 expression_list: expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 400 (expression_list)

    BINARY_OPERATOR  go to state 195


State 301

   26 port_reference: name_of_variable '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 421


State 302

  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression
  405           | expression '?' expression . ':' expression

    ':'          shift, and go to state 422
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 303

  404 expression: expression . BINARY_OPERATOR expression
  404           | expression BINARY_OPERATOR expression .
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    '?'          [reduce using rule 404 (expression)]
    '+'          [reduce using rule 404 (expression)]
    '-'          [reduce using rule 404 (expression)]
    '*'          [reduce using rule 404 (expression)]
    '/'          [reduce using rule 404 (expression)]
    '%'          [reduce using rule 404 (expression)]
    '&'          [reduce using rule 404 (expression)]
    '|'          [reduce using rule 404 (expression)]
    '<'          [reduce using rule 404 (expression)]
    '>'          [reduce using rule 404 (expression)]
    '^'          [reduce using rule 404 (expression)]
    EQ_EQ        [reduce using rule 404 (expression)]
    NOT_EQ       [reduce using rule 404 (expression)]
    EQ_EQ_EQ     [reduce using rule 404 (expression)]
    NOT_EQ_EQ    [reduce using rule 404 (expression)]
    AMP_AMP      [reduce using rule 404 (expression)]
    PIPE_PIPE    [reduce using rule 404 (expression)]
    LTE          [reduce using rule 404 (expression)]
    GTE          [reduce using rule 404 (expression)]
    CARET_TILDE  [reduce using rule 404 (expression)]
    LSHIFT       [reduce using rule 404 (expression)]
    RSHIFT       [reduce using rule 404 (expression)]
    $default     reduce using rule 404 (expression)

    BINARY_OPERATOR  go to state 195


State 304

  451 number: unsigned_number_opt BASE UNSIGNED_NUMBER .

    $default  reduce using rule 451 (number)


State 305

  401 expression_list: expression_list . ',' expression
  458 function_call: name_of_system_function '(' expression_list . ')'

    ')'  shift, and go to state 423
    ','  shift, and go to state 294


State 306

  441 primary: identifier_hier '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 424


State 307

  395 constant_expression: expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression
  440 primary: identifier_hier '[' expression . ']'

    ']'          shift, and go to state 425
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 395 (constant_expression)

    BINARY_OPERATOR  go to state 195


State 308

  463 identifier_hier: identifier_hier '.' IDENTIFIER .

    $default  reduce using rule 463 (identifier_hier)


State 309

   82 task: TASK name_of_task ';' . tf_declaration_star statement_or_null ENDTASK

    $default  reduce using rule 91 (tf_declaration_star)

    tf_declaration_star  go to state 426


State 310

  167 range: '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 427


State 311

   84 function: FUNCTION range_or_type_opt name_of_function . ';' tf_declaration_plus statement ENDFUNCTION

    ';'  shift, and go to state 428


State 312

  460 name_of_function: identifier_hier .
  463 identifier_hier: identifier_hier . '.' IDENTIFIER

    '.'  shift, and go to state 200

    $default  reduce using rule 460 (name_of_function)


State 313

  311 path_description: '(' . specify_input_terminal_descriptor EQ_GT specify_output_terminal_descriptor ')'
  312                 | '(' . list_of_path_inputs AST_GT list_of_path_outputs ')'

    IDENTIFIER  shift, and go to state 429

    list_of_path_inputs                     go to state 430
    specify_input_terminal_descriptor_list  go to state 431
    specify_input_terminal_descriptor       go to state 432
    input_identifier                        go to state 433


State 314

  335 system_timing_check: '$' . SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  336                    | '$' . HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  337                    | '$' . PERIOD '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  338                    | '$' . WIDTH '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'
  339                    | '$' . SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  340                    | '$' . RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  341                    | '$' . SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    SETUP      shift, and go to state 434
    HOLD       shift, and go to state 435
    PERIOD     shift, and go to state 436
    WIDTH      shift, and go to state 437
    SKEW       shift, and go to state 438
    RECOVERY   shift, and go to state 439
    SETUPHOLD  shift, and go to state 440


State 315

  297 specify_block: SPECIFY specify_item_list ENDSPECIFY .

    $default  reduce using rule 297 (specify_block)


State 316

  306 specparam_declaration: SPECPARAM . list_of_param_assignments ';'

    IDENTIFIER  shift, and go to state 217

    list_of_param_assignments  go to state 441
    param_assignment           go to state 219
    identifier_hier            go to state 220


State 317

  370 level_sensitive_path_declaration: IF . '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  371                                 | IF . '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'
  380 if_expression_opt: IF . '(' expression ')'
  388 sdpd: IF . '(' sdpd_conditional_expression ')' path_description '=' path_delay_value ';'

    '('  shift, and go to state 442


State 318

  299 specify_item_list: specify_item_list specify_item .

    $default  reduce using rule 299 (specify_item_list)


State 319

  300 specify_item: specparam_declaration .

    $default  reduce using rule 300 (specify_item)


State 320

  301 specify_item: path_declaration .

    $default  reduce using rule 301 (specify_item)


State 321

  310 path_declaration: path_description . '=' path_delay_value ';'

    '='  shift, and go to state 443


State 322

  304 specify_item: system_timing_check .

    $default  reduce using rule 304 (specify_item)


State 323

  302 specify_item: level_sensitive_path_declaration .

    $default  reduce using rule 302 (specify_item)


State 324

  381 edge_sensitive_path_declaration: if_expression_opt . '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'
  382                                | if_expression_opt . '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    '('  shift, and go to state 444


State 325

  303 specify_item: edge_sensitive_path_declaration .

    $default  reduce using rule 303 (specify_item)


State 326

  305 specify_item: sdpd .

    $default  reduce using rule 305 (specify_item)


State 327

  128 integer_declaration: INTEGER list_of_register_variables ';' .

    $default  reduce using rule 128 (integer_declaration)


State 328

  138 list_of_register_variables: list_of_register_variables ',' . register_variable

    IDENTIFIER  shift, and go to state 210

    register_variable  go to state 445
    name_of_register   go to state 213
    name_of_memory     go to state 214


State 329

  140 register_variable: name_of_memory '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 446
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 330

  129 real_declaration: REAL list_of_variables ';' .

    $default  reduce using rule 129 (real_declaration)


State 331

  127 time_declaration: TIME list_of_register_variables ';' .

    $default  reduce using rule 127 (time_declaration)


State 332

  103 parameter_declaration: PARAMETER list_of_param_assignments ';' .

    $default  reduce using rule 103 (parameter_declaration)


State 333

  308 list_of_param_assignments: list_of_param_assignments ',' . param_assignment

    IDENTIFIER  shift, and go to state 217

    param_assignment  go to state 447
    identifier_hier   go to state 220


State 334

  309 param_assignment: identifier_hier '=' . constant_expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 448
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 335

  133 parameter_override: DEFPARAM list_of_param_assignments ';' .

    $default  reduce using rule 133 (parameter_override)


State 336

  104 input_declaration: INPUT range_opt list_of_variables . ';'
  135 list_of_variables: list_of_variables . ',' name_of_variable

    ';'  shift, and go to state 449
    ','  shift, and go to state 43


State 337

  105 output_declaration: OUTPUT range_opt list_of_variables . ';'
  135 list_of_variables: list_of_variables . ',' name_of_variable

    ';'  shift, and go to state 450
    ','  shift, and go to state 43


State 338

  106 inout_declaration: INOUT range_opt list_of_variables . ';'
  135 list_of_variables: list_of_variables . ',' name_of_variable

    ';'  shift, and go to state 451
    ','  shift, and go to state 43


State 339

  148 charge_strength: '(' SMALL . ')'

    ')'  shift, and go to state 452


State 340

  149 charge_strength: '(' MEDIUM . ')'

    ')'  shift, and go to state 453


State 341

  150 charge_strength: '(' LARGE . ')'

    ')'  shift, and go to state 454


State 342

  108 net_declaration: TRIREG charge_strength_opt expandrange_opt . delay_opt list_of_variables ';'

    '#'  shift, and go to state 358

    $default  reduce using rule 464 (delay_opt)

    delay_opt  go to state 455
    delay      go to state 360


State 343

  126 reg_declaration: REG range_opt list_of_register_variables . ';'
  138 list_of_register_variables: list_of_register_variables . ',' register_variable

    ';'  shift, and go to state 456
    ','  shift, and go to state 328


State 344

  130 event_declaration: EVENT list_of_name_of_events ';' .

    $default  reduce using rule 130 (event_declaration)


State 345

  144 list_of_name_of_events: list_of_name_of_events ',' . name_of_event

    IDENTIFIER  shift, and go to state 230

    name_of_event  go to state 457


State 346

  155 STRENGTH0: SUPPLY0 .

    $default  reduce using rule 155 (STRENGTH0)


State 347

  160 STRENGTH1: SUPPLY1 .

    $default  reduce using rule 160 (STRENGTH1)


State 348

  156 STRENGTH0: STRONG0 .

    $default  reduce using rule 156 (STRENGTH0)


State 349

  161 STRENGTH1: STRONG1 .

    $default  reduce using rule 161 (STRENGTH1)


State 350

  157 STRENGTH0: PULL0 .

    $default  reduce using rule 157 (STRENGTH0)


State 351

  162 STRENGTH1: PULL1 .

    $default  reduce using rule 162 (STRENGTH1)


State 352

  158 STRENGTH0: WEAK0 .

    $default  reduce using rule 158 (STRENGTH0)


State 353

  163 STRENGTH1: WEAK1 .

    $default  reduce using rule 163 (STRENGTH1)


State 354

  159 STRENGTH0: HIGHZ0 .

    $default  reduce using rule 159 (STRENGTH0)


State 355

  164 STRENGTH1: HIGHZ1 .

    $default  reduce using rule 164 (STRENGTH1)


State 356

  153 drive_strength: '(' STRENGTH0 . ',' STRENGTH1 ')'

    ','  shift, and go to state 458


State 357

  154 drive_strength: '(' STRENGTH1 . ',' STRENGTH0 ')'

    ','  shift, and go to state 459


State 358

  466 delay: '#' . number
  467      | '#' . identifier_hier
  468      | '#' . '(' mintypmax_expression comma_mintypmax_expression_opt comma_mintypmax_expression_opt ')'

    '('              shift, and go to state 460
    IDENTIFIER       shift, and go to state 217
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    unsigned_number_opt  go to state 70
    number               go to state 461
    identifier_hier      go to state 462


State 359

  131 continuous_assign: ASSIGN drive_strength_opt delay_opt . list_of_assignments ';'

    '{'         shift, and go to state 236
    IDENTIFIER  shift, and go to state 217

    list_of_assignments  go to state 463
    assignment           go to state 464
    lvalue               go to state 371
    concatenation        go to state 269
    identifier_hier      go to state 270


State 360

  465 delay_opt: delay .

    $default  reduce using rule 465 (delay_opt)


State 361

  473 event_control: '@' '(' . event_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    POSEDGE          shift, and go to state 465
    NEGEDGE          shift, and go to state 466
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 467
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76
    event_expression         go to state 468


State 362

  463 identifier_hier: identifier_hier . '.' IDENTIFIER
  472 event_control: '@' identifier_hier .

    '.'  shift, and go to state 200

    $default  reduce using rule 472 (event_control)


State 363

  471 delay_control: '#' '(' . mintypmax_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    mintypmax_expression     go to state 469
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 364

  469 delay_control: '#' number .

    $default  reduce using rule 469 (delay_control)


State 365

  463 identifier_hier: identifier_hier . '.' IDENTIFIER
  470 delay_control: '#' identifier_hier .

    '.'  shift, and go to state 200

    $default  reduce using rule 470 (delay_control)


State 366

  295 name_of_system_task: '$' system_identifier .

    $default  reduce using rule 295 (name_of_system_task)


State 367

  254 statement: HYPH_GT name_of_event . ';'

    ';'  shift, and go to state 470


State 368

  279 seq_block: _BEGIN_ ':' . name_of_block block_declaration_list statement_list END

    IDENTIFIER  shift, and go to state 471

    name_of_block  go to state 472


State 369

  240 statement_list: statement_list . statement
  278 seq_block: _BEGIN_ statement_list . END

    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    END         shift, and go to state 473
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement                go to state 474
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 370

  261 statement: ASSIGN assignment . ';'

    ';'  shift, and go to state 475


State 371

  265 assignment: lvalue . '=' expression

    '='  shift, and go to state 476


State 372

  262 statement: DEASSIGN lvalue . ';'

    ';'  shift, and go to state 477


State 373

  243 statement: IF '(' . expression ')' statement_or_null
  244          | IF '(' . expression ')' statement_or_null ELSE statement_or_null

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 478
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 374

  245 statement: CASE '(' . expression ')' case_item_list ENDCASE

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 479
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 375

  246 statement: CASEZ '(' . expression ')' case_item_list ENDCASE

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 480
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 376

  247 statement: CASEX '(' . expression ')' case_item_list ENDCASE

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 481
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 377

  248 statement: FOREVER statement .

    $default  reduce using rule 248 (statement)


State 378

  249 statement: REPEAT '(' . expression ')' statement
  272 delay_or_event_control: REPEAT '(' . expression ')' event_control

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 482
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 379

  250 statement: WHILE '(' . expression ')' statement

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 483
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 380

  251 statement: FOR '(' . assignment ';' expression ';' assignment ')' statement

    '{'         shift, and go to state 236
    IDENTIFIER  shift, and go to state 217

    assignment       go to state 484
    lvalue           go to state 371
    concatenation    go to state 269
    identifier_hier  go to state 270


State 381

  253 statement: WAIT '(' . expression ')' statement_or_null

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 485
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 382

   83 name_of_task: IDENTIFIER .
  282 name_of_block: IDENTIFIER .

    ';'       reduce using rule 83 (name_of_task)
    ';'       [reduce using rule 282 (name_of_block)]
    $default  reduce using rule 83 (name_of_task)


State 383

  259 statement: DISABLE name_of_task . ';'

    ';'  shift, and go to state 486


State 384

  260 statement: DISABLE name_of_block . ';'

    ';'  shift, and go to state 487


State 385

  263 statement: FORCE assignment . ';'

    ';'  shift, and go to state 488


State 386

  264 statement: RELEASE lvalue . ';'

    ';'  shift, and go to state 489


State 387

  281 par_block: FORK ':' . name_of_block block_declaration_list statement_list JOIN

    IDENTIFIER  shift, and go to state 471

    name_of_block  go to state 490


State 388

  240 statement_list: statement_list . statement
  280 par_block: FORK statement_list . JOIN

    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    JOIN        shift, and go to state 491
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement                go to state 474
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 389

  292 task_enable: name_of_task '(' . expression_list ')' ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression_list          go to state 492
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 390

  241 statement: blocking_assignment ';' .

    $default  reduce using rule 241 (statement)


State 391

  242 statement: non_blocking_assignment ';' .

    $default  reduce using rule 242 (statement)


State 392

  238 statement_or_null: ';' .

    $default  reduce using rule 238 (statement_or_null)


State 393

  252 statement: delay_or_event_control statement_or_null .

    $default  reduce using rule 252 (statement)


State 394

  237 statement_or_null: statement .

    $default  reduce using rule 237 (statement_or_null)


State 395

  293 system_task_enable: name_of_system_task ';' .

    $default  reduce using rule 293 (system_task_enable)


State 396

  294 system_task_enable: name_of_system_task '(' . expression_list ')' ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression_list          go to state 493
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 397

  266 blocking_assignment: lvalue '=' . expression
  267                    | lvalue '=' . delay_or_event_control expression ';'
  269 non_blocking_assignment: lvalue '=' . delay_or_event_control expression ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '@'              shift, and go to state 237
    '#'              shift, and go to state 238
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    REPEAT           shift, and go to state 494
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    delay_or_event_control   go to state 495
    expression               go to state 496
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76
    delay_control            go to state 271
    event_control            go to state 272


State 398

  268 non_blocking_assignment: lvalue LTE . expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 497
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 399

  392 lvalue: identifier_hier '[' . expression ']'
  393       | identifier_hier '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 498
    expression               go to state 499
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 400

  219 parameter_value_assignment: '#' '(' . expression_list ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression_list          go to state 500
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 401

  223 name_of_instance: IDENTIFIER . range_opt

    '['  shift, and go to state 203

    $default  reduce using rule 165 (range_opt)

    range_opt  go to state 501
    range      go to state 223


State 402

  215 module_instantiation: name_of_module parameter_value_assignment_opt module_instance_list . ';'
  221 module_instance_list: module_instance_list . ',' module_instance

    ';'  shift, and go to state 502
    ','  shift, and go to state 503


State 403

  220 module_instance_list: module_instance .

    $default  reduce using rule 220 (module_instance_list)


State 404

  222 module_instance: name_of_instance . '(' list_of_module_connections_opt ')'

    '('  shift, and go to state 504


State 405

  203 UDP_instantiation: name_of_UDP drive_strength_opt delay_opt . UDP_instance_list ';'

    IDENTIFIER  shift, and go to state 505

    $default  reduce using rule 208 (name_of_UDP_instance_opt)

    UDP_instance_list         go to state 506
    UDP_instance              go to state 507
    name_of_UDP_instance_opt  go to state 508
    name_of_UDP_instance      go to state 509


State 406

  124 expandrange: SCALARED range .

    $default  reduce using rule 124 (expandrange)


State 407

  125 expandrange: VECTORED range .

    $default  reduce using rule 125 (expandrange)


State 408

  107 net_declaration: NETTYPE expandrange_opt delay_opt . list_of_variables ';'

    IDENTIFIER  shift, and go to state 22

    name_of_variable   go to state 31
    list_of_variables  go to state 510


State 409

  109 net_declaration: NETTYPE drive_strength_opt expandrange_opt . delay_opt list_of_assignments ';'
  132 continuous_assign: NETTYPE drive_strength_opt expandrange_opt . delay_opt list_of_assignments ';'

    '#'  shift, and go to state 358

    $default  reduce using rule 464 (delay_opt)

    delay_opt  go to state 511
    delay      go to state 360


State 410

  170 gate_declaration: GATETYPE drive_strength_opt delay_opt . gate_instance_list ';'

    IDENTIFIER  shift, and go to state 512

    $default  reduce using rule 200 (name_of_gate_instance_opt)

    gate_instance_list         go to state 513
    gate_instance              go to state 514
    name_of_gate_instance_opt  go to state 515
    name_of_gate_instance      go to state 516


State 411

   58 UDP_initial_statement: _INITIAL_ . output_terminal_name '=' INIT_VAL ';'

    IDENTIFIER  shift, and go to state 22

    name_of_variable      go to state 517
    output_terminal_name  go to state 518


State 412

   52 UDP_declaration_list: UDP_declaration_list UDP_declaration .

    $default  reduce using rule 52 (UDP_declaration_list)


State 413

   49 UDP: PRIMITIVE name_of_UDP '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt . table_definition ENDPRIMITIVE

    TABLE  shift, and go to state 519

    table_definition  go to state 520


State 414

   57 UDP_initial_statement_opt: UDP_initial_statement .

    $default  reduce using rule 57 (UDP_initial_statement_opt)


State 415

  399 mintypmax_expression: expression ':' expression . ':' expression
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ':'          shift, and go to state 521
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 416

  401 expression_list: expression_list ',' expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 401 (expression_list)

    BINARY_OPERATOR  go to state 195


State 417

  401 expression_list: expression_list . ',' expression
  456 multiple_concatenation: '{' expression '{' expression_list . '}' '}'

    '}'  shift, and go to state 522
    ','  shift, and go to state 294


State 418

  454 number: DECIMAL_NUMBER dot_unsigned_number_opt 'e' DECIMAL_NUMBER .

    $default  reduce using rule 454 (number)


State 419

  453 number: DECIMAL_NUMBER dot_unsigned_number_opt 'E' DECIMAL_NUMBER .

    $default  reduce using rule 453 (number)


State 420

  457 function_call: name_of_function '(' expression_list ')' .

    $default  reduce using rule 457 (function_call)


State 421

   26 port_reference: name_of_variable '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 26 (port_reference)


State 422

  405 expression: expression '?' expression ':' . expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 523
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 423

  458 function_call: name_of_system_function '(' expression_list ')' .

    $default  reduce using rule 458 (function_call)


State 424

  441 primary: identifier_hier '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 524
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 425

  440 primary: identifier_hier '[' expression ']' .

    $default  reduce using rule 440 (primary)


State 426

   82 task: TASK name_of_task ';' tf_declaration_star . statement_or_null ENDTASK
   92 tf_declaration_star: tf_declaration_star . tf_declaration

    ';'         shift, and go to state 392
    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    INTEGER     shift, and go to state 81
    REAL        shift, and go to state 82
    TIME        shift, and go to state 83
    PARAMETER   shift, and go to state 84
    INPUT       shift, and go to state 86
    OUTPUT      shift, and go to state 87
    INOUT       shift, and go to state 88
    REG         shift, and go to state 100
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    tf_declaration           go to state 525
    parameter_declaration    go to state 526
    input_declaration        go to state 527
    output_declaration       go to state 528
    inout_declaration        go to state 529
    reg_declaration          go to state 530
    time_declaration         go to state 531
    integer_declaration      go to state 532
    real_declaration         go to state 533
    statement_or_null        go to state 534
    statement                go to state 394
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 427

  167 range: '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 535
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 428

   84 function: FUNCTION range_or_type_opt name_of_function ';' . tf_declaration_plus statement ENDFUNCTION

    INTEGER    shift, and go to state 81
    REAL       shift, and go to state 82
    TIME       shift, and go to state 83
    PARAMETER  shift, and go to state 84
    INPUT      shift, and go to state 86
    OUTPUT     shift, and go to state 87
    INOUT      shift, and go to state 88
    REG        shift, and go to state 100

    tf_declaration_plus    go to state 536
    tf_declaration         go to state 537
    parameter_declaration  go to state 526
    input_declaration      go to state 527
    output_declaration     go to state 528
    inout_declaration      go to state 529
    reg_declaration        go to state 530
    time_declaration       go to state 531
    integer_declaration    go to state 532
    real_declaration       go to state 533


State 429

  325 input_identifier: IDENTIFIER .

    $default  reduce using rule 325 (input_identifier)


State 430

  312 path_description: '(' list_of_path_inputs . AST_GT list_of_path_outputs ')'

    AST_GT  shift, and go to state 538


State 431

  313 list_of_path_inputs: specify_input_terminal_descriptor_list .
  316 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor_list . ',' specify_input_terminal_descriptor

    ','  shift, and go to state 539

    $default  reduce using rule 313 (list_of_path_inputs)


State 432

  311 path_description: '(' specify_input_terminal_descriptor . EQ_GT specify_output_terminal_descriptor ')'
  315 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor .

    EQ_GT  shift, and go to state 540

    $default  reduce using rule 315 (specify_input_terminal_descriptor_list)


State 433

  317 specify_input_terminal_descriptor: input_identifier .
  318                                  | input_identifier . '[' constant_expression ']'
  319                                  | input_identifier . '[' constant_expression ':' constant_expression ']'

    '['  shift, and go to state 541

    $default  reduce using rule 317 (specify_input_terminal_descriptor)


State 434

  335 system_timing_check: '$' SETUP . '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 542


State 435

  336 system_timing_check: '$' HOLD . '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 543


State 436

  337 system_timing_check: '$' PERIOD . '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 544


State 437

  338 system_timing_check: '$' WIDTH . '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'

    '('  shift, and go to state 545


State 438

  339 system_timing_check: '$' SKEW . '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 546


State 439

  340 system_timing_check: '$' RECOVERY . '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 547


State 440

  341 system_timing_check: '$' SETUPHOLD . '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 548


State 441

  306 specparam_declaration: SPECPARAM list_of_param_assignments . ';'
  308 list_of_param_assignments: list_of_param_assignments . ',' param_assignment

    ';'  shift, and go to state 549
    ','  shift, and go to state 333


State 442

  370 level_sensitive_path_declaration: IF '(' . conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  371                                 | IF '(' . conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'
  380 if_expression_opt: IF '(' . expression ')'
  388 sdpd: IF '(' . sdpd_conditional_expression ')' path_description '=' path_delay_value ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 550
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    port_reference               go to state 551
    name_of_variable             go to state 28
    name_of_function             go to state 65
    conditional_port_expression  go to state 552
    sdpd_conditional_expression  go to state 553
    expression                   go to state 554
    UNARY_OPERATOR               go to state 555
    primary                      go to state 69
    unsigned_number_opt          go to state 70
    number                       go to state 71
    concatenation                go to state 72
    multiple_concatenation       go to state 73
    function_call                go to state 74
    name_of_system_function      go to state 75
    identifier_hier              go to state 76


State 443

  310 path_declaration: path_description '=' . path_delay_value ';'

    '('              shift, and go to state 556
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_value         go to state 557
    path_delay_expression    go to state 558
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 444

  381 edge_sensitive_path_declaration: if_expression_opt '(' . edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'
  382                                | if_expression_opt '(' . edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    POSEDGE  shift, and go to state 560
    NEGEDGE  shift, and go to state 561

    $default  reduce using rule 384 (edge_identifier_opt)

    edge_identifier_opt  go to state 562
    edge_identifier      go to state 563


State 445

  138 list_of_register_variables: list_of_register_variables ',' register_variable .

    $default  reduce using rule 138 (list_of_register_variables)


State 446

  140 register_variable: name_of_memory '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 564


State 447

  308 list_of_param_assignments: list_of_param_assignments ',' param_assignment .

    $default  reduce using rule 308 (list_of_param_assignments)


State 448

  309 param_assignment: identifier_hier '=' constant_expression .

    $default  reduce using rule 309 (param_assignment)


State 449

  104 input_declaration: INPUT range_opt list_of_variables ';' .

    $default  reduce using rule 104 (input_declaration)


State 450

  105 output_declaration: OUTPUT range_opt list_of_variables ';' .

    $default  reduce using rule 105 (output_declaration)


State 451

  106 inout_declaration: INOUT range_opt list_of_variables ';' .

    $default  reduce using rule 106 (inout_declaration)


State 452

  148 charge_strength: '(' SMALL ')' .

    $default  reduce using rule 148 (charge_strength)


State 453

  149 charge_strength: '(' MEDIUM ')' .

    $default  reduce using rule 149 (charge_strength)


State 454

  150 charge_strength: '(' LARGE ')' .

    $default  reduce using rule 150 (charge_strength)


State 455

  108 net_declaration: TRIREG charge_strength_opt expandrange_opt delay_opt . list_of_variables ';'

    IDENTIFIER  shift, and go to state 22

    name_of_variable   go to state 31
    list_of_variables  go to state 565


State 456

  126 reg_declaration: REG range_opt list_of_register_variables ';' .

    $default  reduce using rule 126 (reg_declaration)


State 457

  144 list_of_name_of_events: list_of_name_of_events ',' name_of_event .

    $default  reduce using rule 144 (list_of_name_of_events)


State 458

  153 drive_strength: '(' STRENGTH0 ',' . STRENGTH1 ')'

    SUPPLY1  shift, and go to state 347
    STRONG1  shift, and go to state 349
    PULL1    shift, and go to state 351
    WEAK1    shift, and go to state 353
    HIGHZ1   shift, and go to state 355

    STRENGTH1  go to state 566


State 459

  154 drive_strength: '(' STRENGTH1 ',' . STRENGTH0 ')'

    SUPPLY0  shift, and go to state 346
    STRONG0  shift, and go to state 348
    PULL0    shift, and go to state 350
    WEAK0    shift, and go to state 352
    HIGHZ0   shift, and go to state 354

    STRENGTH0  go to state 567


State 460

  468 delay: '#' '(' . mintypmax_expression comma_mintypmax_expression_opt comma_mintypmax_expression_opt ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    mintypmax_expression     go to state 568
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 461

  466 delay: '#' number .

    $default  reduce using rule 466 (delay)


State 462

  463 identifier_hier: identifier_hier . '.' IDENTIFIER
  467 delay: '#' identifier_hier .

    '.'  shift, and go to state 200

    $default  reduce using rule 467 (delay)


State 463

  131 continuous_assign: ASSIGN drive_strength_opt delay_opt list_of_assignments . ';'
  169 list_of_assignments: list_of_assignments . ',' assignment

    ';'  shift, and go to state 569
    ','  shift, and go to state 570


State 464

  168 list_of_assignments: assignment .

    $default  reduce using rule 168 (list_of_assignments)


State 465

  475 event_expression: POSEDGE . scalar_event_expression

    IDENTIFIER  shift, and go to state 22

    name_of_variable         go to state 571
    scalar_event_expression  go to state 572


State 466

  476 event_expression: NEGEDGE . scalar_event_expression

    IDENTIFIER  shift, and go to state 22

    name_of_variable         go to state 571
    scalar_event_expression  go to state 573


State 467

  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression
  474 event_expression: expression .

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 474 (event_expression)

    BINARY_OPERATOR  go to state 195


State 468

  473 event_control: '@' '(' event_expression . ')'
  477 event_expression: event_expression . OR event_expression

    ')'  shift, and go to state 574
    OR   shift, and go to state 575


State 469

  471 delay_control: '#' '(' mintypmax_expression . ')'

    ')'  shift, and go to state 576


State 470

  254 statement: HYPH_GT name_of_event ';' .

    $default  reduce using rule 254 (statement)


State 471

  282 name_of_block: IDENTIFIER .

    $default  reduce using rule 282 (name_of_block)


State 472

  279 seq_block: _BEGIN_ ':' name_of_block . block_declaration_list statement_list END

    $default  reduce using rule 283 (block_declaration_list)

    block_declaration_list  go to state 577


State 473

  278 seq_block: _BEGIN_ statement_list END .

    $default  reduce using rule 278 (seq_block)


State 474

  240 statement_list: statement_list statement .

    $default  reduce using rule 240 (statement_list)


State 475

  261 statement: ASSIGN assignment ';' .

    $default  reduce using rule 261 (statement)


State 476

  265 assignment: lvalue '=' . expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 578
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 477

  262 statement: DEASSIGN lvalue ';' .

    $default  reduce using rule 262 (statement)


State 478

  243 statement: IF '(' expression . ')' statement_or_null
  244          | IF '(' expression . ')' statement_or_null ELSE statement_or_null
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ')'          shift, and go to state 579
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 479

  245 statement: CASE '(' expression . ')' case_item_list ENDCASE
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ')'          shift, and go to state 580
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 480

  246 statement: CASEZ '(' expression . ')' case_item_list ENDCASE
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ')'          shift, and go to state 581
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 481

  247 statement: CASEX '(' expression . ')' case_item_list ENDCASE
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ')'          shift, and go to state 582
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 482

  249 statement: REPEAT '(' expression . ')' statement
  272 delay_or_event_control: REPEAT '(' expression . ')' event_control
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ')'          shift, and go to state 583
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 483

  250 statement: WHILE '(' expression . ')' statement
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ')'          shift, and go to state 584
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 484

  251 statement: FOR '(' assignment . ';' expression ';' assignment ')' statement

    ';'  shift, and go to state 585


State 485

  253 statement: WAIT '(' expression . ')' statement_or_null
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ')'          shift, and go to state 586
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 486

  259 statement: DISABLE name_of_task ';' .

    $default  reduce using rule 259 (statement)


State 487

  260 statement: DISABLE name_of_block ';' .

    $default  reduce using rule 260 (statement)


State 488

  263 statement: FORCE assignment ';' .

    $default  reduce using rule 263 (statement)


State 489

  264 statement: RELEASE lvalue ';' .

    $default  reduce using rule 264 (statement)


State 490

  281 par_block: FORK ':' name_of_block . block_declaration_list statement_list JOIN

    $default  reduce using rule 283 (block_declaration_list)

    block_declaration_list  go to state 587


State 491

  280 par_block: FORK statement_list JOIN .

    $default  reduce using rule 280 (par_block)


State 492

  292 task_enable: name_of_task '(' expression_list . ')' ';'
  401 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 588
    ','  shift, and go to state 294


State 493

  294 system_task_enable: name_of_system_task '(' expression_list . ')' ';'
  401 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 589
    ','  shift, and go to state 294


State 494

  272 delay_or_event_control: REPEAT . '(' expression ')' event_control

    '('  shift, and go to state 590


State 495

  267 blocking_assignment: lvalue '=' delay_or_event_control . expression ';'
  269 non_blocking_assignment: lvalue '=' delay_or_event_control . expression ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 591
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 496

  266 blocking_assignment: lvalue '=' expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 266 (blocking_assignment)

    BINARY_OPERATOR  go to state 195


State 497

  268 non_blocking_assignment: lvalue LTE expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 268 (non_blocking_assignment)

    BINARY_OPERATOR  go to state 195


State 498

  393 lvalue: identifier_hier '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 592


State 499

  392 lvalue: identifier_hier '[' expression . ']'
  395 constant_expression: expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ']'          shift, and go to state 593
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 395 (constant_expression)

    BINARY_OPERATOR  go to state 195


State 500

  219 parameter_value_assignment: '#' '(' expression_list . ')'
  401 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 594
    ','  shift, and go to state 294


State 501

  223 name_of_instance: IDENTIFIER range_opt .

    $default  reduce using rule 223 (name_of_instance)


State 502

  215 module_instantiation: name_of_module parameter_value_assignment_opt module_instance_list ';' .

    $default  reduce using rule 215 (module_instantiation)


State 503

  221 module_instance_list: module_instance_list ',' . module_instance

    IDENTIFIER  shift, and go to state 401

    module_instance   go to state 595
    name_of_instance  go to state 404


State 504

  222 module_instance: name_of_instance '(' . list_of_module_connections_opt ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '.'              shift, and go to state 596
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    ')'       reduce using rule 224 (list_of_module_connections_opt)
    ')'       [reduce using rule 230 (module_port_connection)]
    ','       reduce using rule 230 (module_port_connection)
    BASE      reduce using rule 446 (unsigned_number_opt)
    $default  reduce using rule 224 (list_of_module_connections_opt)

    name_of_function                go to state 65
    list_of_module_connections_opt  go to state 597
    list_of_module_connections      go to state 598
    module_port_connection_list     go to state 599
    module_port_connection          go to state 600
    named_port_connection_list      go to state 601
    named_port_connection           go to state 602
    expression                      go to state 603
    UNARY_OPERATOR                  go to state 68
    primary                         go to state 69
    unsigned_number_opt             go to state 70
    number                          go to state 71
    concatenation                   go to state 72
    multiple_concatenation          go to state 73
    function_call                   go to state 74
    name_of_system_function         go to state 75
    identifier_hier                 go to state 76


State 505

  210 name_of_UDP_instance: IDENTIFIER . range_opt

    '['  shift, and go to state 203

    $default  reduce using rule 165 (range_opt)

    range_opt  go to state 604
    range      go to state 223


State 506

  203 UDP_instantiation: name_of_UDP drive_strength_opt delay_opt UDP_instance_list . ';'
  206 UDP_instance_list: UDP_instance_list . ',' UDP_instance

    ';'  shift, and go to state 605
    ','  shift, and go to state 606


State 507

  205 UDP_instance_list: UDP_instance .

    $default  reduce using rule 205 (UDP_instance_list)


State 508

  207 UDP_instance: name_of_UDP_instance_opt . '(' terminal_list ')'

    '('  shift, and go to state 607


State 509

  209 name_of_UDP_instance_opt: name_of_UDP_instance .

    $default  reduce using rule 209 (name_of_UDP_instance_opt)


State 510

  107 net_declaration: NETTYPE expandrange_opt delay_opt list_of_variables . ';'
  135 list_of_variables: list_of_variables . ',' name_of_variable

    ';'  shift, and go to state 608
    ','  shift, and go to state 43


State 511

  109 net_declaration: NETTYPE drive_strength_opt expandrange_opt delay_opt . list_of_assignments ';'
  132 continuous_assign: NETTYPE drive_strength_opt expandrange_opt delay_opt . list_of_assignments ';'

    '{'         shift, and go to state 236
    IDENTIFIER  shift, and go to state 217

    list_of_assignments  go to state 609
    assignment           go to state 464
    lvalue               go to state 371
    concatenation        go to state 269
    identifier_hier      go to state 270


State 512

  202 name_of_gate_instance: IDENTIFIER . range_opt

    '['  shift, and go to state 203

    $default  reduce using rule 165 (range_opt)

    range_opt  go to state 610
    range      go to state 223


State 513

  170 gate_declaration: GATETYPE drive_strength_opt delay_opt gate_instance_list . ';'
  198 gate_instance_list: gate_instance_list . ',' gate_instance

    ';'  shift, and go to state 611
    ','  shift, and go to state 612


State 514

  197 gate_instance_list: gate_instance .

    $default  reduce using rule 197 (gate_instance_list)


State 515

  199 gate_instance: name_of_gate_instance_opt . '(' terminal_list ')'

    '('  shift, and go to state 613


State 516

  201 name_of_gate_instance_opt: name_of_gate_instance .

    $default  reduce using rule 201 (name_of_gate_instance_opt)


State 517

   59 output_terminal_name: name_of_variable .

    $default  reduce using rule 59 (output_terminal_name)


State 518

   58 UDP_initial_statement: _INITIAL_ output_terminal_name . '=' INIT_VAL ';'

    '='  shift, and go to state 614


State 519

   60 table_definition: TABLE . table_entries ENDTABLE

    LEVEL_SYMBOL  shift, and go to state 615

    LEVEL_SYMBOL  [reduce using rule 78 (level_symbol_star)]
    $default      reduce using rule 78 (level_symbol_star)

    table_entries             go to state 616
    combinational_entry_list  go to state 617
    combinational_entry       go to state 618
    sequential_entry_list     go to state 619
    sequential_entry          go to state 620
    input_list                go to state 621
    level_input_list          go to state 622
    edge_input_list           go to state 623
    level_symbol_star         go to state 624
    level_symbol_plus         go to state 625


State 520

   49 UDP: PRIMITIVE name_of_UDP '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition . ENDPRIMITIVE

    ENDPRIMITIVE  shift, and go to state 626


State 521

  399 mintypmax_expression: expression ':' expression ':' . expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 627
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 522

  456 multiple_concatenation: '{' expression '{' expression_list '}' . '}'

    '}'  shift, and go to state 628


State 523

  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression
  405           | expression '?' expression ':' expression .

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    '?'          [reduce using rule 405 (expression)]
    '+'          [reduce using rule 405 (expression)]
    '-'          [reduce using rule 405 (expression)]
    '*'          [reduce using rule 405 (expression)]
    '/'          [reduce using rule 405 (expression)]
    '%'          [reduce using rule 405 (expression)]
    '&'          [reduce using rule 405 (expression)]
    '|'          [reduce using rule 405 (expression)]
    '<'          [reduce using rule 405 (expression)]
    '>'          [reduce using rule 405 (expression)]
    '^'          [reduce using rule 405 (expression)]
    EQ_EQ        [reduce using rule 405 (expression)]
    NOT_EQ       [reduce using rule 405 (expression)]
    EQ_EQ_EQ     [reduce using rule 405 (expression)]
    NOT_EQ_EQ    [reduce using rule 405 (expression)]
    AMP_AMP      [reduce using rule 405 (expression)]
    PIPE_PIPE    [reduce using rule 405 (expression)]
    LTE          [reduce using rule 405 (expression)]
    GTE          [reduce using rule 405 (expression)]
    CARET_TILDE  [reduce using rule 405 (expression)]
    LSHIFT       [reduce using rule 405 (expression)]
    RSHIFT       [reduce using rule 405 (expression)]
    $default     reduce using rule 405 (expression)

    BINARY_OPERATOR  go to state 195


State 524

  441 primary: identifier_hier '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 629


State 525

   92 tf_declaration_star: tf_declaration_star tf_declaration .

    $default  reduce using rule 92 (tf_declaration_star)


State 526

   95 tf_declaration: parameter_declaration .

    $default  reduce using rule 95 (tf_declaration)


State 527

   96 tf_declaration: input_declaration .

    $default  reduce using rule 96 (tf_declaration)


State 528

   97 tf_declaration: output_declaration .

    $default  reduce using rule 97 (tf_declaration)


State 529

   98 tf_declaration: inout_declaration .

    $default  reduce using rule 98 (tf_declaration)


State 530

   99 tf_declaration: reg_declaration .

    $default  reduce using rule 99 (tf_declaration)


State 531

  100 tf_declaration: time_declaration .

    $default  reduce using rule 100 (tf_declaration)


State 532

  101 tf_declaration: integer_declaration .

    $default  reduce using rule 101 (tf_declaration)


State 533

  102 tf_declaration: real_declaration .

    $default  reduce using rule 102 (tf_declaration)


State 534

   82 task: TASK name_of_task ';' tf_declaration_star statement_or_null . ENDTASK

    ENDTASK  shift, and go to state 630


State 535

  167 range: '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 631


State 536

   84 function: FUNCTION range_or_type_opt name_of_function ';' tf_declaration_plus . statement ENDFUNCTION
   94 tf_declaration_plus: tf_declaration_plus . tf_declaration

    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    INTEGER     shift, and go to state 81
    REAL        shift, and go to state 82
    TIME        shift, and go to state 83
    PARAMETER   shift, and go to state 84
    INPUT       shift, and go to state 86
    OUTPUT      shift, and go to state 87
    INOUT       shift, and go to state 88
    REG         shift, and go to state 100
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    tf_declaration           go to state 632
    parameter_declaration    go to state 526
    input_declaration        go to state 527
    output_declaration       go to state 528
    inout_declaration        go to state 529
    reg_declaration          go to state 530
    time_declaration         go to state 531
    integer_declaration      go to state 532
    real_declaration         go to state 533
    statement                go to state 633
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 537

   93 tf_declaration_plus: tf_declaration .

    $default  reduce using rule 93 (tf_declaration_plus)


State 538

  312 path_description: '(' list_of_path_inputs AST_GT . list_of_path_outputs ')'

    IDENTIFIER  shift, and go to state 634

    list_of_path_outputs                     go to state 635
    specify_output_terminal_descriptor_list  go to state 636
    specify_output_terminal_descriptor       go to state 637
    output_identifier                        go to state 638


State 539

  316 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor_list ',' . specify_input_terminal_descriptor

    IDENTIFIER  shift, and go to state 429

    specify_input_terminal_descriptor  go to state 639
    input_identifier                   go to state 433


State 540

  311 path_description: '(' specify_input_terminal_descriptor EQ_GT . specify_output_terminal_descriptor ')'

    IDENTIFIER  shift, and go to state 634

    specify_output_terminal_descriptor  go to state 640
    output_identifier                   go to state 638


State 541

  318 specify_input_terminal_descriptor: input_identifier '[' . constant_expression ']'
  319                                  | input_identifier '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 641
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 542

  335 system_timing_check: '$' SETUP '(' . timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    $default  reduce using rule 346 (timing_check_event_control_opt)

    timing_check_event              go to state 645
    timing_check_event_control_opt  go to state 646
    timing_check_event_control      go to state 647
    edge_control_specifier          go to state 648


State 543

  336 system_timing_check: '$' HOLD '(' . timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    $default  reduce using rule 346 (timing_check_event_control_opt)

    timing_check_event              go to state 649
    timing_check_event_control_opt  go to state 646
    timing_check_event_control      go to state 647
    edge_control_specifier          go to state 648


State 544

  337 system_timing_check: '$' PERIOD '(' . controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    controlled_timing_check_event  go to state 650
    timing_check_event_control     go to state 651
    edge_control_specifier         go to state 648


State 545

  338 system_timing_check: '$' WIDTH '(' . controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    controlled_timing_check_event  go to state 652
    timing_check_event_control     go to state 651
    edge_control_specifier         go to state 648


State 546

  339 system_timing_check: '$' SKEW '(' . timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    $default  reduce using rule 346 (timing_check_event_control_opt)

    timing_check_event              go to state 653
    timing_check_event_control_opt  go to state 646
    timing_check_event_control      go to state 647
    edge_control_specifier          go to state 648


State 547

  340 system_timing_check: '$' RECOVERY '(' . controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    controlled_timing_check_event  go to state 654
    timing_check_event_control     go to state 651
    edge_control_specifier         go to state 648


State 548

  341 system_timing_check: '$' SETUPHOLD '(' . timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    $default  reduce using rule 346 (timing_check_event_control_opt)

    timing_check_event              go to state 655
    timing_check_event_control_opt  go to state 646
    timing_check_event_control      go to state 647
    edge_control_specifier          go to state 648


State 549

  306 specparam_declaration: SPECPARAM list_of_param_assignments ';' .

    $default  reduce using rule 306 (specparam_declaration)


State 550

   28 name_of_variable: IDENTIFIER .
   90 name_of_function: IDENTIFIER .
  136 name_of_variable: IDENTIFIER .
  462 identifier_hier: IDENTIFIER .

    '('          reduce using rule 90 (name_of_function)
    '('          [reduce using rule 462 (identifier_hier)]
    ')'          reduce using rule 28 (name_of_variable)
    ')'          [reduce using rule 136 (name_of_variable)]
    ')'          [reduce using rule 462 (identifier_hier)]
    '['          reduce using rule 28 (name_of_variable)
    '['          [reduce using rule 136 (name_of_variable)]
    '['          [reduce using rule 462 (identifier_hier)]
    '.'          reduce using rule 462 (identifier_hier)
    '?'          reduce using rule 462 (identifier_hier)
    '+'          reduce using rule 28 (name_of_variable)
    '+'          [reduce using rule 136 (name_of_variable)]
    '+'          [reduce using rule 462 (identifier_hier)]
    '-'          reduce using rule 28 (name_of_variable)
    '-'          [reduce using rule 136 (name_of_variable)]
    '-'          [reduce using rule 462 (identifier_hier)]
    '*'          reduce using rule 28 (name_of_variable)
    '*'          [reduce using rule 136 (name_of_variable)]
    '*'          [reduce using rule 462 (identifier_hier)]
    '/'          reduce using rule 28 (name_of_variable)
    '/'          [reduce using rule 136 (name_of_variable)]
    '/'          [reduce using rule 462 (identifier_hier)]
    '%'          reduce using rule 28 (name_of_variable)
    '%'          [reduce using rule 136 (name_of_variable)]
    '%'          [reduce using rule 462 (identifier_hier)]
    '&'          reduce using rule 28 (name_of_variable)
    '&'          [reduce using rule 136 (name_of_variable)]
    '&'          [reduce using rule 462 (identifier_hier)]
    '|'          reduce using rule 28 (name_of_variable)
    '|'          [reduce using rule 136 (name_of_variable)]
    '|'          [reduce using rule 462 (identifier_hier)]
    '<'          reduce using rule 28 (name_of_variable)
    '<'          [reduce using rule 136 (name_of_variable)]
    '<'          [reduce using rule 462 (identifier_hier)]
    '>'          reduce using rule 28 (name_of_variable)
    '>'          [reduce using rule 136 (name_of_variable)]
    '>'          [reduce using rule 462 (identifier_hier)]
    '^'          reduce using rule 28 (name_of_variable)
    '^'          [reduce using rule 136 (name_of_variable)]
    '^'          [reduce using rule 462 (identifier_hier)]
    EQ_EQ        reduce using rule 28 (name_of_variable)
    EQ_EQ        [reduce using rule 136 (name_of_variable)]
    EQ_EQ        [reduce using rule 462 (identifier_hier)]
    NOT_EQ       reduce using rule 28 (name_of_variable)
    NOT_EQ       [reduce using rule 136 (name_of_variable)]
    NOT_EQ       [reduce using rule 462 (identifier_hier)]
    EQ_EQ_EQ     reduce using rule 28 (name_of_variable)
    EQ_EQ_EQ     [reduce using rule 136 (name_of_variable)]
    EQ_EQ_EQ     [reduce using rule 462 (identifier_hier)]
    NOT_EQ_EQ    reduce using rule 28 (name_of_variable)
    NOT_EQ_EQ    [reduce using rule 136 (name_of_variable)]
    NOT_EQ_EQ    [reduce using rule 462 (identifier_hier)]
    AMP_AMP      reduce using rule 28 (name_of_variable)
    AMP_AMP      [reduce using rule 136 (name_of_variable)]
    AMP_AMP      [reduce using rule 462 (identifier_hier)]
    PIPE_PIPE    reduce using rule 28 (name_of_variable)
    PIPE_PIPE    [reduce using rule 136 (name_of_variable)]
    PIPE_PIPE    [reduce using rule 462 (identifier_hier)]
    LTE          reduce using rule 28 (name_of_variable)
    LTE          [reduce using rule 136 (name_of_variable)]
    LTE          [reduce using rule 462 (identifier_hier)]
    GTE          reduce using rule 28 (name_of_variable)
    GTE          [reduce using rule 136 (name_of_variable)]
    GTE          [reduce using rule 462 (identifier_hier)]
    CARET_TILDE  reduce using rule 28 (name_of_variable)
    CARET_TILDE  [reduce using rule 136 (name_of_variable)]
    CARET_TILDE  [reduce using rule 462 (identifier_hier)]
    LSHIFT       reduce using rule 28 (name_of_variable)
    LSHIFT       [reduce using rule 136 (name_of_variable)]
    LSHIFT       [reduce using rule 462 (identifier_hier)]
    RSHIFT       reduce using rule 28 (name_of_variable)
    RSHIFT       [reduce using rule 136 (name_of_variable)]
    RSHIFT       [reduce using rule 462 (identifier_hier)]
    $default     reduce using rule 28 (name_of_variable)


State 551

  372 conditional_port_expression: port_reference .
  374                            | port_reference . BINARY_OPERATOR port_reference

    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 372 (conditional_port_expression)

    BINARY_OPERATOR  go to state 656


State 552

  370 level_sensitive_path_declaration: IF '(' conditional_port_expression . ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  371                                 | IF '(' conditional_port_expression . ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

    ')'  shift, and go to state 657


State 553

  388 sdpd: IF '(' sdpd_conditional_expression . ')' path_description '=' path_delay_value ';'

    ')'  shift, and go to state 658


State 554

  380 if_expression_opt: IF '(' expression . ')'
  389 sdpd_conditional_expression: expression . BINARY_OPERATOR expression
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ')'          shift, and go to state 659
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 660


State 555

  373 conditional_port_expression: UNARY_OPERATOR . port_reference
  390 sdpd_conditional_expression: UNARY_OPERATOR . expression
  403 expression: UNARY_OPERATOR . primary

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 550
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    port_reference           go to state 661
    name_of_variable         go to state 28
    name_of_function         go to state 65
    expression               go to state 662
    UNARY_OPERATOR           go to state 68
    primary                  go to state 663
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 556

  328 path_delay_value: '(' . path_delay_expression ',' path_delay_expression ')'
  329                 | '(' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  330                 | '(' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  331                 | '(' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  445 primary: '(' . mintypmax_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 664
    mintypmax_expression     go to state 665
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 557

  310 path_declaration: path_description '=' path_delay_value . ';'

    ';'  shift, and go to state 666


State 558

  327 path_delay_value: path_delay_expression .

    $default  reduce using rule 327 (path_delay_value)


State 559

  332 path_delay_expression: mintypmax_expression .

    $default  reduce using rule 332 (path_delay_expression)


State 560

  386 edge_identifier: POSEDGE .

    $default  reduce using rule 386 (edge_identifier)


State 561

  387 edge_identifier: NEGEDGE .

    $default  reduce using rule 387 (edge_identifier)


State 562

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt . specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'
  382                                | if_expression_opt '(' edge_identifier_opt . specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 429

    specify_input_terminal_descriptor  go to state 667
    input_identifier                   go to state 433


State 563

  385 edge_identifier_opt: edge_identifier .

    $default  reduce using rule 385 (edge_identifier_opt)


State 564

  140 register_variable: name_of_memory '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 668
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 565

  108 net_declaration: TRIREG charge_strength_opt expandrange_opt delay_opt list_of_variables . ';'
  135 list_of_variables: list_of_variables . ',' name_of_variable

    ';'  shift, and go to state 669
    ','  shift, and go to state 43


State 566

  153 drive_strength: '(' STRENGTH0 ',' STRENGTH1 . ')'

    ')'  shift, and go to state 670


State 567

  154 drive_strength: '(' STRENGTH1 ',' STRENGTH0 . ')'

    ')'  shift, and go to state 671


State 568

  468 delay: '#' '(' mintypmax_expression . comma_mintypmax_expression_opt comma_mintypmax_expression_opt ')'

    ','  shift, and go to state 672

    ','       [reduce using rule 396 (comma_mintypmax_expression_opt)]
    $default  reduce using rule 396 (comma_mintypmax_expression_opt)

    comma_mintypmax_expression_opt  go to state 673


State 569

  131 continuous_assign: ASSIGN drive_strength_opt delay_opt list_of_assignments ';' .

    $default  reduce using rule 131 (continuous_assign)


State 570

  169 list_of_assignments: list_of_assignments ',' . assignment

    '{'         shift, and go to state 236
    IDENTIFIER  shift, and go to state 217

    assignment       go to state 674
    lvalue           go to state 371
    concatenation    go to state 269
    identifier_hier  go to state 270


State 571

  478 scalar_event_expression: name_of_variable .

    $default  reduce using rule 478 (scalar_event_expression)


State 572

  475 event_expression: POSEDGE scalar_event_expression .

    $default  reduce using rule 475 (event_expression)


State 573

  476 event_expression: NEGEDGE scalar_event_expression .

    $default  reduce using rule 476 (event_expression)


State 574

  473 event_control: '@' '(' event_expression ')' .

    $default  reduce using rule 473 (event_control)


State 575

  477 event_expression: event_expression OR . event_expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    POSEDGE          shift, and go to state 465
    NEGEDGE          shift, and go to state 466
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 467
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76
    event_expression         go to state 675


State 576

  471 delay_control: '#' '(' mintypmax_expression ')' .

    $default  reduce using rule 471 (delay_control)


State 577

  279 seq_block: _BEGIN_ ':' name_of_block block_declaration_list . statement_list END
  284 block_declaration_list: block_declaration_list . block_declaration

    INTEGER    shift, and go to state 81
    REAL       shift, and go to state 82
    TIME       shift, and go to state 83
    PARAMETER  shift, and go to state 84
    REG        shift, and go to state 100
    EVENT      shift, and go to state 101

    $default  reduce using rule 239 (statement_list)

    parameter_declaration  go to state 676
    reg_declaration        go to state 677
    time_declaration       go to state 678
    integer_declaration    go to state 679
    real_declaration       go to state 680
    event_declaration      go to state 681
    statement_list         go to state 682
    block_declaration      go to state 683


State 578

  265 assignment: lvalue '=' expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 265 (assignment)

    BINARY_OPERATOR  go to state 195


State 579

  243 statement: IF '(' expression ')' . statement_or_null
  244          | IF '(' expression ')' . statement_or_null ELSE statement_or_null

    ';'         shift, and go to state 392
    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement_or_null        go to state 684
    statement                go to state 394
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 580

  245 statement: CASE '(' expression ')' . case_item_list ENDCASE

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    DEFAULT          shift, and go to state 685
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    case_item_list           go to state 686
    case_item                go to state 687
    expression_list          go to state 688
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 581

  246 statement: CASEZ '(' expression ')' . case_item_list ENDCASE

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    DEFAULT          shift, and go to state 685
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    case_item_list           go to state 689
    case_item                go to state 687
    expression_list          go to state 688
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 582

  247 statement: CASEX '(' expression ')' . case_item_list ENDCASE

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    DEFAULT          shift, and go to state 685
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    case_item_list           go to state 690
    case_item                go to state 687
    expression_list          go to state 688
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 583

  249 statement: REPEAT '(' expression ')' . statement
  272 delay_or_event_control: REPEAT '(' expression ')' . event_control

    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement                go to state 691
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 692


State 584

  250 statement: WHILE '(' expression ')' . statement

    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement                go to state 693
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 585

  251 statement: FOR '(' assignment ';' . expression ';' assignment ')' statement

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 694
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 586

  253 statement: WAIT '(' expression ')' . statement_or_null

    ';'         shift, and go to state 392
    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement_or_null        go to state 695
    statement                go to state 394
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 587

  281 par_block: FORK ':' name_of_block block_declaration_list . statement_list JOIN
  284 block_declaration_list: block_declaration_list . block_declaration

    INTEGER    shift, and go to state 81
    REAL       shift, and go to state 82
    TIME       shift, and go to state 83
    PARAMETER  shift, and go to state 84
    REG        shift, and go to state 100
    EVENT      shift, and go to state 101

    $default  reduce using rule 239 (statement_list)

    parameter_declaration  go to state 676
    reg_declaration        go to state 677
    time_declaration       go to state 678
    integer_declaration    go to state 679
    real_declaration       go to state 680
    event_declaration      go to state 681
    statement_list         go to state 696
    block_declaration      go to state 683


State 588

  292 task_enable: name_of_task '(' expression_list ')' . ';'

    ';'  shift, and go to state 697


State 589

  294 system_task_enable: name_of_system_task '(' expression_list ')' . ';'

    ';'  shift, and go to state 698


State 590

  272 delay_or_event_control: REPEAT '(' . expression ')' event_control

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 699
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 591

  267 blocking_assignment: lvalue '=' delay_or_event_control expression . ';'
  269 non_blocking_assignment: lvalue '=' delay_or_event_control expression . ';'
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ';'          shift, and go to state 700
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 592

  393 lvalue: identifier_hier '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 701
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 593

  392 lvalue: identifier_hier '[' expression ']' .

    $default  reduce using rule 392 (lvalue)


State 594

  219 parameter_value_assignment: '#' '(' expression_list ')' .

    $default  reduce using rule 219 (parameter_value_assignment)


State 595

  221 module_instance_list: module_instance_list ',' module_instance .

    $default  reduce using rule 221 (module_instance_list)


State 596

  234 named_port_connection: '.' . IDENTIFIER '(' expression ')'

    IDENTIFIER  shift, and go to state 702


State 597

  222 module_instance: name_of_instance '(' list_of_module_connections_opt . ')'

    ')'  shift, and go to state 703


State 598

  225 list_of_module_connections_opt: list_of_module_connections .

    $default  reduce using rule 225 (list_of_module_connections_opt)


State 599

  226 list_of_module_connections: module_port_connection_list .
  229 module_port_connection_list: module_port_connection_list . ',' module_port_connection

    ','  shift, and go to state 704

    $default  reduce using rule 226 (list_of_module_connections)


State 600

  228 module_port_connection_list: module_port_connection .

    $default  reduce using rule 228 (module_port_connection_list)


State 601

  227 list_of_module_connections: named_port_connection_list .
  233 named_port_connection_list: named_port_connection_list . ',' named_port_connection

    ','  shift, and go to state 705

    $default  reduce using rule 227 (list_of_module_connections)


State 602

  232 named_port_connection_list: named_port_connection .

    $default  reduce using rule 232 (named_port_connection_list)


State 603

  231 module_port_connection: expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 231 (module_port_connection)

    BINARY_OPERATOR  go to state 195


State 604

  210 name_of_UDP_instance: IDENTIFIER range_opt .

    $default  reduce using rule 210 (name_of_UDP_instance)


State 605

  203 UDP_instantiation: name_of_UDP drive_strength_opt delay_opt UDP_instance_list ';' .

    $default  reduce using rule 203 (UDP_instantiation)


State 606

  206 UDP_instance_list: UDP_instance_list ',' . UDP_instance

    IDENTIFIER  shift, and go to state 505

    $default  reduce using rule 208 (name_of_UDP_instance_opt)

    UDP_instance              go to state 706
    name_of_UDP_instance_opt  go to state 508
    name_of_UDP_instance      go to state 509


State 607

  207 UDP_instance: name_of_UDP_instance_opt '(' . terminal_list ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 707
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    terminal_list            go to state 708
    terminal                 go to state 709
    expression               go to state 710
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 608

  107 net_declaration: NETTYPE expandrange_opt delay_opt list_of_variables ';' .

    $default  reduce using rule 107 (net_declaration)


State 609

  109 net_declaration: NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments . ';'
  132 continuous_assign: NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments . ';'
  169 list_of_assignments: list_of_assignments . ',' assignment

    ';'  shift, and go to state 711
    ','  shift, and go to state 570


State 610

  202 name_of_gate_instance: IDENTIFIER range_opt .

    $default  reduce using rule 202 (name_of_gate_instance)


State 611

  170 gate_declaration: GATETYPE drive_strength_opt delay_opt gate_instance_list ';' .

    $default  reduce using rule 170 (gate_declaration)


State 612

  198 gate_instance_list: gate_instance_list ',' . gate_instance

    IDENTIFIER  shift, and go to state 512

    $default  reduce using rule 200 (name_of_gate_instance_opt)

    gate_instance              go to state 712
    name_of_gate_instance_opt  go to state 515
    name_of_gate_instance      go to state 516


State 613

  199 gate_instance: name_of_gate_instance_opt '(' . terminal_list ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 707
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    terminal_list            go to state 713
    terminal                 go to state 709
    expression               go to state 710
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 614

   58 UDP_initial_statement: _INITIAL_ output_terminal_name '=' . INIT_VAL ';'

    INIT_VAL  shift, and go to state 714


State 615

   80 level_symbol_plus: LEVEL_SYMBOL .

    $default  reduce using rule 80 (level_symbol_plus)


State 616

   60 table_definition: TABLE table_entries . ENDTABLE

    ENDTABLE  shift, and go to state 715


State 617

   61 table_entries: combinational_entry_list .
   64 combinational_entry_list: combinational_entry_list . combinational_entry

    LEVEL_SYMBOL  shift, and go to state 615

    $default  reduce using rule 61 (table_entries)

    combinational_entry  go to state 716
    level_input_list     go to state 717
    level_symbol_plus    go to state 625


State 618

   63 combinational_entry_list: combinational_entry .

    $default  reduce using rule 63 (combinational_entry_list)


State 619

   62 table_entries: sequential_entry_list .
   67 sequential_entry_list: sequential_entry_list . sequential_entry

    LEVEL_SYMBOL  shift, and go to state 615

    ENDTABLE      reduce using rule 62 (table_entries)
    LEVEL_SYMBOL  [reduce using rule 78 (level_symbol_star)]
    $default      reduce using rule 78 (level_symbol_star)

    sequential_entry   go to state 718
    input_list         go to state 621
    level_input_list   go to state 719
    edge_input_list    go to state 623
    level_symbol_star  go to state 624
    level_symbol_plus  go to state 625


State 620

   66 sequential_entry_list: sequential_entry .

    $default  reduce using rule 66 (sequential_entry_list)


State 621

   68 sequential_entry: input_list . ':' state ':' next_state ';'

    ':'  shift, and go to state 720


State 622

   65 combinational_entry: level_input_list . ':' OUTPUT_SYMBOL ';'
   69 input_list: level_input_list .

    ':'  shift, and go to state 721

    ':'  [reduce using rule 69 (input_list)]


State 623

   70 input_list: edge_input_list .

    $default  reduce using rule 70 (input_list)


State 624

   72 edge_input_list: level_symbol_star . edge level_symbol_star
   79 level_symbol_star: level_symbol_star . LEVEL_SYMBOL

    '('           shift, and go to state 722
    LEVEL_SYMBOL  shift, and go to state 723
    EDGE_SYMBOL   shift, and go to state 724

    edge  go to state 725


State 625

   71 level_input_list: level_symbol_plus .
   81 level_symbol_plus: level_symbol_plus . LEVEL_SYMBOL

    LEVEL_SYMBOL  shift, and go to state 726

    $default  reduce using rule 71 (level_input_list)


State 626

   49 UDP: PRIMITIVE name_of_UDP '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE .

    $default  reduce using rule 49 (UDP)


State 627

  399 mintypmax_expression: expression ':' expression ':' expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 399 (mintypmax_expression)

    BINARY_OPERATOR  go to state 195


State 628

  456 multiple_concatenation: '{' expression '{' expression_list '}' '}' .

    $default  reduce using rule 456 (multiple_concatenation)


State 629

  441 primary: identifier_hier '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 441 (primary)


State 630

   82 task: TASK name_of_task ';' tf_declaration_star statement_or_null ENDTASK .

    $default  reduce using rule 82 (task)


State 631

  167 range: '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 167 (range)


State 632

   94 tf_declaration_plus: tf_declaration_plus tf_declaration .

    $default  reduce using rule 94 (tf_declaration_plus)


State 633

   84 function: FUNCTION range_or_type_opt name_of_function ';' tf_declaration_plus statement . ENDFUNCTION

    ENDFUNCTION  shift, and go to state 727


State 634

  326 output_identifier: IDENTIFIER .

    $default  reduce using rule 326 (output_identifier)


State 635

  312 path_description: '(' list_of_path_inputs AST_GT list_of_path_outputs . ')'

    ')'  shift, and go to state 728


State 636

  314 list_of_path_outputs: specify_output_terminal_descriptor_list .
  321 specify_output_terminal_descriptor_list: specify_output_terminal_descriptor_list . ',' specify_output_terminal_descriptor

    ','  shift, and go to state 729

    $default  reduce using rule 314 (list_of_path_outputs)


State 637

  320 specify_output_terminal_descriptor_list: specify_output_terminal_descriptor .

    $default  reduce using rule 320 (specify_output_terminal_descriptor_list)


State 638

  322 specify_output_terminal_descriptor: output_identifier .
  323                                   | output_identifier . '[' constant_expression ']'
  324                                   | output_identifier . '[' constant_expression ':' constant_expression ']'

    '['  shift, and go to state 730

    $default  reduce using rule 322 (specify_output_terminal_descriptor)


State 639

  316 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor_list ',' specify_input_terminal_descriptor .

    $default  reduce using rule 316 (specify_input_terminal_descriptor_list)


State 640

  311 path_description: '(' specify_input_terminal_descriptor EQ_GT specify_output_terminal_descriptor . ')'

    ')'  shift, and go to state 731


State 641

  318 specify_input_terminal_descriptor: input_identifier '[' constant_expression . ']'
  319                                  | input_identifier '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 732
    ']'  shift, and go to state 733


State 642

  348 timing_check_event_control: POSEDGE .

    $default  reduce using rule 348 (timing_check_event_control)


State 643

  349 timing_check_event_control: NEGEDGE .

    $default  reduce using rule 349 (timing_check_event_control)


State 644

  351 edge_control_specifier: EDGE . '[' edge_descriptor_list ']'

    '['  shift, and go to state 734


State 645

  335 system_timing_check: '$' SETUP '(' timing_check_event . ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 735


State 646

  342 timing_check_event: timing_check_event_control_opt . specify_terminal_descriptor amp_timing_check_condition_opt

    IDENTIFIER  shift, and go to state 736

    specify_input_terminal_descriptor   go to state 737
    specify_output_terminal_descriptor  go to state 738
    input_identifier                    go to state 433
    output_identifier                   go to state 638
    specify_terminal_descriptor         go to state 739


State 647

  347 timing_check_event_control_opt: timing_check_event_control .

    $default  reduce using rule 347 (timing_check_event_control_opt)


State 648

  350 timing_check_event_control: edge_control_specifier .

    $default  reduce using rule 350 (timing_check_event_control)


State 649

  336 system_timing_check: '$' HOLD '(' timing_check_event . ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 740


State 650

  337 system_timing_check: '$' PERIOD '(' controlled_timing_check_event . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 741


State 651

  345 controlled_timing_check_event: timing_check_event_control . specify_terminal_descriptor amp_timing_check_condition_opt

    IDENTIFIER  shift, and go to state 736

    specify_input_terminal_descriptor   go to state 737
    specify_output_terminal_descriptor  go to state 738
    input_identifier                    go to state 433
    output_identifier                   go to state 638
    specify_terminal_descriptor         go to state 742


State 652

  338 system_timing_check: '$' WIDTH '(' controlled_timing_check_event . ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'

    ','  shift, and go to state 743


State 653

  339 system_timing_check: '$' SKEW '(' timing_check_event . ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 744


State 654

  340 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event . ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 745


State 655

  341 system_timing_check: '$' SETUPHOLD '(' timing_check_event . ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 746


State 656

  374 conditional_port_expression: port_reference BINARY_OPERATOR . port_reference

    IDENTIFIER  shift, and go to state 22

    port_reference    go to state 747
    name_of_variable  go to state 28


State 657

  370 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' . '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  371                                 | IF '(' conditional_port_expression ')' . '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

    '('  shift, and go to state 748


State 658

  388 sdpd: IF '(' sdpd_conditional_expression ')' . path_description '=' path_delay_value ';'

    '('  shift, and go to state 313

    path_description  go to state 749


State 659

  380 if_expression_opt: IF '(' expression ')' .

    $default  reduce using rule 380 (if_expression_opt)


State 660

  389 sdpd_conditional_expression: expression BINARY_OPERATOR . expression
  404 expression: expression BINARY_OPERATOR . expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 750
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 661

  373 conditional_port_expression: UNARY_OPERATOR port_reference .

    $default  reduce using rule 373 (conditional_port_expression)


State 662

  390 sdpd_conditional_expression: UNARY_OPERATOR expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 390 (sdpd_conditional_expression)

    BINARY_OPERATOR  go to state 195


State 663

  402 expression: primary .
  403           | UNARY_OPERATOR primary .

    ')'          reduce using rule 402 (expression)
    ')'          [reduce using rule 403 (expression)]
    '?'          reduce using rule 402 (expression)
    '?'          [reduce using rule 403 (expression)]
    '+'          reduce using rule 402 (expression)
    '+'          [reduce using rule 403 (expression)]
    '-'          reduce using rule 402 (expression)
    '-'          [reduce using rule 403 (expression)]
    '*'          reduce using rule 402 (expression)
    '*'          [reduce using rule 403 (expression)]
    '/'          reduce using rule 402 (expression)
    '/'          [reduce using rule 403 (expression)]
    '%'          reduce using rule 402 (expression)
    '%'          [reduce using rule 403 (expression)]
    '&'          reduce using rule 402 (expression)
    '&'          [reduce using rule 403 (expression)]
    '|'          reduce using rule 402 (expression)
    '|'          [reduce using rule 403 (expression)]
    '<'          reduce using rule 402 (expression)
    '<'          [reduce using rule 403 (expression)]
    '>'          reduce using rule 402 (expression)
    '>'          [reduce using rule 403 (expression)]
    '^'          reduce using rule 402 (expression)
    '^'          [reduce using rule 403 (expression)]
    EQ_EQ        reduce using rule 402 (expression)
    EQ_EQ        [reduce using rule 403 (expression)]
    NOT_EQ       reduce using rule 402 (expression)
    NOT_EQ       [reduce using rule 403 (expression)]
    EQ_EQ_EQ     reduce using rule 402 (expression)
    EQ_EQ_EQ     [reduce using rule 403 (expression)]
    NOT_EQ_EQ    reduce using rule 402 (expression)
    NOT_EQ_EQ    [reduce using rule 403 (expression)]
    AMP_AMP      reduce using rule 402 (expression)
    AMP_AMP      [reduce using rule 403 (expression)]
    PIPE_PIPE    reduce using rule 402 (expression)
    PIPE_PIPE    [reduce using rule 403 (expression)]
    LTE          reduce using rule 402 (expression)
    LTE          [reduce using rule 403 (expression)]
    GTE          reduce using rule 402 (expression)
    GTE          [reduce using rule 403 (expression)]
    CARET_TILDE  reduce using rule 402 (expression)
    CARET_TILDE  [reduce using rule 403 (expression)]
    LSHIFT       reduce using rule 402 (expression)
    LSHIFT       [reduce using rule 403 (expression)]
    RSHIFT       reduce using rule 402 (expression)
    RSHIFT       [reduce using rule 403 (expression)]
    $default     reduce using rule 402 (expression)


State 664

  328 path_delay_value: '(' path_delay_expression . ',' path_delay_expression ')'
  329                 | '(' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ')'
  330                 | '(' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  331                 | '(' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 751


State 665

  332 path_delay_expression: mintypmax_expression .
  445 primary: '(' mintypmax_expression . ')'

    ')'  shift, and go to state 291

    $default  reduce using rule 332 (path_delay_expression)


State 666

  310 path_declaration: path_description '=' path_delay_value ';' .

    $default  reduce using rule 310 (path_declaration)


State 667

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor . EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'
  382                                | if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor . AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    EQ_GT   shift, and go to state 752
    AST_GT  shift, and go to state 753


State 668

  140 register_variable: name_of_memory '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 754


State 669

  108 net_declaration: TRIREG charge_strength_opt expandrange_opt delay_opt list_of_variables ';' .

    $default  reduce using rule 108 (net_declaration)


State 670

  153 drive_strength: '(' STRENGTH0 ',' STRENGTH1 ')' .

    $default  reduce using rule 153 (drive_strength)


State 671

  154 drive_strength: '(' STRENGTH1 ',' STRENGTH0 ')' .

    $default  reduce using rule 154 (drive_strength)


State 672

  397 comma_mintypmax_expression_opt: ',' . mintypmax_expression

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    mintypmax_expression     go to state 755
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 673

  468 delay: '#' '(' mintypmax_expression comma_mintypmax_expression_opt . comma_mintypmax_expression_opt ')'

    ','  shift, and go to state 672

    $default  reduce using rule 396 (comma_mintypmax_expression_opt)

    comma_mintypmax_expression_opt  go to state 756


State 674

  169 list_of_assignments: list_of_assignments ',' assignment .

    $default  reduce using rule 169 (list_of_assignments)


State 675

  477 event_expression: event_expression . OR event_expression
  477                 | event_expression OR event_expression .

    OR  shift, and go to state 575

    OR        [reduce using rule 477 (event_expression)]
    $default  reduce using rule 477 (event_expression)


State 676

  285 block_declaration: parameter_declaration .

    $default  reduce using rule 285 (block_declaration)


State 677

  286 block_declaration: reg_declaration .

    $default  reduce using rule 286 (block_declaration)


State 678

  289 block_declaration: time_declaration .

    $default  reduce using rule 289 (block_declaration)


State 679

  287 block_declaration: integer_declaration .

    $default  reduce using rule 287 (block_declaration)


State 680

  288 block_declaration: real_declaration .

    $default  reduce using rule 288 (block_declaration)


State 681

  290 block_declaration: event_declaration .

    $default  reduce using rule 290 (block_declaration)


State 682

  240 statement_list: statement_list . statement
  279 seq_block: _BEGIN_ ':' name_of_block block_declaration_list statement_list . END

    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    END         shift, and go to state 757
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement                go to state 474
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 683

  284 block_declaration_list: block_declaration_list block_declaration .

    $default  reduce using rule 284 (block_declaration_list)


State 684

  243 statement: IF '(' expression ')' statement_or_null .
  244          | IF '(' expression ')' statement_or_null . ELSE statement_or_null

    ELSE  shift, and go to state 758

    ELSE      [reduce using rule 243 (statement)]
    $default  reduce using rule 243 (statement)


State 685

  276 case_item: DEFAULT . ':' statement_or_null
  277          | DEFAULT . statement_or_null

    ';'         shift, and go to state 392
    ':'         shift, and go to state 759
    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement_or_null        go to state 760
    statement                go to state 394
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 686

  245 statement: CASE '(' expression ')' case_item_list . ENDCASE
  274 case_item_list: case_item_list . case_item

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    ENDCASE          shift, and go to state 761
    DEFAULT          shift, and go to state 685
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    case_item                go to state 762
    expression_list          go to state 688
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 687

  273 case_item_list: case_item .

    $default  reduce using rule 273 (case_item_list)


State 688

  275 case_item: expression_list . ':' statement_or_null
  401 expression_list: expression_list . ',' expression

    ':'  shift, and go to state 763
    ','  shift, and go to state 294


State 689

  246 statement: CASEZ '(' expression ')' case_item_list . ENDCASE
  274 case_item_list: case_item_list . case_item

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    ENDCASE          shift, and go to state 764
    DEFAULT          shift, and go to state 685
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    case_item                go to state 762
    expression_list          go to state 688
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 690

  247 statement: CASEX '(' expression ')' case_item_list . ENDCASE
  274 case_item_list: case_item_list . case_item

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    ENDCASE          shift, and go to state 765
    DEFAULT          shift, and go to state 685
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    case_item                go to state 762
    expression_list          go to state 688
    expression               go to state 300
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 691

  249 statement: REPEAT '(' expression ')' statement .

    $default  reduce using rule 249 (statement)


State 692

  271 delay_or_event_control: event_control .
  272                       | REPEAT '(' expression ')' event_control .

    ';'         reduce using rule 271 (delay_or_event_control)
    ';'         [reduce using rule 272 (delay_or_event_control)]
    '{'         reduce using rule 271 (delay_or_event_control)
    '{'         [reduce using rule 272 (delay_or_event_control)]
    '@'         reduce using rule 271 (delay_or_event_control)
    '@'         [reduce using rule 272 (delay_or_event_control)]
    '#'         reduce using rule 271 (delay_or_event_control)
    '#'         [reduce using rule 272 (delay_or_event_control)]
    '$'         reduce using rule 271 (delay_or_event_control)
    '$'         [reduce using rule 272 (delay_or_event_control)]
    HYPH_GT     reduce using rule 271 (delay_or_event_control)
    HYPH_GT     [reduce using rule 272 (delay_or_event_control)]
    _BEGIN_     reduce using rule 271 (delay_or_event_control)
    _BEGIN_     [reduce using rule 272 (delay_or_event_control)]
    ASSIGN      reduce using rule 271 (delay_or_event_control)
    ASSIGN      [reduce using rule 272 (delay_or_event_control)]
    DEASSIGN    reduce using rule 271 (delay_or_event_control)
    DEASSIGN    [reduce using rule 272 (delay_or_event_control)]
    IF          reduce using rule 271 (delay_or_event_control)
    IF          [reduce using rule 272 (delay_or_event_control)]
    CASE        reduce using rule 271 (delay_or_event_control)
    CASE        [reduce using rule 272 (delay_or_event_control)]
    CASEZ       reduce using rule 271 (delay_or_event_control)
    CASEZ       [reduce using rule 272 (delay_or_event_control)]
    CASEX       reduce using rule 271 (delay_or_event_control)
    CASEX       [reduce using rule 272 (delay_or_event_control)]
    FOREVER     reduce using rule 271 (delay_or_event_control)
    FOREVER     [reduce using rule 272 (delay_or_event_control)]
    REPEAT      reduce using rule 271 (delay_or_event_control)
    REPEAT      [reduce using rule 272 (delay_or_event_control)]
    WHILE       reduce using rule 271 (delay_or_event_control)
    WHILE       [reduce using rule 272 (delay_or_event_control)]
    FOR         reduce using rule 271 (delay_or_event_control)
    FOR         [reduce using rule 272 (delay_or_event_control)]
    WAIT        reduce using rule 271 (delay_or_event_control)
    WAIT        [reduce using rule 272 (delay_or_event_control)]
    DISABLE     reduce using rule 271 (delay_or_event_control)
    DISABLE     [reduce using rule 272 (delay_or_event_control)]
    FORCE       reduce using rule 271 (delay_or_event_control)
    FORCE       [reduce using rule 272 (delay_or_event_control)]
    RELEASE     reduce using rule 271 (delay_or_event_control)
    RELEASE     [reduce using rule 272 (delay_or_event_control)]
    FORK        reduce using rule 271 (delay_or_event_control)
    FORK        [reduce using rule 272 (delay_or_event_control)]
    IDENTIFIER  reduce using rule 271 (delay_or_event_control)
    IDENTIFIER  [reduce using rule 272 (delay_or_event_control)]
    $default    reduce using rule 271 (delay_or_event_control)


State 693

  250 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 250 (statement)


State 694

  251 statement: FOR '(' assignment ';' expression . ';' assignment ')' statement
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ';'          shift, and go to state 766
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 695

  253 statement: WAIT '(' expression ')' statement_or_null .

    $default  reduce using rule 253 (statement)


State 696

  240 statement_list: statement_list . statement
  281 par_block: FORK ':' name_of_block block_declaration_list statement_list . JOIN

    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    JOIN        shift, and go to state 767
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement                go to state 474
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 697

  292 task_enable: name_of_task '(' expression_list ')' ';' .

    $default  reduce using rule 292 (task_enable)


State 698

  294 system_task_enable: name_of_system_task '(' expression_list ')' ';' .

    $default  reduce using rule 294 (system_task_enable)


State 699

  272 delay_or_event_control: REPEAT '(' expression . ')' event_control
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ')'          shift, and go to state 768
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 700

  267 blocking_assignment: lvalue '=' delay_or_event_control expression ';' .
  269 non_blocking_assignment: lvalue '=' delay_or_event_control expression ';' .

    ';'       reduce using rule 267 (blocking_assignment)
    ';'       [reduce using rule 269 (non_blocking_assignment)]
    $default  reduce using rule 267 (blocking_assignment)


State 701

  393 lvalue: identifier_hier '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 769


State 702

  234 named_port_connection: '.' IDENTIFIER . '(' expression ')'

    '('  shift, and go to state 770


State 703

  222 module_instance: name_of_instance '(' list_of_module_connections_opt ')' .

    $default  reduce using rule 222 (module_instance)


State 704

  229 module_port_connection_list: module_port_connection_list ',' . module_port_connection

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    BASE      reduce using rule 446 (unsigned_number_opt)
    $default  reduce using rule 230 (module_port_connection)

    name_of_function         go to state 65
    module_port_connection   go to state 771
    expression               go to state 603
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 705

  233 named_port_connection_list: named_port_connection_list ',' . named_port_connection

    '.'  shift, and go to state 596

    named_port_connection  go to state 772


State 706

  206 UDP_instance_list: UDP_instance_list ',' UDP_instance .

    $default  reduce using rule 206 (UDP_instance_list)


State 707

   90 name_of_function: IDENTIFIER .
  214 terminal: IDENTIFIER .
  462 identifier_hier: IDENTIFIER .

    '('       reduce using rule 90 (name_of_function)
    '('       [reduce using rule 462 (identifier_hier)]
    ')'       reduce using rule 214 (terminal)
    ')'       [reduce using rule 462 (identifier_hier)]
    ','       reduce using rule 214 (terminal)
    ','       [reduce using rule 462 (identifier_hier)]
    $default  reduce using rule 462 (identifier_hier)


State 708

  207 UDP_instance: name_of_UDP_instance_opt '(' terminal_list . ')'
  212 terminal_list: terminal_list . ',' terminal

    ')'  shift, and go to state 773
    ','  shift, and go to state 774


State 709

  211 terminal_list: terminal .

    $default  reduce using rule 211 (terminal_list)


State 710

  213 terminal: expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 213 (terminal)

    BINARY_OPERATOR  go to state 195


State 711

  109 net_declaration: NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments ';' .
  132 continuous_assign: NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments ';' .

    ENDMODULE   reduce using rule 109 (net_declaration)
    ENDMODULE   [reduce using rule 132 (continuous_assign)]
    TASK        reduce using rule 109 (net_declaration)
    TASK        [reduce using rule 132 (continuous_assign)]
    FUNCTION    reduce using rule 109 (net_declaration)
    FUNCTION    [reduce using rule 132 (continuous_assign)]
    SPECIFY     reduce using rule 109 (net_declaration)
    SPECIFY     [reduce using rule 132 (continuous_assign)]
    INTEGER     reduce using rule 109 (net_declaration)
    INTEGER     [reduce using rule 132 (continuous_assign)]
    REAL        reduce using rule 109 (net_declaration)
    REAL        [reduce using rule 132 (continuous_assign)]
    TIME        reduce using rule 109 (net_declaration)
    TIME        [reduce using rule 132 (continuous_assign)]
    PARAMETER   reduce using rule 109 (net_declaration)
    PARAMETER   [reduce using rule 132 (continuous_assign)]
    DEFPARAM    reduce using rule 109 (net_declaration)
    DEFPARAM    [reduce using rule 132 (continuous_assign)]
    INPUT       reduce using rule 109 (net_declaration)
    INPUT       [reduce using rule 132 (continuous_assign)]
    OUTPUT      reduce using rule 109 (net_declaration)
    OUTPUT      [reduce using rule 132 (continuous_assign)]
    INOUT       reduce using rule 109 (net_declaration)
    INOUT       [reduce using rule 132 (continuous_assign)]
    WIRE        reduce using rule 109 (net_declaration)
    WIRE        [reduce using rule 132 (continuous_assign)]
    TRI         reduce using rule 109 (net_declaration)
    TRI         [reduce using rule 132 (continuous_assign)]
    TRI0        reduce using rule 109 (net_declaration)
    TRI0        [reduce using rule 132 (continuous_assign)]
    TRI1        reduce using rule 109 (net_declaration)
    TRI1        [reduce using rule 132 (continuous_assign)]
    SUPPLY0     reduce using rule 109 (net_declaration)
    SUPPLY0     [reduce using rule 132 (continuous_assign)]
    SUPPLY1     reduce using rule 109 (net_declaration)
    SUPPLY1     [reduce using rule 132 (continuous_assign)]
    WAND        reduce using rule 109 (net_declaration)
    WAND        [reduce using rule 132 (continuous_assign)]
    TRIAND      reduce using rule 109 (net_declaration)
    TRIAND      [reduce using rule 132 (continuous_assign)]
    TRIOR       reduce using rule 109 (net_declaration)
    TRIOR       [reduce using rule 132 (continuous_assign)]
    WOR         reduce using rule 109 (net_declaration)
    WOR         [reduce using rule 132 (continuous_assign)]
    TRIREG      reduce using rule 109 (net_declaration)
    TRIREG      [reduce using rule 132 (continuous_assign)]
    REG         reduce using rule 109 (net_declaration)
    REG         [reduce using rule 132 (continuous_assign)]
    EVENT       reduce using rule 109 (net_declaration)
    EVENT       [reduce using rule 132 (continuous_assign)]
    AND         reduce using rule 109 (net_declaration)
    AND         [reduce using rule 132 (continuous_assign)]
    NAND        reduce using rule 109 (net_declaration)
    NAND        [reduce using rule 132 (continuous_assign)]
    OR          reduce using rule 109 (net_declaration)
    OR          [reduce using rule 132 (continuous_assign)]
    NOR         reduce using rule 109 (net_declaration)
    NOR         [reduce using rule 132 (continuous_assign)]
    XOR         reduce using rule 109 (net_declaration)
    XOR         [reduce using rule 132 (continuous_assign)]
    XNOR        reduce using rule 109 (net_declaration)
    XNOR        [reduce using rule 132 (continuous_assign)]
    BUF         reduce using rule 109 (net_declaration)
    BUF         [reduce using rule 132 (continuous_assign)]
    BUFIF0      reduce using rule 109 (net_declaration)
    BUFIF0      [reduce using rule 132 (continuous_assign)]
    BUFIF1      reduce using rule 109 (net_declaration)
    BUFIF1      [reduce using rule 132 (continuous_assign)]
    NOT         reduce using rule 109 (net_declaration)
    NOT         [reduce using rule 132 (continuous_assign)]
    NOTIF0      reduce using rule 109 (net_declaration)
    NOTIF0      [reduce using rule 132 (continuous_assign)]
    NOTIF1      reduce using rule 109 (net_declaration)
    NOTIF1      [reduce using rule 132 (continuous_assign)]
    PULLDOWN    reduce using rule 109 (net_declaration)
    PULLDOWN    [reduce using rule 132 (continuous_assign)]
    PULLUP      reduce using rule 109 (net_declaration)
    PULLUP      [reduce using rule 132 (continuous_assign)]
    NMOS        reduce using rule 109 (net_declaration)
    NMOS        [reduce using rule 132 (continuous_assign)]
    RNMOS       reduce using rule 109 (net_declaration)
    RNMOS       [reduce using rule 132 (continuous_assign)]
    PMOS        reduce using rule 109 (net_declaration)
    PMOS        [reduce using rule 132 (continuous_assign)]
    RPMOS       reduce using rule 109 (net_declaration)
    RPMOS       [reduce using rule 132 (continuous_assign)]
    CMOS        reduce using rule 109 (net_declaration)
    CMOS        [reduce using rule 132 (continuous_assign)]
    RCMOS       reduce using rule 109 (net_declaration)
    RCMOS       [reduce using rule 132 (continuous_assign)]
    TRAN        reduce using rule 109 (net_declaration)
    TRAN        [reduce using rule 132 (continuous_assign)]
    RTRAN       reduce using rule 109 (net_declaration)
    RTRAN       [reduce using rule 132 (continuous_assign)]
    TRANIF0     reduce using rule 109 (net_declaration)
    TRANIF0     [reduce using rule 132 (continuous_assign)]
    TRANIF1     reduce using rule 109 (net_declaration)
    TRANIF1     [reduce using rule 132 (continuous_assign)]
    RTRANIF0    reduce using rule 109 (net_declaration)
    RTRANIF0    [reduce using rule 132 (continuous_assign)]
    RTRANIF1    reduce using rule 109 (net_declaration)
    RTRANIF1    [reduce using rule 132 (continuous_assign)]
    ASSIGN      reduce using rule 109 (net_declaration)
    ASSIGN      [reduce using rule 132 (continuous_assign)]
    _INITIAL_   reduce using rule 109 (net_declaration)
    _INITIAL_   [reduce using rule 132 (continuous_assign)]
    ALWAYS      reduce using rule 109 (net_declaration)
    ALWAYS      [reduce using rule 132 (continuous_assign)]
    IDENTIFIER  reduce using rule 109 (net_declaration)
    IDENTIFIER  [reduce using rule 132 (continuous_assign)]
    $default    reduce using rule 109 (net_declaration)


State 712

  198 gate_instance_list: gate_instance_list ',' gate_instance .

    $default  reduce using rule 198 (gate_instance_list)


State 713

  199 gate_instance: name_of_gate_instance_opt '(' terminal_list . ')'
  212 terminal_list: terminal_list . ',' terminal

    ')'  shift, and go to state 775
    ','  shift, and go to state 774


State 714

   58 UDP_initial_statement: _INITIAL_ output_terminal_name '=' INIT_VAL . ';'

    ';'  shift, and go to state 776


State 715

   60 table_definition: TABLE table_entries ENDTABLE .

    $default  reduce using rule 60 (table_definition)


State 716

   64 combinational_entry_list: combinational_entry_list combinational_entry .

    $default  reduce using rule 64 (combinational_entry_list)


State 717

   65 combinational_entry: level_input_list . ':' OUTPUT_SYMBOL ';'

    ':'  shift, and go to state 721


State 718

   67 sequential_entry_list: sequential_entry_list sequential_entry .

    $default  reduce using rule 67 (sequential_entry_list)


State 719

   69 input_list: level_input_list .

    $default  reduce using rule 69 (input_list)


State 720

   68 sequential_entry: input_list ':' . state ':' next_state ';'

    LEVEL_SYMBOL  shift, and go to state 777

    state  go to state 778


State 721

   65 combinational_entry: level_input_list ':' . OUTPUT_SYMBOL ';'

    OUTPUT_SYMBOL  shift, and go to state 779


State 722

   73 edge: '(' . LEVEL_SYMBOL LEVEL_SYMBOL ')'

    LEVEL_SYMBOL  shift, and go to state 780


State 723

   79 level_symbol_star: level_symbol_star LEVEL_SYMBOL .

    $default  reduce using rule 79 (level_symbol_star)


State 724

   74 edge: EDGE_SYMBOL .

    $default  reduce using rule 74 (edge)


State 725

   72 edge_input_list: level_symbol_star edge . level_symbol_star

    $default  reduce using rule 78 (level_symbol_star)

    level_symbol_star  go to state 781


State 726

   81 level_symbol_plus: level_symbol_plus LEVEL_SYMBOL .

    $default  reduce using rule 81 (level_symbol_plus)


State 727

   84 function: FUNCTION range_or_type_opt name_of_function ';' tf_declaration_plus statement ENDFUNCTION .

    $default  reduce using rule 84 (function)


State 728

  312 path_description: '(' list_of_path_inputs AST_GT list_of_path_outputs ')' .

    $default  reduce using rule 312 (path_description)


State 729

  321 specify_output_terminal_descriptor_list: specify_output_terminal_descriptor_list ',' . specify_output_terminal_descriptor

    IDENTIFIER  shift, and go to state 634

    specify_output_terminal_descriptor  go to state 782
    output_identifier                   go to state 638


State 730

  323 specify_output_terminal_descriptor: output_identifier '[' . constant_expression ']'
  324                                   | output_identifier '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 783
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 731

  311 path_description: '(' specify_input_terminal_descriptor EQ_GT specify_output_terminal_descriptor ')' .

    $default  reduce using rule 311 (path_description)


State 732

  319 specify_input_terminal_descriptor: input_identifier '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 784
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 733

  318 specify_input_terminal_descriptor: input_identifier '[' constant_expression ']' .

    $default  reduce using rule 318 (specify_input_terminal_descriptor)


State 734

  351 edge_control_specifier: EDGE '[' . edge_descriptor_list ']'

    EDGE_DESCRIPTOR  shift, and go to state 785

    edge_descriptor_list  go to state 786


State 735

  335 system_timing_check: '$' SETUP '(' timing_check_event ',' . timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    $default  reduce using rule 346 (timing_check_event_control_opt)

    timing_check_event              go to state 787
    timing_check_event_control_opt  go to state 646
    timing_check_event_control      go to state 647
    edge_control_specifier          go to state 648


State 736

  325 input_identifier: IDENTIFIER .
  326 output_identifier: IDENTIFIER .

    '['          reduce using rule 325 (input_identifier)
    '['          [reduce using rule 326 (output_identifier)]
    ','          reduce using rule 325 (input_identifier)
    ','          [reduce using rule 326 (output_identifier)]
    AMP_AMP_AMP  reduce using rule 325 (input_identifier)
    AMP_AMP_AMP  [reduce using rule 326 (output_identifier)]
    $default     reduce using rule 325 (input_identifier)


State 737

  343 specify_terminal_descriptor: specify_input_terminal_descriptor .

    $default  reduce using rule 343 (specify_terminal_descriptor)


State 738

  344 specify_terminal_descriptor: specify_output_terminal_descriptor .

    $default  reduce using rule 344 (specify_terminal_descriptor)


State 739

  342 timing_check_event: timing_check_event_control_opt specify_terminal_descriptor . amp_timing_check_condition_opt

    AMP_AMP_AMP  shift, and go to state 788

    $default  reduce using rule 354 (amp_timing_check_condition_opt)

    amp_timing_check_condition_opt  go to state 789


State 740

  336 system_timing_check: '$' HOLD '(' timing_check_event ',' . timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    $default  reduce using rule 346 (timing_check_event_control_opt)

    timing_check_event              go to state 790
    timing_check_event_control_opt  go to state 646
    timing_check_event_control      go to state 647
    edge_control_specifier          go to state 648


State 741

  337 system_timing_check: '$' PERIOD '(' controlled_timing_check_event ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    timing_check_limit       go to state 791
    expression               go to state 792
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 742

  345 controlled_timing_check_event: timing_check_event_control specify_terminal_descriptor . amp_timing_check_condition_opt

    AMP_AMP_AMP  shift, and go to state 788

    $default  reduce using rule 354 (amp_timing_check_condition_opt)

    amp_timing_check_condition_opt  go to state 793


State 743

  338 system_timing_check: '$' WIDTH '(' controlled_timing_check_event ',' . timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    timing_check_limit       go to state 794
    expression               go to state 792
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 744

  339 system_timing_check: '$' SKEW '(' timing_check_event ',' . timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    $default  reduce using rule 346 (timing_check_event_control_opt)

    timing_check_event              go to state 795
    timing_check_event_control_opt  go to state 646
    timing_check_event_control      go to state 647
    edge_control_specifier          go to state 648


State 745

  340 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' . timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    $default  reduce using rule 346 (timing_check_event_control_opt)

    timing_check_event              go to state 796
    timing_check_event_control_opt  go to state 646
    timing_check_event_control      go to state 647
    edge_control_specifier          go to state 648


State 746

  341 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' . timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 642
    NEGEDGE  shift, and go to state 643
    EDGE     shift, and go to state 644

    $default  reduce using rule 346 (timing_check_event_control_opt)

    timing_check_event              go to state 797
    timing_check_event_control_opt  go to state 646
    timing_check_event_control      go to state 647
    edge_control_specifier          go to state 648


State 747

  374 conditional_port_expression: port_reference BINARY_OPERATOR port_reference .

    $default  reduce using rule 374 (conditional_port_expression)


State 748

  370 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' . specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  371                                 | IF '(' conditional_port_expression ')' '(' . list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 429

    list_of_path_inputs                     go to state 798
    specify_input_terminal_descriptor_list  go to state 431
    specify_input_terminal_descriptor       go to state 799
    input_identifier                        go to state 433


State 749

  388 sdpd: IF '(' sdpd_conditional_expression ')' path_description . '=' path_delay_value ';'

    '='  shift, and go to state 800


State 750

  389 sdpd_conditional_expression: expression BINARY_OPERATOR expression .
  404 expression: expression . BINARY_OPERATOR expression
  404           | expression BINARY_OPERATOR expression .
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    ')'          reduce using rule 389 (sdpd_conditional_expression)
    ')'          [reduce using rule 404 (expression)]
    '?'          [reduce using rule 404 (expression)]
    '+'          [reduce using rule 404 (expression)]
    '-'          [reduce using rule 404 (expression)]
    '*'          [reduce using rule 404 (expression)]
    '/'          [reduce using rule 404 (expression)]
    '%'          [reduce using rule 404 (expression)]
    '&'          [reduce using rule 404 (expression)]
    '|'          [reduce using rule 404 (expression)]
    '<'          [reduce using rule 404 (expression)]
    '>'          [reduce using rule 404 (expression)]
    '^'          [reduce using rule 404 (expression)]
    EQ_EQ        [reduce using rule 404 (expression)]
    NOT_EQ       [reduce using rule 404 (expression)]
    EQ_EQ_EQ     [reduce using rule 404 (expression)]
    NOT_EQ_EQ    [reduce using rule 404 (expression)]
    AMP_AMP      [reduce using rule 404 (expression)]
    PIPE_PIPE    [reduce using rule 404 (expression)]
    LTE          [reduce using rule 404 (expression)]
    GTE          [reduce using rule 404 (expression)]
    CARET_TILDE  [reduce using rule 404 (expression)]
    LSHIFT       [reduce using rule 404 (expression)]
    RSHIFT       [reduce using rule 404 (expression)]
    $default     reduce using rule 389 (sdpd_conditional_expression)

    BINARY_OPERATOR  go to state 195


State 751

  328 path_delay_value: '(' path_delay_expression ',' . path_delay_expression ')'
  329                 | '(' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ')'
  330                 | '(' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  331                 | '(' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 801
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 752

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT . '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    '('  shift, and go to state 802


State 753

  382 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT . '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    '('  shift, and go to state 803


State 754

  140 register_variable: name_of_memory '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 140 (register_variable)


State 755

  397 comma_mintypmax_expression_opt: ',' mintypmax_expression .

    $default  reduce using rule 397 (comma_mintypmax_expression_opt)


State 756

  468 delay: '#' '(' mintypmax_expression comma_mintypmax_expression_opt comma_mintypmax_expression_opt . ')'

    ')'  shift, and go to state 804


State 757

  279 seq_block: _BEGIN_ ':' name_of_block block_declaration_list statement_list END .

    $default  reduce using rule 279 (seq_block)


State 758

  244 statement: IF '(' expression ')' statement_or_null ELSE . statement_or_null

    ';'         shift, and go to state 392
    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement_or_null        go to state 805
    statement                go to state 394
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 759

  276 case_item: DEFAULT ':' . statement_or_null

    ';'         shift, and go to state 392
    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement_or_null        go to state 806
    statement                go to state 394
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 760

  277 case_item: DEFAULT statement_or_null .

    $default  reduce using rule 277 (case_item)


State 761

  245 statement: CASE '(' expression ')' case_item_list ENDCASE .

    $default  reduce using rule 245 (statement)


State 762

  274 case_item_list: case_item_list case_item .

    $default  reduce using rule 274 (case_item_list)


State 763

  275 case_item: expression_list ':' . statement_or_null

    ';'         shift, and go to state 392
    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement_or_null        go to state 807
    statement                go to state 394
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 764

  246 statement: CASEZ '(' expression ')' case_item_list ENDCASE .

    $default  reduce using rule 246 (statement)


State 765

  247 statement: CASEX '(' expression ')' case_item_list ENDCASE .

    $default  reduce using rule 247 (statement)


State 766

  251 statement: FOR '(' assignment ';' expression ';' . assignment ')' statement

    '{'         shift, and go to state 236
    IDENTIFIER  shift, and go to state 217

    assignment       go to state 808
    lvalue           go to state 371
    concatenation    go to state 269
    identifier_hier  go to state 270


State 767

  281 par_block: FORK ':' name_of_block block_declaration_list statement_list JOIN .

    $default  reduce using rule 281 (par_block)


State 768

  272 delay_or_event_control: REPEAT '(' expression ')' . event_control

    '@'  shift, and go to state 237

    event_control  go to state 809


State 769

  393 lvalue: identifier_hier '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 393 (lvalue)


State 770

  234 named_port_connection: '.' IDENTIFIER '(' . expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 810
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 771

  229 module_port_connection_list: module_port_connection_list ',' module_port_connection .

    $default  reduce using rule 229 (module_port_connection_list)


State 772

  233 named_port_connection_list: named_port_connection_list ',' named_port_connection .

    $default  reduce using rule 233 (named_port_connection_list)


State 773

  207 UDP_instance: name_of_UDP_instance_opt '(' terminal_list ')' .

    $default  reduce using rule 207 (UDP_instance)


State 774

  212 terminal_list: terminal_list ',' . terminal

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 707
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    terminal                 go to state 811
    expression               go to state 710
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 775

  199 gate_instance: name_of_gate_instance_opt '(' terminal_list ')' .

    $default  reduce using rule 199 (gate_instance)


State 776

   58 UDP_initial_statement: _INITIAL_ output_terminal_name '=' INIT_VAL ';' .

    $default  reduce using rule 58 (UDP_initial_statement)


State 777

   75 state: LEVEL_SYMBOL .

    $default  reduce using rule 75 (state)


State 778

   68 sequential_entry: input_list ':' state . ':' next_state ';'

    ':'  shift, and go to state 812


State 779

   65 combinational_entry: level_input_list ':' OUTPUT_SYMBOL . ';'

    ';'  shift, and go to state 813


State 780

   73 edge: '(' LEVEL_SYMBOL . LEVEL_SYMBOL ')'

    LEVEL_SYMBOL  shift, and go to state 814


State 781

   72 edge_input_list: level_symbol_star edge level_symbol_star .
   79 level_symbol_star: level_symbol_star . LEVEL_SYMBOL

    LEVEL_SYMBOL  shift, and go to state 723

    $default  reduce using rule 72 (edge_input_list)


State 782

  321 specify_output_terminal_descriptor_list: specify_output_terminal_descriptor_list ',' specify_output_terminal_descriptor .

    $default  reduce using rule 321 (specify_output_terminal_descriptor_list)


State 783

  323 specify_output_terminal_descriptor: output_identifier '[' constant_expression . ']'
  324                                   | output_identifier '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 815
    ']'  shift, and go to state 816


State 784

  319 specify_input_terminal_descriptor: input_identifier '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 817


State 785

  352 edge_descriptor_list: EDGE_DESCRIPTOR .

    $default  reduce using rule 352 (edge_descriptor_list)


State 786

  351 edge_control_specifier: EDGE '[' edge_descriptor_list . ']'
  353 edge_descriptor_list: edge_descriptor_list . ',' EDGE_DESCRIPTOR

    ']'  shift, and go to state 818
    ','  shift, and go to state 819


State 787

  335 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 820


State 788

  355 amp_timing_check_condition_opt: AMP_AMP_AMP . timing_check_condition

    '('         shift, and go to state 821
    '~'         shift, and go to state 822
    IDENTIFIER  shift, and go to state 217

    timing_check_condition         go to state 823
    scalar_timing_check_condition  go to state 824
    scalar_expression              go to state 825
    identifier_hier                go to state 826


State 789

  342 timing_check_event: timing_check_event_control_opt specify_terminal_descriptor amp_timing_check_condition_opt .

    $default  reduce using rule 342 (timing_check_event)


State 790

  336 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 827


State 791

  337 system_timing_check: '$' PERIOD '(' controlled_timing_check_event ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 828

    $default  reduce using rule 367 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 829


State 792

  366 timing_check_limit: expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 366 (timing_check_limit)

    BINARY_OPERATOR  go to state 195


State 793

  345 controlled_timing_check_event: timing_check_event_control specify_terminal_descriptor amp_timing_check_condition_opt .

    $default  reduce using rule 345 (controlled_timing_check_event)


State 794

  338 system_timing_check: '$' WIDTH '(' controlled_timing_check_event ',' timing_check_limit . comma_const_exp_comma_notify_reg_opt ')' ';'

    ','  shift, and go to state 830

    $default  reduce using rule 333 (comma_const_exp_comma_notify_reg_opt)

    comma_const_exp_comma_notify_reg_opt  go to state 831


State 795

  339 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 832


State 796

  340 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 833


State 797

  341 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event . ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 834


State 798

  371 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs . polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

    '+'  shift, and go to state 835
    '-'  shift, and go to state 836

    $default  reduce using rule 375 (polarity_operator_opt)

    polarity_operator_opt  go to state 837
    polarity_operator      go to state 838


State 799

  315 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor .
  370 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor . polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'

    '+'  shift, and go to state 835
    '-'  shift, and go to state 836

    '+'       [reduce using rule 315 (specify_input_terminal_descriptor_list)]
    '-'       [reduce using rule 315 (specify_input_terminal_descriptor_list)]
    EQ_GT     reduce using rule 375 (polarity_operator_opt)
    $default  reduce using rule 315 (specify_input_terminal_descriptor_list)

    polarity_operator_opt  go to state 839
    polarity_operator      go to state 838


State 800

  388 sdpd: IF '(' sdpd_conditional_expression ')' path_description '=' . path_delay_value ';'

    '('              shift, and go to state 556
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_value         go to state 840
    path_delay_expression    go to state 558
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 801

  328 path_delay_value: '(' path_delay_expression ',' path_delay_expression . ')'
  329                 | '(' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ')'
  330                 | '(' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  331                 | '(' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ')'  shift, and go to state 841
    ','  shift, and go to state 842


State 802

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' . specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 634

    specify_output_terminal_descriptor  go to state 843
    output_identifier                   go to state 638


State 803

  382 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' . list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 634

    list_of_path_outputs                     go to state 844
    specify_output_terminal_descriptor_list  go to state 636
    specify_output_terminal_descriptor       go to state 637
    output_identifier                        go to state 638


State 804

  468 delay: '#' '(' mintypmax_expression comma_mintypmax_expression_opt comma_mintypmax_expression_opt ')' .

    $default  reduce using rule 468 (delay)


State 805

  244 statement: IF '(' expression ')' statement_or_null ELSE statement_or_null .

    $default  reduce using rule 244 (statement)


State 806

  276 case_item: DEFAULT ':' statement_or_null .

    $default  reduce using rule 276 (case_item)


State 807

  275 case_item: expression_list ':' statement_or_null .

    $default  reduce using rule 275 (case_item)


State 808

  251 statement: FOR '(' assignment ';' expression ';' assignment . ')' statement

    ')'  shift, and go to state 845


State 809

  272 delay_or_event_control: REPEAT '(' expression ')' event_control .

    $default  reduce using rule 272 (delay_or_event_control)


State 810

  234 named_port_connection: '.' IDENTIFIER '(' expression . ')'
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ')'          shift, and go to state 846
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 811

  212 terminal_list: terminal_list ',' terminal .

    $default  reduce using rule 212 (terminal_list)


State 812

   68 sequential_entry: input_list ':' state ':' . next_state ';'

    '-'            shift, and go to state 847
    OUTPUT_SYMBOL  shift, and go to state 848

    next_state  go to state 849


State 813

   65 combinational_entry: level_input_list ':' OUTPUT_SYMBOL ';' .

    $default  reduce using rule 65 (combinational_entry)


State 814

   73 edge: '(' LEVEL_SYMBOL LEVEL_SYMBOL . ')'

    ')'  shift, and go to state 850


State 815

  324 specify_output_terminal_descriptor: output_identifier '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 851
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 816

  323 specify_output_terminal_descriptor: output_identifier '[' constant_expression ']' .

    $default  reduce using rule 323 (specify_output_terminal_descriptor)


State 817

  319 specify_input_terminal_descriptor: input_identifier '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 319 (specify_input_terminal_descriptor)


State 818

  351 edge_control_specifier: EDGE '[' edge_descriptor_list ']' .

    $default  reduce using rule 351 (edge_control_specifier)


State 819

  353 edge_descriptor_list: edge_descriptor_list ',' . EDGE_DESCRIPTOR

    EDGE_DESCRIPTOR  shift, and go to state 852


State 820

  335 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    timing_check_limit       go to state 853
    expression               go to state 792
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 821

  357 timing_check_condition: '(' . scalar_timing_check_condition ')'

    '~'         shift, and go to state 822
    IDENTIFIER  shift, and go to state 217

    scalar_timing_check_condition  go to state 854
    scalar_expression              go to state 825
    identifier_hier                go to state 826


State 822

  359 scalar_timing_check_condition: '~' . scalar_expression

    IDENTIFIER  shift, and go to state 217

    scalar_expression  go to state 855
    identifier_hier    go to state 826


State 823

  355 amp_timing_check_condition_opt: AMP_AMP_AMP timing_check_condition .

    $default  reduce using rule 355 (amp_timing_check_condition_opt)


State 824

  356 timing_check_condition: scalar_timing_check_condition .

    $default  reduce using rule 356 (timing_check_condition)


State 825

  358 scalar_timing_check_condition: scalar_expression .
  360                              | scalar_expression . EQ_EQ SCALAR_CONSTANT
  361                              | scalar_expression . EQ_EQ_EQ SCALAR_CONSTANT
  362                              | scalar_expression . NOT_EQ SCALAR_CONSTANT
  363                              | scalar_expression . NOT_EQ_EQ SCALAR_CONSTANT

    EQ_EQ      shift, and go to state 856
    NOT_EQ     shift, and go to state 857
    EQ_EQ_EQ   shift, and go to state 858
    NOT_EQ_EQ  shift, and go to state 859

    $default  reduce using rule 358 (scalar_timing_check_condition)


State 826

  364 scalar_expression: identifier_hier .
  365                  | identifier_hier . '[' expression ']'
  463 identifier_hier: identifier_hier . '.' IDENTIFIER

    '['  shift, and go to state 860
    '.'  shift, and go to state 200

    $default  reduce using rule 364 (scalar_expression)


State 827

  336 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    timing_check_limit       go to state 861
    expression               go to state 792
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 828

  368 comma_notify_register_opt: ',' . notify_register

    IDENTIFIER  shift, and go to state 217

    notify_register  go to state 862
    identifier_hier  go to state 863


State 829

  337 system_timing_check: '$' PERIOD '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 864


State 830

  334 comma_const_exp_comma_notify_reg_opt: ',' . constant_expression ',' notify_register

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    constant_expression      go to state 865
    expression               go to state 67
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 831

  338 system_timing_check: '$' WIDTH '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt . ')' ';'

    ')'  shift, and go to state 866


State 832

  339 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    timing_check_limit       go to state 867
    expression               go to state 792
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 833

  340 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    timing_check_limit       go to state 868
    expression               go to state 792
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 834

  341 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' . timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    timing_check_limit       go to state 869
    expression               go to state 792
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 835

  377 polarity_operator: '+' .

    $default  reduce using rule 377 (polarity_operator)


State 836

  378 polarity_operator: '-' .

    $default  reduce using rule 378 (polarity_operator)


State 837

  371 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt . AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

    AST_GT  shift, and go to state 870


State 838

  376 polarity_operator_opt: polarity_operator .

    $default  reduce using rule 376 (polarity_operator_opt)


State 839

  370 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt . EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'

    EQ_GT  shift, and go to state 871


State 840

  388 sdpd: IF '(' sdpd_conditional_expression ')' path_description '=' path_delay_value . ';'

    ';'  shift, and go to state 872


State 841

  328 path_delay_value: '(' path_delay_expression ',' path_delay_expression ')' .

    $default  reduce using rule 328 (path_delay_value)


State 842

  329 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ')'
  330                 | '(' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  331                 | '(' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 873
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 843

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor . polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    '+'  shift, and go to state 835
    '-'  shift, and go to state 836

    $default  reduce using rule 375 (polarity_operator_opt)

    polarity_operator_opt  go to state 874
    polarity_operator      go to state 838


State 844

  382 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs . polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    '+'  shift, and go to state 835
    '-'  shift, and go to state 836

    $default  reduce using rule 375 (polarity_operator_opt)

    polarity_operator_opt  go to state 875
    polarity_operator      go to state 838


State 845

  251 statement: FOR '(' assignment ';' expression ';' assignment ')' . statement

    '{'         shift, and go to state 236
    '@'         shift, and go to state 237
    '#'         shift, and go to state 238
    '$'         shift, and go to state 239
    HYPH_GT     shift, and go to state 240
    _BEGIN_     shift, and go to state 241
    ASSIGN      shift, and go to state 242
    DEASSIGN    shift, and go to state 243
    IF          shift, and go to state 244
    CASE        shift, and go to state 245
    CASEZ       shift, and go to state 246
    CASEX       shift, and go to state 247
    FOREVER     shift, and go to state 248
    REPEAT      shift, and go to state 249
    WHILE       shift, and go to state 250
    FOR         shift, and go to state 251
    WAIT        shift, and go to state 252
    DISABLE     shift, and go to state 253
    FORCE       shift, and go to state 254
    RELEASE     shift, and go to state 255
    FORK        shift, and go to state 256
    IDENTIFIER  shift, and go to state 257

    name_of_task             go to state 258
    statement                go to state 876
    blocking_assignment      go to state 260
    non_blocking_assignment  go to state 261
    delay_or_event_control   go to state 262
    seq_block                go to state 263
    par_block                go to state 264
    task_enable              go to state 265
    system_task_enable       go to state 266
    name_of_system_task      go to state 267
    lvalue                   go to state 268
    concatenation            go to state 269
    identifier_hier          go to state 270
    delay_control            go to state 271
    event_control            go to state 272


State 846

  234 named_port_connection: '.' IDENTIFIER '(' expression ')' .

    $default  reduce using rule 234 (named_port_connection)


State 847

   77 next_state: '-' .

    $default  reduce using rule 77 (next_state)


State 848

   76 next_state: OUTPUT_SYMBOL .

    $default  reduce using rule 76 (next_state)


State 849

   68 sequential_entry: input_list ':' state ':' next_state . ';'

    ';'  shift, and go to state 877


State 850

   73 edge: '(' LEVEL_SYMBOL LEVEL_SYMBOL ')' .

    $default  reduce using rule 73 (edge)


State 851

  324 specify_output_terminal_descriptor: output_identifier '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 878


State 852

  353 edge_descriptor_list: edge_descriptor_list ',' EDGE_DESCRIPTOR .

    $default  reduce using rule 353 (edge_descriptor_list)


State 853

  335 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 828

    $default  reduce using rule 367 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 879


State 854

  357 timing_check_condition: '(' scalar_timing_check_condition . ')'

    ')'  shift, and go to state 880


State 855

  359 scalar_timing_check_condition: '~' scalar_expression .

    $default  reduce using rule 359 (scalar_timing_check_condition)


State 856

  360 scalar_timing_check_condition: scalar_expression EQ_EQ . SCALAR_CONSTANT

    SCALAR_CONSTANT  shift, and go to state 881


State 857

  362 scalar_timing_check_condition: scalar_expression NOT_EQ . SCALAR_CONSTANT

    SCALAR_CONSTANT  shift, and go to state 882


State 858

  361 scalar_timing_check_condition: scalar_expression EQ_EQ_EQ . SCALAR_CONSTANT

    SCALAR_CONSTANT  shift, and go to state 883


State 859

  363 scalar_timing_check_condition: scalar_expression NOT_EQ_EQ . SCALAR_CONSTANT

    SCALAR_CONSTANT  shift, and go to state 884


State 860

  365 scalar_expression: identifier_hier '[' . expression ']'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    expression               go to state 885
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 861

  336 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 828

    $default  reduce using rule 367 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 886


State 862

  368 comma_notify_register_opt: ',' notify_register .

    $default  reduce using rule 368 (comma_notify_register_opt)


State 863

  369 notify_register: identifier_hier .
  463 identifier_hier: identifier_hier . '.' IDENTIFIER

    '.'  shift, and go to state 200

    $default  reduce using rule 369 (notify_register)


State 864

  337 system_timing_check: '$' PERIOD '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 887


State 865

  334 comma_const_exp_comma_notify_reg_opt: ',' constant_expression . ',' notify_register

    ','  shift, and go to state 888


State 866

  338 system_timing_check: '$' WIDTH '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' . ';'

    ';'  shift, and go to state 889


State 867

  339 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 828

    $default  reduce using rule 367 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 890


State 868

  340 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 828

    $default  reduce using rule 367 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 891


State 869

  341 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 892


State 870

  371 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT . list_of_path_outputs ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 634

    list_of_path_outputs                     go to state 893
    specify_output_terminal_descriptor_list  go to state 636
    specify_output_terminal_descriptor       go to state 637
    output_identifier                        go to state 638


State 871

  370 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT . specify_output_terminal_descriptor ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 634

    specify_output_terminal_descriptor  go to state 894
    output_identifier                   go to state 638


State 872

  388 sdpd: IF '(' sdpd_conditional_expression ')' path_description '=' path_delay_value ';' .

    $default  reduce using rule 388 (sdpd)


State 873

  329 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ')'
  330                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  331                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ')'  shift, and go to state 895
    ','  shift, and go to state 896


State 874

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt . ':' data_source_expression ')' ')' '=' path_delay_value ';'

    ':'  shift, and go to state 897


State 875

  382 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt . ':' data_source_expression ')' ')' '=' path_delay_value ';'

    ':'  shift, and go to state 898


State 876

  251 statement: FOR '(' assignment ';' expression ';' assignment ')' statement .

    $default  reduce using rule 251 (statement)


State 877

   68 sequential_entry: input_list ':' state ':' next_state ';' .

    $default  reduce using rule 68 (sequential_entry)


State 878

  324 specify_output_terminal_descriptor: output_identifier '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 324 (specify_output_terminal_descriptor)


State 879

  335 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 899


State 880

  357 timing_check_condition: '(' scalar_timing_check_condition ')' .

    $default  reduce using rule 357 (timing_check_condition)


State 881

  360 scalar_timing_check_condition: scalar_expression EQ_EQ SCALAR_CONSTANT .

    $default  reduce using rule 360 (scalar_timing_check_condition)


State 882

  362 scalar_timing_check_condition: scalar_expression NOT_EQ SCALAR_CONSTANT .

    $default  reduce using rule 362 (scalar_timing_check_condition)


State 883

  361 scalar_timing_check_condition: scalar_expression EQ_EQ_EQ SCALAR_CONSTANT .

    $default  reduce using rule 361 (scalar_timing_check_condition)


State 884

  363 scalar_timing_check_condition: scalar_expression NOT_EQ_EQ SCALAR_CONSTANT .

    $default  reduce using rule 363 (scalar_timing_check_condition)


State 885

  365 scalar_expression: identifier_hier '[' expression . ']'
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    ']'          shift, and go to state 900
    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    BINARY_OPERATOR  go to state 195


State 886

  336 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 901


State 887

  337 system_timing_check: '$' PERIOD '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 337 (system_timing_check)


State 888

  334 comma_const_exp_comma_notify_reg_opt: ',' constant_expression ',' . notify_register

    IDENTIFIER  shift, and go to state 217

    notify_register  go to state 902
    identifier_hier  go to state 863


State 889

  338 system_timing_check: '$' WIDTH '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';' .

    $default  reduce using rule 338 (system_timing_check)


State 890

  339 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 903


State 891

  340 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 904


State 892

  341 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    timing_check_limit       go to state 905
    expression               go to state 792
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 893

  371 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs . ')' '=' path_delay_value ';'

    ')'  shift, and go to state 906


State 894

  370 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor . ')' '=' path_delay_value ';'

    ')'  shift, and go to state 907


State 895

  329 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')' .

    $default  reduce using rule 329 (path_delay_value)


State 896

  330 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  331                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 908
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 897

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' . data_source_expression ')' ')' '=' path_delay_value ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    data_source_expression   go to state 909
    expression               go to state 910
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 898

  382 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' . data_source_expression ')' ')' '=' path_delay_value ';'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    data_source_expression   go to state 911
    expression               go to state 910
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 899

  335 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 912


State 900

  365 scalar_expression: identifier_hier '[' expression ']' .

    $default  reduce using rule 365 (scalar_expression)


State 901

  336 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 913


State 902

  334 comma_const_exp_comma_notify_reg_opt: ',' constant_expression ',' notify_register .

    $default  reduce using rule 334 (comma_const_exp_comma_notify_reg_opt)


State 903

  339 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 914


State 904

  340 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 915


State 905

  341 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 828

    $default  reduce using rule 367 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 916


State 906

  371 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' . '=' path_delay_value ';'

    '='  shift, and go to state 917


State 907

  370 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' . '=' path_delay_value ';'

    '='  shift, and go to state 918


State 908

  330 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ')'
  331                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 919


State 909

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression . ')' ')' '=' path_delay_value ';'

    ')'  shift, and go to state 920


State 910

  383 data_source_expression: expression .
  404 expression: expression . BINARY_OPERATOR expression
  405           | expression . '?' expression ':' expression

    '?'          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '<'          shift, and go to state 181
    '>'          shift, and go to state 182
    '^'          shift, and go to state 183
    EQ_EQ        shift, and go to state 184
    NOT_EQ       shift, and go to state 185
    EQ_EQ_EQ     shift, and go to state 186
    NOT_EQ_EQ    shift, and go to state 187
    AMP_AMP      shift, and go to state 188
    PIPE_PIPE    shift, and go to state 189
    LTE          shift, and go to state 190
    GTE          shift, and go to state 191
    CARET_TILDE  shift, and go to state 192
    LSHIFT       shift, and go to state 193
    RSHIFT       shift, and go to state 194

    $default  reduce using rule 383 (data_source_expression)

    BINARY_OPERATOR  go to state 195


State 911

  382 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression . ')' ')' '=' path_delay_value ';'

    ')'  shift, and go to state 921


State 912

  335 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 335 (system_timing_check)


State 913

  336 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 336 (system_timing_check)


State 914

  339 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 339 (system_timing_check)


State 915

  340 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 340 (system_timing_check)


State 916

  341 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 922


State 917

  371 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' . path_delay_value ';'

    '('              shift, and go to state 556
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_value         go to state 923
    path_delay_expression    go to state 558
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 918

  370 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' . path_delay_value ';'

    '('              shift, and go to state 556
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_value         go to state 924
    path_delay_expression    go to state 558
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 919

  330 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ')'
  331                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 925
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 920

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' . ')' '=' path_delay_value ';'

    ')'  shift, and go to state 926


State 921

  382 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' . ')' '=' path_delay_value ';'

    ')'  shift, and go to state 927


State 922

  341 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 928


State 923

  371 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value . ';'

    ';'  shift, and go to state 929


State 924

  370 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value . ';'

    ';'  shift, and go to state 930


State 925

  330 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ')'
  331                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 931


State 926

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' . '=' path_delay_value ';'

    '='  shift, and go to state 932


State 927

  382 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' . '=' path_delay_value ';'

    '='  shift, and go to state 933


State 928

  341 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 341 (system_timing_check)


State 929

  371 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';' .

    $default  reduce using rule 371 (level_sensitive_path_declaration)


State 930

  370 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';' .

    $default  reduce using rule 370 (level_sensitive_path_declaration)


State 931

  330 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ')'
  331                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 934
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 932

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' . path_delay_value ';'

    '('              shift, and go to state 556
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_value         go to state 935
    path_delay_expression    go to state 558
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 933

  382 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' . path_delay_value ';'

    '('              shift, and go to state 556
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_value         go to state 936
    path_delay_expression    go to state 558
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 934

  330 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ')'
  331                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ')'  shift, and go to state 937
    ','  shift, and go to state 938


State 935

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value . ';'

    ';'  shift, and go to state 939


State 936

  382 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value . ';'

    ';'  shift, and go to state 940


State 937

  330 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')' .

    $default  reduce using rule 330 (path_delay_value)


State 938

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 941
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 939

  381 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';' .

    $default  reduce using rule 381 (edge_sensitive_path_declaration)


State 940

  382 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';' .

    $default  reduce using rule 382 (edge_sensitive_path_declaration)


State 941

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 942


State 942

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 943
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 943

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 944


State 944

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 945
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 945

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 946


State 946

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 947
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 947

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 948


State 948

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 949
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 949

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ')'

    ','  shift, and go to state 950


State 950

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ')'

    '('              shift, and go to state 48
    '{'              shift, and go to state 49
    '$'              shift, and go to state 50
    '+'              shift, and go to state 51
    '-'              shift, and go to state 52
    '!'              shift, and go to state 53
    '~'              shift, and go to state 54
    '&'              shift, and go to state 55
    '|'              shift, and go to state 56
    '^'              shift, and go to state 57
    TILDE_AMP        shift, and go to state 58
    CARET_PIPE       shift, and go to state 59
    TILDE_CARET      shift, and go to state 60
    STRING           shift, and go to state 61
    IDENTIFIER       shift, and go to state 62
    DECIMAL_NUMBER   shift, and go to state 63
    UNSIGNED_NUMBER  shift, and go to state 64

    $default  reduce using rule 446 (unsigned_number_opt)

    name_of_function         go to state 65
    path_delay_expression    go to state 951
    mintypmax_expression     go to state 559
    expression               go to state 163
    UNARY_OPERATOR           go to state 68
    primary                  go to state 69
    unsigned_number_opt      go to state 70
    number                   go to state 71
    concatenation            go to state 72
    multiple_concatenation   go to state 73
    function_call            go to state 74
    name_of_system_function  go to state 75
    identifier_hier          go to state 76


State 951

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ')'

    ')'  shift, and go to state 952


State 952

  331 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')' .

    $default  reduce using rule 331 (path_delay_value)
