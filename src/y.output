Rules useless in parser due to conflicts

  128 continuous_assign: NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments ';'

  141 charge_strength_opt: /* empty */

  210 parameter_value_assignment_opt: /* empty */

  261 non_blocking_assignment: lvalue '=' delay_or_event_control expression ';'

  371 if_expression_opt: /* empty */


State 95 conflicts: 1 shift/reduce, 5 reduce/reduce
State 127 conflicts: 2 shift/reduce, 1 reduce/reduce
State 136 conflicts: 3 shift/reduce, 2 reduce/reduce
State 145 conflicts: 1 shift/reduce
State 203 conflicts: 1 shift/reduce
State 252 conflicts: 1 shift/reduce
State 297 conflicts: 22 shift/reduce
State 375 conflicts: 1 reduce/reduce
State 510 conflicts: 1 shift/reduce
State 514 conflicts: 22 shift/reduce
State 541 conflicts: 1 shift/reduce, 22 reduce/reduce
State 559 conflicts: 1 shift/reduce
State 590 conflicts: 1 reduce/reduce
State 603 conflicts: 1 shift/reduce
State 606 conflicts: 1 shift/reduce
State 647 conflicts: 23 reduce/reduce
State 659 conflicts: 1 shift/reduce
State 668 conflicts: 1 shift/reduce
State 676 conflicts: 23 reduce/reduce
State 684 conflicts: 1 reduce/reduce
State 687 conflicts: 2 reduce/reduce
State 699 conflicts: 55 reduce/reduce
State 724 conflicts: 3 reduce/reduce
State 738 conflicts: 22 shift/reduce, 1 reduce/reduce
State 788 conflicts: 2 shift/reduce


Grammar

    0 $accept: source_text $end

    1 source_text: description_list

    2 description_list: /* empty */
    3                 | description_list description

    4 description: module
    5            | UDP

    6 module_item_list: /* empty */
    7                 | module_item_list module_item

    8 module: MODULE IDENTIFIER list_of_ports_encl_opt ';' module_item_list ENDMODULE
    9       | MACROMODULE IDENTIFIER list_of_ports_encl_opt ';' module_item_list ENDMODULE

   10 list_of_ports_encl_opt: /* empty */
   11                       | list_of_ports_encl

   12 list_of_ports_encl: '(' list_of_ports ')'

   13 list_of_ports: port
   14              | list_of_ports ',' port

   15 port: port_expression_opt
   16     | '.' name_of_port '(' port_expression_opt ')'

   17 port_expression_opt: /* empty */
   18                    | port_expression

   19 port_expression: port_reference
   20                | '{' port_reference_list '}'

   21 port_reference_list: port_reference
   22                    | port_reference_list ',' port_reference

   23 port_reference: IDENTIFIER
   24               | IDENTIFIER '[' constant_expression ']'
   25               | IDENTIFIER '[' constant_expression ':' constant_expression ']'

   26 name_of_port: IDENTIFIER

   27 module_item: parameter_declaration
   28            | input_declaration
   29            | output_declaration
   30            | inout_declaration
   31            | net_declaration
   32            | reg_declaration
   33            | time_declaration
   34            | integer_declaration
   35            | real_declaration
   36            | event_declaration
   37            | gate_declaration
   38            | UDP_instantiation
   39            | module_instantiation
   40            | parameter_override
   41            | continuous_assign
   42            | specify_block
   43            | initial_statement
   44            | always_statement
   45            | task
   46            | function

   47 UDP: PRIMITIVE IDENTIFIER '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

   48 UDP_declaration_list: UDP_declaration
   49                     | UDP_declaration_list UDP_declaration

   50 UDP_declaration: output_declaration
   51                | reg_declaration
   52                | input_declaration

   53 UDP_initial_statement_opt: /* empty */
   54                          | UDP_initial_statement

   55 UDP_initial_statement: _INITIAL_ output_terminal_name '=' INIT_VAL ';'

   56 output_terminal_name: IDENTIFIER

   57 table_definition: TABLE table_entries ENDTABLE

   58 table_entries: combinational_entry_list
   59              | sequential_entry_list

   60 combinational_entry_list: combinational_entry
   61                         | combinational_entry_list combinational_entry

   62 combinational_entry: level_input_list ':' OUTPUT_SYMBOL ';'

   63 sequential_entry_list: sequential_entry
   64                      | sequential_entry_list sequential_entry

   65 sequential_entry: input_list ':' state ':' next_state ';'

   66 input_list: level_input_list
   67           | edge_input_list

   68 level_input_list: level_symbol_plus

   69 edge_input_list: level_symbol_star edge level_symbol_star

   70 edge: '(' LEVEL_SYMBOL LEVEL_SYMBOL ')'
   71     | EDGE_SYMBOL

   72 state: LEVEL_SYMBOL

   73 next_state: OUTPUT_SYMBOL
   74           | '-'

   75 level_symbol_star: /* empty */
   76                  | level_symbol_star LEVEL_SYMBOL

   77 level_symbol_plus: LEVEL_SYMBOL
   78                  | level_symbol_plus LEVEL_SYMBOL

   79 task: TASK name_of_task ';' tf_declaration_star statement_or_null ENDTASK

   80 name_of_task: IDENTIFIER

   81 function: FUNCTION range_or_type_opt IDENTIFIER ';' tf_declaration_plus statement ENDFUNCTION

   82 range_or_type_opt: /* empty */
   83                  | range_or_type

   84 range_or_type: range
   85              | INTEGER
   86              | REAL

   87 tf_declaration_star: /* empty */
   88                    | tf_declaration_star tf_declaration

   89 tf_declaration_plus: tf_declaration
   90                    | tf_declaration_plus tf_declaration

   91 tf_declaration: parameter_declaration
   92               | input_declaration
   93               | output_declaration
   94               | inout_declaration
   95               | reg_declaration
   96               | time_declaration
   97               | integer_declaration
   98               | real_declaration

   99 parameter_declaration: PARAMETER list_of_param_assignments ';'

  100 input_declaration: INPUT range_opt list_of_variables ';'

  101 output_declaration: OUTPUT range_opt list_of_variables ';'

  102 inout_declaration: INOUT range_opt list_of_variables ';'

  103 net_declaration: NETTYPE expandrange_opt delay_opt list_of_variables ';'
  104                | TRIREG charge_strength_opt expandrange_opt delay_opt list_of_variables ';'
  105                | NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments ';'

  106 NETTYPE: WIRE
  107        | TRI
  108        | TRI1
  109        | SUPPLY0
  110        | WAND
  111        | TRIAND
  112        | TRI0
  113        | SUPPLY1
  114        | WOR
  115        | TRIOR
  116        | TRIREG

  117 expandrange_opt: /* empty */
  118                | expandrange

  119 expandrange: range
  120            | SCALARED range
  121            | VECTORED range

  122 reg_declaration: REG range_opt list_of_register_variables ';'

  123 time_declaration: TIME list_of_register_variables ';'

  124 integer_declaration: INTEGER list_of_register_variables ';'

  125 real_declaration: REAL list_of_variables ';'

  126 event_declaration: EVENT list_of_name_of_events ';'

  127 continuous_assign: ASSIGN drive_strength_opt delay_opt list_of_assignments ';'
  128                  | NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments ';'

  129 parameter_override: DEFPARAM list_of_param_assignments ';'

  130 list_of_variables: IDENTIFIER
  131                  | list_of_variables ',' IDENTIFIER

  132 list_of_register_variables: register_variable
  133                           | list_of_register_variables ',' register_variable

  134 register_variable: name_of_register
  135                  | name_of_memory '[' constant_expression ':' constant_expression ']'

  136 name_of_register: IDENTIFIER

  137 name_of_memory: IDENTIFIER

  138 list_of_name_of_events: name_of_event
  139                       | list_of_name_of_events ',' name_of_event

  140 name_of_event: IDENTIFIER

  141 charge_strength_opt: /* empty */
  142                    | charge_strength

  143 charge_strength: '(' SMALL ')'
  144                | '(' MEDIUM ')'
  145                | '(' LARGE ')'

  146 drive_strength_opt: /* empty */
  147                   | drive_strength

  148 drive_strength: '(' STRENGTH0 ',' STRENGTH1 ')'
  149               | '(' STRENGTH1 ',' STRENGTH0 ')'

  150 STRENGTH0: SUPPLY0
  151          | STRONG0
  152          | PULL0
  153          | WEAK0
  154          | HIGHZ0

  155 STRENGTH1: SUPPLY1
  156          | STRONG1
  157          | PULL1
  158          | WEAK1
  159          | HIGHZ1

  160 range_opt: /* empty */
  161          | range

  162 range: '[' constant_expression ':' constant_expression ']'

  163 list_of_assignments: assignment
  164                    | list_of_assignments ',' assignment

  165 gate_declaration: GATETYPE drive_strength_opt delay_opt gate_instance_list ';'

  166 GATETYPE: AND
  167         | NAND
  168         | OR
  169         | NOR
  170         | XOR
  171         | XNOR
  172         | BUF
  173         | BUFIF0
  174         | BUFIF1
  175         | NOT
  176         | NOTIF0
  177         | NOTIF1
  178         | PULLDOWN
  179         | PULLUP
  180         | NMOS
  181         | RNMOS
  182         | PMOS
  183         | RPMOS
  184         | CMOS
  185         | RCMOS
  186         | TRAN
  187         | RTRAN
  188         | TRANIF0
  189         | RTRANIF0
  190         | TRANIF1
  191         | RTRANIF1

  192 gate_instance_list: gate_instance
  193                   | gate_instance_list ',' gate_instance

  194 gate_instance: name_of_gate_instance_opt '(' terminal_list ')'

  195 name_of_gate_instance_opt: /* empty */
  196                          | name_of_gate_instance

  197 name_of_gate_instance: IDENTIFIER range_opt

  198 UDP_instantiation: IDENTIFIER drive_strength_opt delay_opt UDP_instance_list ';'

  199 UDP_instance_list: UDP_instance
  200                  | UDP_instance_list ',' UDP_instance

  201 UDP_instance: name_of_UDP_instance_opt '(' terminal_list ')'

  202 name_of_UDP_instance_opt: /* empty */
  203                         | name_of_UDP_instance

  204 name_of_UDP_instance: IDENTIFIER range_opt

  205 terminal_list: terminal
  206              | terminal_list ',' terminal

  207 terminal: expression
  208         | IDENTIFIER

  209 module_instantiation: IDENTIFIER parameter_value_assignment_opt module_instance_list ';'

  210 parameter_value_assignment_opt: /* empty */
  211                               | parameter_value_assignment

  212 parameter_value_assignment: '#' '(' expression_list ')'

  213 module_instance_list: module_instance
  214                     | module_instance_list ',' module_instance

  215 module_instance: IDENTIFIER range_opt '(' list_of_module_connections_opt ')'

  216 list_of_module_connections_opt: /* empty */
  217                               | list_of_module_connections

  218 list_of_module_connections: module_port_connection_list
  219                           | named_port_connection_list

  220 module_port_connection_list: module_port_connection
  221                            | module_port_connection_list ',' module_port_connection

  222 module_port_connection: /* empty */
  223                       | expression

  224 named_port_connection_list: named_port_connection
  225                           | named_port_connection_list ',' named_port_connection

  226 named_port_connection: '.' IDENTIFIER '(' expression ')'

  227 initial_statement: _INITIAL_ statement

  228 always_statement: ALWAYS statement

  229 statement_or_null: statement
  230                  | ';'

  231 statement_list: /* empty */
  232               | statement_list statement

  233 statement: blocking_assignment ';'
  234          | non_blocking_assignment ';'
  235          | IF '(' expression ')' statement_or_null
  236          | IF '(' expression ')' statement_or_null ELSE statement_or_null
  237          | CASE '(' expression ')' case_item_list ENDCASE
  238          | CASEZ '(' expression ')' case_item_list ENDCASE
  239          | CASEX '(' expression ')' case_item_list ENDCASE
  240          | FOREVER statement
  241          | REPEAT '(' expression ')' statement
  242          | WHILE '(' expression ')' statement
  243          | FOR '(' assignment ';' expression ';' assignment ')' statement
  244          | delay_or_event_control statement_or_null
  245          | WAIT '(' expression ')' statement_or_null
  246          | HYPH_GT name_of_event ';'
  247          | seq_block
  248          | par_block
  249          | task_enable
  250          | system_task_enable
  251          | DISABLE name_of_task ';'
  252          | DISABLE name_of_block ';'
  253          | ASSIGN assignment ';'
  254          | DEASSIGN lvalue ';'
  255          | FORCE assignment ';'
  256          | RELEASE lvalue ';'

  257 assignment: lvalue '=' expression

  258 blocking_assignment: lvalue '=' expression
  259                    | lvalue '=' delay_or_event_control expression ';'

  260 non_blocking_assignment: lvalue LTE expression
  261                        | lvalue '=' delay_or_event_control expression ';'

  262 delay_or_event_control: delay_control
  263                       | event_control
  264                       | REPEAT '(' expression ')' event_control

  265 case_item_list: case_item
  266               | case_item_list case_item

  267 case_item: expression_list ':' statement_or_null
  268          | DEFAULT ':' statement_or_null
  269          | DEFAULT statement_or_null

  270 seq_block: _BEGIN_ statement_list END
  271          | _BEGIN_ ':' name_of_block block_declaration_list statement_list END

  272 par_block: FORK statement_list JOIN
  273          | FORK ':' name_of_block block_declaration_list statement_list JOIN

  274 name_of_block: IDENTIFIER

  275 block_declaration_list: /* empty */
  276                       | block_declaration_list block_declaration

  277 block_declaration: parameter_declaration
  278                  | reg_declaration
  279                  | integer_declaration
  280                  | real_declaration
  281                  | time_declaration
  282                  | event_declaration

  283 task_enable: name_of_task
  284            | name_of_task '(' expression_list ')' ';'

  285 system_task_enable: name_of_system_task ';'
  286                   | name_of_system_task '(' expression_list ')' ';'

  287 name_of_system_task: '$' system_identifier

  288 system_identifier: IDENTIFIER

  289 specify_block: SPECIFY specify_item_list ENDSPECIFY

  290 specify_item_list: /* empty */
  291                  | specify_item_list specify_item

  292 specify_item: specparam_declaration
  293             | path_declaration
  294             | level_sensitive_path_declaration
  295             | edge_sensitive_path_declaration
  296             | system_timing_check
  297             | sdpd

  298 specparam_declaration: SPECPARAM list_of_param_assignments ';'

  299 list_of_param_assignments: param_assignment
  300                          | list_of_param_assignments ',' param_assignment

  301 param_assignment: identifier_hier '=' constant_expression

  302 path_declaration: path_description '=' path_delay_value ';'

  303 path_description: '(' specify_input_terminal_descriptor EQ_GT specify_output_terminal_descriptor ')'
  304                 | '(' list_of_path_inputs AST_GT list_of_path_outputs ')'

  305 list_of_path_inputs: specify_input_terminal_descriptor_list

  306 list_of_path_outputs: specify_output_terminal_descriptor_list

  307 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor
  308                                       | specify_input_terminal_descriptor_list ',' specify_input_terminal_descriptor

  309 specify_input_terminal_descriptor: input_identifier
  310                                  | input_identifier '[' constant_expression ']'
  311                                  | input_identifier '[' constant_expression ':' constant_expression ']'

  312 specify_output_terminal_descriptor_list: specify_output_terminal_descriptor
  313                                        | specify_output_terminal_descriptor_list ',' specify_output_terminal_descriptor

  314 specify_output_terminal_descriptor: output_identifier
  315                                   | output_identifier '[' constant_expression ']'
  316                                   | output_identifier '[' constant_expression ':' constant_expression ']'

  317 input_identifier: IDENTIFIER

  318 output_identifier: IDENTIFIER

  319 path_delay_value: path_delay_expression
  320                 | '(' path_delay_expression ',' path_delay_expression ')'
  321                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  322                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  323                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

  324 path_delay_expression: mintypmax_expression

  325 comma_const_exp_comma_notify_reg_opt: /* empty */
  326                                     | ',' constant_expression ',' notify_register

  327 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  328                    | '$' HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  329                    | '$' PERIOD '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  330                    | '$' WIDTH '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'
  331                    | '$' SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  332                    | '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  333                    | '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

  334 timing_check_event: timing_check_event_control_opt specify_terminal_descriptor amp_timing_check_condition_opt

  335 specify_terminal_descriptor: specify_input_terminal_descriptor
  336                            | specify_output_terminal_descriptor

  337 controlled_timing_check_event: timing_check_event_control specify_terminal_descriptor amp_timing_check_condition_opt

  338 timing_check_event_control_opt: /* empty */
  339                               | timing_check_event_control

  340 timing_check_event_control: POSEDGE
  341                           | NEGEDGE
  342                           | edge_control_specifier

  343 edge_control_specifier: EDGE '[' edge_descriptor_list ']'

  344 edge_descriptor_list: EDGE_DESCRIPTOR
  345                     | edge_descriptor_list ',' EDGE_DESCRIPTOR

  346 amp_timing_check_condition_opt: /* empty */
  347                               | AMP_AMP_AMP timing_check_condition

  348 timing_check_condition: scalar_timing_check_condition
  349                       | '(' scalar_timing_check_condition ')'

  350 scalar_timing_check_condition: scalar_expression
  351                              | '~' scalar_expression
  352                              | scalar_expression EQ_EQ SCALAR_CONSTANT
  353                              | scalar_expression EQ_EQ_EQ SCALAR_CONSTANT
  354                              | scalar_expression NOT_EQ SCALAR_CONSTANT
  355                              | scalar_expression NOT_EQ_EQ SCALAR_CONSTANT

  356 scalar_expression: identifier_hier
  357                  | identifier_hier '[' expression ']'

  358 timing_check_limit: expression

  359 comma_notify_register_opt: /* empty */
  360                          | ',' notify_register

  361 notify_register: identifier_hier

  362 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  363                                 | IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

  364 conditional_port_expression: port_reference
  365                            | UNARY_OPERATOR port_reference
  366                            | port_reference BINARY_OPERATOR port_reference

  367 polarity_operator_opt: /* empty */
  368                      | polarity_operator

  369 polarity_operator: '+'
  370                  | '-'

  371 if_expression_opt: /* empty */
  372                  | IF '(' expression ')'

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'
  374                                | if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

  375 data_source_expression: expression

  376 edge_identifier_opt: /* empty */
  377                    | edge_identifier

  378 edge_identifier: POSEDGE
  379                | NEGEDGE

  380 sdpd: IF '(' sdpd_conditional_expression ')' path_description '=' path_delay_value ';'

  381 sdpd_conditional_expression: expression BINARY_OPERATOR expression
  382                            | UNARY_OPERATOR expression

  383 lvalue: identifier_hier
  384       | identifier_hier '[' expression ']'
  385       | identifier_hier '[' constant_expression ':' constant_expression ']'
  386       | concatenation

  387 constant_expression: expression

  388 comma_mintypmax_expression_opt: /* empty */
  389                               | ',' mintypmax_expression

  390 mintypmax_expression: expression
  391                     | expression ':' expression ':' expression

  392 expression_list: expression
  393                | expression_list ',' expression

  394 expression: primary
  395           | UNARY_OPERATOR primary
  396           | expression BINARY_OPERATOR expression
  397           | expression '?' expression ':' expression
  398           | STRING

  399 UNARY_OPERATOR: '+'
  400               | '-'
  401               | '!'
  402               | '~'
  403               | '&'
  404               | TILDE_AMP
  405               | '|'
  406               | CARET_PIPE
  407               | '^'
  408               | TILDE_CARET

  409 BINARY_OPERATOR: '+'
  410                | '-'
  411                | '*'
  412                | '/'
  413                | '%'
  414                | EQ_EQ
  415                | NOT_EQ
  416                | EQ_EQ_EQ
  417                | NOT_EQ_EQ
  418                | LAND
  419                | LOR
  420                | '<'
  421                | LTE
  422                | '>'
  423                | GTE
  424                | '&'
  425                | '|'
  426                | '^'
  427                | CARET_TILDE
  428                | RSHIFT
  429                | LSHIFT

  430 primary: number
  431        | identifier_hier
  432        | identifier_hier '[' expression ']'
  433        | identifier_hier '[' constant_expression ':' constant_expression ']'
  434        | concatenation
  435        | multiple_concatenation
  436        | function_call
  437        | '(' mintypmax_expression ')'

  438 unsigned_number_opt: /* empty */
  439                    | UNSIGNED_NUMBER

  440 dot_unsigned_number_opt: /* empty */
  441                        | '.' UNSIGNED_NUMBER

  442 number: DECIMAL_NUMBER
  443       | unsigned_number_opt BASE UNSIGNED_NUMBER
  444       | DECIMAL_NUMBER '.' UNSIGNED_NUMBER
  445       | DECIMAL_NUMBER dot_unsigned_number_opt 'E' DECIMAL_NUMBER
  446       | DECIMAL_NUMBER dot_unsigned_number_opt 'e' DECIMAL_NUMBER

  447 concatenation: '{' expression_list '}'

  448 multiple_concatenation: '{' expression '{' expression_list '}' '}'

  449 function_call: IDENTIFIER '(' expression_list ')'
  450              | name_of_system_function '(' expression_list ')'
  451              | name_of_system_function

  452 name_of_system_function: '$' system_identifier

  453 identifier_hier: IDENTIFIER
  454                | identifier_hier '.' IDENTIFIER

  455 delay_opt: /* empty */
  456          | delay

  457 delay: '#' number
  458      | '#' identifier_hier
  459      | '#' '(' mintypmax_expression comma_mintypmax_expression_opt comma_mintypmax_expression_opt ')'

  460 delay_control: '#' number
  461              | '#' identifier_hier
  462              | '#' '(' mintypmax_expression ')'

  463 event_control: '@' identifier_hier
  464              | '@' '(' event_expression ')'

  465 event_expression: expression
  466                 | POSEDGE scalar_event_expression
  467                 | NEGEDGE scalar_event_expression
  468                 | event_expression OR event_expression

  469 scalar_event_expression: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'!' (33) 401
'#' (35) 212 457 458 459 460 461 462
'$' (36) 287 327 328 329 330 331 332 333 452
'%' (37) 413
'&' (38) 403 424
'(' (40) 12 16 47 70 143 144 145 148 149 194 201 212 215 226 235 236
    237 238 239 241 242 243 245 264 284 286 303 304 320 321 322 323
    327 328 329 330 331 332 333 349 362 363 372 373 374 380 437 449
    450 459 462 464
')' (41) 12 16 47 70 143 144 145 148 149 194 201 212 215 226 235 236
    237 238 239 241 242 243 245 264 284 286 303 304 320 321 322 323
    327 328 329 330 331 332 333 349 362 363 372 373 374 380 437 449
    450 459 462 464
'*' (42) 411
'+' (43) 369 399 409
',' (44) 14 22 131 133 139 148 149 164 193 200 206 214 221 225 300
    308 313 320 321 322 323 326 327 328 329 330 331 332 333 345 360
    389 393
'-' (45) 74 370 400 410
'.' (46) 16 226 441 444 454
'/' (47) 412
':' (58) 25 62 65 135 162 267 268 271 273 311 316 373 374 385 391 397
    433
';' (59) 8 9 47 55 62 65 79 81 99 100 101 102 103 104 105 122 123 124
    125 126 127 128 129 165 198 209 230 233 234 243 246 251 252 253
    254 255 256 259 261 284 285 286 298 302 327 328 329 330 331 332
    333 362 363 373 374 380
'<' (60) 420
'=' (61) 55 257 258 259 261 301 302 362 363 373 374 380
'>' (62) 422
'?' (63) 397
'@' (64) 463 464
'E' (69) 445
'[' (91) 24 25 135 162 310 311 315 316 343 357 384 385 432 433
']' (93) 24 25 135 162 310 311 315 316 343 357 384 385 432 433
'^' (94) 407 426
'e' (101) 446
'{' (123) 20 447 448
'|' (124) 405 425
'}' (125) 20 447 448
'~' (126) 351 402
error (256)
TILDE_AMP (258) 404
CARET_PIPE (259) 406
TILDE_CARET (260) 408
EQ_EQ (261) 352 414
NOT_EQ (262) 354 415
EQ_EQ_EQ (263) 353 416
NOT_EQ_EQ (264) 355 417
LAND (265) 418
AMP_AMP_AMP (266) 347
LOR (267) 419
LTE (268) 260 421
GTE (269) 423
CARET_TILDE (270) 427
LSHIFT (271) 429
RSHIFT (272) 428
EQ_GT (273) 303 362 373
AST_GT (274) 304 363 374
HYPH_GT (275) 246
SETUP (276) 327
HOLD (277) 328
PERIOD (278) 329
WIDTH (279) 330
SKEW (280) 331
RECOVERY (281) 332
SETUPHOLD (282) 333
_BEGIN_ (283) 270 271
END (284) 270 271
MACROMODULE (285) 9
MODULE (286) 8
ENDMODULE (287) 8 9
PRIMITIVE (288) 47
ENDPRIMITIVE (289) 47
TABLE (290) 57
ENDTABLE (291) 57
TASK (292) 79
ENDTASK (293) 79
FUNCTION (294) 81
ENDFUNCTION (295) 81
SPECIFY (296) 289
ENDSPECIFY (297) 289
INTEGER (298) 85 124
REAL (299) 86 125
TIME (300) 123
SPECPARAM (301) 298
PARAMETER (302) 99
DEFPARAM (303) 129
INPUT (304) 100
OUTPUT (305) 101
INOUT (306) 102
WIRE (307) 106
TRI (308) 107
TRI0 (309) 112
TRI1 (310) 108
SUPPLY0 (311) 109 150
SUPPLY1 (312) 113 155
WAND (313) 110
TRIAND (314) 111
TRIOR (315) 115
WOR (316) 114
TRIREG (317) 104 116
SCALARED (318) 120
VECTORED (319) 121
REG (320) 122
EVENT (321) 126
SMALL (322) 143
MEDIUM (323) 144
LARGE (324) 145
STRONG0 (325) 151
STRONG1 (326) 156
PULL0 (327) 152
PULL1 (328) 157
WEAK0 (329) 153
WEAK1 (330) 158
HIGHZ0 (331) 154
HIGHZ1 (332) 159
AND (333) 166
NAND (334) 167
OR (335) 168 468
NOR (336) 169
XOR (337) 170
XNOR (338) 171
BUF (339) 172
BUFIF0 (340) 173
BUFIF1 (341) 174
NOT (342) 175
NOTIF0 (343) 176
NOTIF1 (344) 177
PULLDOWN (345) 178
PULLUP (346) 179
NMOS (347) 180
RNMOS (348) 181
PMOS (349) 182
RPMOS (350) 183
CMOS (351) 184
RCMOS (352) 185
TRAN (353) 186
RTRAN (354) 187
TRANIF0 (355) 188
TRANIF1 (356) 190
RTRANIF0 (357) 189
RTRANIF1 (358) 191
ASSIGN (359) 127 253
DEASSIGN (360) 254
_INITIAL_ (361) 55 227
ALWAYS (362) 228
IF (363) 235 236 362 363 372 380
ELSE (364) 236
CASE (365) 237
CASEZ (366) 238
CASEX (367) 239
ENDCASE (368) 237 238 239
DEFAULT (369) 268 269
FOREVER (370) 240
REPEAT (371) 241 264
WHILE (372) 242
FOR (373) 243
WAIT (374) 245
DISABLE (375) 251 252
FORCE (376) 255
RELEASE (377) 256
FORK (378) 272 273
JOIN (379) 272 273
POSEDGE (380) 340 378 466
NEGEDGE (381) 341 379 467
EDGE (382) 343
OUTPUT_SYMBOL (383) 62 73
INIT_VAL (384) 55
STRING (385) 398
IDENTIFIER (386) 8 9 23 24 25 26 47 56 80 81 130 131 136 137 140 197
    198 204 208 209 215 226 274 288 317 318 449 453 454 469
DECIMAL_NUMBER (387) 442 444 445 446
UNSIGNED_NUMBER (388) 439 441 443 444
BASE (389) 443
SCALAR_CONSTANT (390) 352 353 354 355
LEVEL_SYMBOL (391) 70 72 76 77 78
EDGE_SYMBOL (392) 71
EDGE_DESCRIPTOR (393) 344 345


Nonterminals, with rules where they appear

$accept (168)
    on left: 0
source_text (169)
    on left: 1, on right: 0
description_list (170)
    on left: 2 3, on right: 1 3
description (171)
    on left: 4 5, on right: 3
module_item_list (172)
    on left: 6 7, on right: 7 8 9
module (173)
    on left: 8 9, on right: 4
list_of_ports_encl_opt (174)
    on left: 10 11, on right: 8 9
list_of_ports_encl (175)
    on left: 12, on right: 11
list_of_ports (176)
    on left: 13 14, on right: 12 14
port (177)
    on left: 15 16, on right: 13 14
port_expression_opt (178)
    on left: 17 18, on right: 15 16
port_expression (179)
    on left: 19 20, on right: 18
port_reference_list (180)
    on left: 21 22, on right: 20 22
port_reference (181)
    on left: 23 24 25, on right: 19 21 22 364 365 366
name_of_port (182)
    on left: 26, on right: 16
module_item (183)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46, on right: 7
UDP (184)
    on left: 47, on right: 5
UDP_declaration_list (185)
    on left: 48 49, on right: 47 49
UDP_declaration (186)
    on left: 50 51 52, on right: 48 49
UDP_initial_statement_opt (187)
    on left: 53 54, on right: 47
UDP_initial_statement (188)
    on left: 55, on right: 54
output_terminal_name (189)
    on left: 56, on right: 55
table_definition (190)
    on left: 57, on right: 47
table_entries (191)
    on left: 58 59, on right: 57
combinational_entry_list (192)
    on left: 60 61, on right: 58 61
combinational_entry (193)
    on left: 62, on right: 60 61
sequential_entry_list (194)
    on left: 63 64, on right: 59 64
sequential_entry (195)
    on left: 65, on right: 63 64
input_list (196)
    on left: 66 67, on right: 65
level_input_list (197)
    on left: 68, on right: 62 66
edge_input_list (198)
    on left: 69, on right: 67
edge (199)
    on left: 70 71, on right: 69
state (200)
    on left: 72, on right: 65
next_state (201)
    on left: 73 74, on right: 65
level_symbol_star (202)
    on left: 75 76, on right: 69 76
level_symbol_plus (203)
    on left: 77 78, on right: 68 78
task (204)
    on left: 79, on right: 45
name_of_task (205)
    on left: 80, on right: 79 251 283 284
function (206)
    on left: 81, on right: 46
range_or_type_opt (207)
    on left: 82 83, on right: 81
range_or_type (208)
    on left: 84 85 86, on right: 83
tf_declaration_star (209)
    on left: 87 88, on right: 79 88
tf_declaration_plus (210)
    on left: 89 90, on right: 81 90
tf_declaration (211)
    on left: 91 92 93 94 95 96 97 98, on right: 88 89 90
parameter_declaration (212)
    on left: 99, on right: 27 91 277
input_declaration (213)
    on left: 100, on right: 28 52 92
output_declaration (214)
    on left: 101, on right: 29 50 93
inout_declaration (215)
    on left: 102, on right: 30 94
net_declaration (216)
    on left: 103 104 105, on right: 31
NETTYPE (217)
    on left: 106 107 108 109 110 111 112 113 114 115 116, on right:
    103 105 128
expandrange_opt (218)
    on left: 117 118, on right: 103 104 105 128
expandrange (219)
    on left: 119 120 121, on right: 118
reg_declaration (220)
    on left: 122, on right: 32 51 95 278
time_declaration (221)
    on left: 123, on right: 33 96 281
integer_declaration (222)
    on left: 124, on right: 34 97 279
real_declaration (223)
    on left: 125, on right: 35 98 280
event_declaration (224)
    on left: 126, on right: 36 282
continuous_assign (225)
    on left: 127 128, on right: 41
parameter_override (226)
    on left: 129, on right: 40
list_of_variables (227)
    on left: 130 131, on right: 47 100 101 102 103 104 125 131
list_of_register_variables (228)
    on left: 132 133, on right: 122 123 124 133
register_variable (229)
    on left: 134 135, on right: 132 133
name_of_register (230)
    on left: 136, on right: 134
name_of_memory (231)
    on left: 137, on right: 135
list_of_name_of_events (232)
    on left: 138 139, on right: 126 139
name_of_event (233)
    on left: 140, on right: 138 139 246
charge_strength_opt (234)
    on left: 141 142, on right: 104
charge_strength (235)
    on left: 143 144 145, on right: 142
drive_strength_opt (236)
    on left: 146 147, on right: 105 127 128 165 198
drive_strength (237)
    on left: 148 149, on right: 147
STRENGTH0 (238)
    on left: 150 151 152 153 154, on right: 148 149
STRENGTH1 (239)
    on left: 155 156 157 158 159, on right: 148 149
range_opt (240)
    on left: 160 161, on right: 100 101 102 122 197 204 215
range (241)
    on left: 162, on right: 84 119 120 121 161
list_of_assignments (242)
    on left: 163 164, on right: 105 127 128 164
gate_declaration (243)
    on left: 165, on right: 37
GATETYPE (244)
    on left: 166 167 168 169 170 171 172 173 174 175 176 177 178 179
    180 181 182 183 184 185 186 187 188 189 190 191, on right: 165
gate_instance_list (245)
    on left: 192 193, on right: 165 193
gate_instance (246)
    on left: 194, on right: 192 193
name_of_gate_instance_opt (247)
    on left: 195 196, on right: 194
name_of_gate_instance (248)
    on left: 197, on right: 196
UDP_instantiation (249)
    on left: 198, on right: 38
UDP_instance_list (250)
    on left: 199 200, on right: 198 200
UDP_instance (251)
    on left: 201, on right: 199 200
name_of_UDP_instance_opt (252)
    on left: 202 203, on right: 201
name_of_UDP_instance (253)
    on left: 204, on right: 203
terminal_list (254)
    on left: 205 206, on right: 194 201 206
terminal (255)
    on left: 207 208, on right: 205 206
module_instantiation (256)
    on left: 209, on right: 39
parameter_value_assignment_opt (257)
    on left: 210 211, on right: 209
parameter_value_assignment (258)
    on left: 212, on right: 211
module_instance_list (259)
    on left: 213 214, on right: 209 214
module_instance (260)
    on left: 215, on right: 213 214
list_of_module_connections_opt (261)
    on left: 216 217, on right: 215
list_of_module_connections (262)
    on left: 218 219, on right: 217
module_port_connection_list (263)
    on left: 220 221, on right: 218 221
module_port_connection (264)
    on left: 222 223, on right: 220 221
named_port_connection_list (265)
    on left: 224 225, on right: 219 225
named_port_connection (266)
    on left: 226, on right: 224 225
initial_statement (267)
    on left: 227, on right: 43
always_statement (268)
    on left: 228, on right: 44
statement_or_null (269)
    on left: 229 230, on right: 79 235 236 244 245 267 268 269
statement_list (270)
    on left: 231 232, on right: 232 270 271 272 273
statement (271)
    on left: 233 234 235 236 237 238 239 240 241 242 243 244 245 246
    247 248 249 250 251 252 253 254 255 256, on right: 81 227 228 229
    232 240 241 242 243
assignment (272)
    on left: 257, on right: 163 164 243 253 255
blocking_assignment (273)
    on left: 258 259, on right: 233
non_blocking_assignment (274)
    on left: 260 261, on right: 234
delay_or_event_control (275)
    on left: 262 263 264, on right: 244 259 261
case_item_list (276)
    on left: 265 266, on right: 237 238 239 266
case_item (277)
    on left: 267 268 269, on right: 265 266
seq_block (278)
    on left: 270 271, on right: 247
par_block (279)
    on left: 272 273, on right: 248
name_of_block (280)
    on left: 274, on right: 252 271 273
block_declaration_list (281)
    on left: 275 276, on right: 271 273 276
block_declaration (282)
    on left: 277 278 279 280 281 282, on right: 276
task_enable (283)
    on left: 283 284, on right: 249
system_task_enable (284)
    on left: 285 286, on right: 250
name_of_system_task (285)
    on left: 287, on right: 285 286
system_identifier (286)
    on left: 288, on right: 287 452
specify_block (287)
    on left: 289, on right: 42
specify_item_list (288)
    on left: 290 291, on right: 289 291
specify_item (289)
    on left: 292 293 294 295 296 297, on right: 291
specparam_declaration (290)
    on left: 298, on right: 292
list_of_param_assignments (291)
    on left: 299 300, on right: 99 129 298 300
param_assignment (292)
    on left: 301, on right: 299 300
path_declaration (293)
    on left: 302, on right: 293
path_description (294)
    on left: 303 304, on right: 302 380
list_of_path_inputs (295)
    on left: 305, on right: 304 363
list_of_path_outputs (296)
    on left: 306, on right: 304 363 374
specify_input_terminal_descriptor_list (297)
    on left: 307 308, on right: 305 308
specify_input_terminal_descriptor (298)
    on left: 309 310 311, on right: 303 307 308 335 362 373 374
specify_output_terminal_descriptor_list (299)
    on left: 312 313, on right: 306 313
specify_output_terminal_descriptor (300)
    on left: 314 315 316, on right: 303 312 313 336 362 373
input_identifier (301)
    on left: 317, on right: 309 310 311
output_identifier (302)
    on left: 318, on right: 314 315 316
path_delay_value (303)
    on left: 319 320 321 322 323, on right: 302 362 363 373 374 380
path_delay_expression (304)
    on left: 324, on right: 319 320 321 322 323
comma_const_exp_comma_notify_reg_opt (305)
    on left: 325 326, on right: 330
system_timing_check (306)
    on left: 327 328 329 330 331 332 333, on right: 296
timing_check_event (307)
    on left: 334, on right: 327 328 331 332 333
specify_terminal_descriptor (308)
    on left: 335 336, on right: 334 337
controlled_timing_check_event (309)
    on left: 337, on right: 329 330 332
timing_check_event_control_opt (310)
    on left: 338 339, on right: 334
timing_check_event_control (311)
    on left: 340 341 342, on right: 337 339
edge_control_specifier (312)
    on left: 343, on right: 342
edge_descriptor_list (313)
    on left: 344 345, on right: 343 345
amp_timing_check_condition_opt (314)
    on left: 346 347, on right: 334 337
timing_check_condition (315)
    on left: 348 349, on right: 347
scalar_timing_check_condition (316)
    on left: 350 351 352 353 354 355, on right: 348 349
scalar_expression (317)
    on left: 356 357, on right: 350 351 352 353 354 355
timing_check_limit (318)
    on left: 358, on right: 327 328 329 330 331 332 333
comma_notify_register_opt (319)
    on left: 359 360, on right: 327 328 329 331 332 333
notify_register (320)
    on left: 361, on right: 326 360
level_sensitive_path_declaration (321)
    on left: 362 363, on right: 294
conditional_port_expression (322)
    on left: 364 365 366, on right: 362 363
polarity_operator_opt (323)
    on left: 367 368, on right: 362 363 373 374
polarity_operator (324)
    on left: 369 370, on right: 368
if_expression_opt (325)
    on left: 371 372, on right: 373 374
edge_sensitive_path_declaration (326)
    on left: 373 374, on right: 295
data_source_expression (327)
    on left: 375, on right: 373 374
edge_identifier_opt (328)
    on left: 376 377, on right: 373 374
edge_identifier (329)
    on left: 378 379, on right: 377
sdpd (330)
    on left: 380, on right: 297
sdpd_conditional_expression (331)
    on left: 381 382, on right: 380
lvalue (332)
    on left: 383 384 385 386, on right: 254 256 257 258 259 260 261
constant_expression (333)
    on left: 387, on right: 24 25 135 162 301 310 311 315 316 326 385
    433
comma_mintypmax_expression_opt (334)
    on left: 388 389, on right: 459
mintypmax_expression (335)
    on left: 390 391, on right: 324 389 437 459 462
expression_list (336)
    on left: 392 393, on right: 212 267 284 286 393 447 448 449 450
expression (337)
    on left: 394 395 396 397 398, on right: 207 223 226 235 236 237
    238 239 241 242 243 245 257 258 259 260 261 264 357 358 372 375
    381 382 384 387 390 391 392 393 396 397 432 448 465
UNARY_OPERATOR (338)
    on left: 399 400 401 402 403 404 405 406 407 408, on right: 365
    382 395
BINARY_OPERATOR (339)
    on left: 409 410 411 412 413 414 415 416 417 418 419 420 421 422
    423 424 425 426 427 428 429, on right: 366 381 396
primary (340)
    on left: 430 431 432 433 434 435 436 437, on right: 394 395
unsigned_number_opt (341)
    on left: 438 439, on right: 443
dot_unsigned_number_opt (342)
    on left: 440 441, on right: 445 446
number (343)
    on left: 442 443 444 445 446, on right: 430 457 460
concatenation (344)
    on left: 447, on right: 386 434
multiple_concatenation (345)
    on left: 448, on right: 435
function_call (346)
    on left: 449 450 451, on right: 436
name_of_system_function (347)
    on left: 452, on right: 450 451
identifier_hier (348)
    on left: 453 454, on right: 301 356 357 361 383 384 385 431 432
    433 454 458 461 463
delay_opt (349)
    on left: 455 456, on right: 103 104 105 127 128 165 198
delay (350)
    on left: 457 458 459, on right: 456
delay_control (351)
    on left: 460 461 462, on right: 262
event_control (352)
    on left: 463 464, on right: 263 264
event_expression (353)
    on left: 465 466 467 468, on right: 464 468
scalar_event_expression (354)
    on left: 469, on right: 466 467


State 0

    0 $accept: . source_text $end

    $default  reduce using rule 2 (description_list)

    source_text       go to state 1
    description_list  go to state 2


State 1

    0 $accept: source_text . $end

    $end  shift, and go to state 3


State 2

    1 source_text: description_list .
    3 description_list: description_list . description

    MACROMODULE  shift, and go to state 4
    MODULE       shift, and go to state 5
    PRIMITIVE    shift, and go to state 6

    $default  reduce using rule 1 (source_text)

    description  go to state 7
    module       go to state 8
    UDP          go to state 9


State 3

    0 $accept: source_text $end .

    $default  accept


State 4

    9 module: MACROMODULE . IDENTIFIER list_of_ports_encl_opt ';' module_item_list ENDMODULE

    IDENTIFIER  shift, and go to state 10


State 5

    8 module: MODULE . IDENTIFIER list_of_ports_encl_opt ';' module_item_list ENDMODULE

    IDENTIFIER  shift, and go to state 11


State 6

   47 UDP: PRIMITIVE . IDENTIFIER '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

    IDENTIFIER  shift, and go to state 12


State 7

    3 description_list: description_list description .

    $default  reduce using rule 3 (description_list)


State 8

    4 description: module .

    $default  reduce using rule 4 (description)


State 9

    5 description: UDP .

    $default  reduce using rule 5 (description)


State 10

    9 module: MACROMODULE IDENTIFIER . list_of_ports_encl_opt ';' module_item_list ENDMODULE

    '('  shift, and go to state 13

    $default  reduce using rule 10 (list_of_ports_encl_opt)

    list_of_ports_encl_opt  go to state 14
    list_of_ports_encl      go to state 15


State 11

    8 module: MODULE IDENTIFIER . list_of_ports_encl_opt ';' module_item_list ENDMODULE

    '('  shift, and go to state 13

    $default  reduce using rule 10 (list_of_ports_encl_opt)

    list_of_ports_encl_opt  go to state 16
    list_of_ports_encl      go to state 15


State 12

   47 UDP: PRIMITIVE IDENTIFIER . '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

    '('  shift, and go to state 17


State 13

   12 list_of_ports_encl: '(' . list_of_ports ')'

    '{'         shift, and go to state 18
    '.'         shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    $default  reduce using rule 17 (port_expression_opt)

    list_of_ports        go to state 21
    port                 go to state 22
    port_expression_opt  go to state 23
    port_expression      go to state 24
    port_reference       go to state 25


State 14

    9 module: MACROMODULE IDENTIFIER list_of_ports_encl_opt . ';' module_item_list ENDMODULE

    ';'  shift, and go to state 26


State 15

   11 list_of_ports_encl_opt: list_of_ports_encl .

    $default  reduce using rule 11 (list_of_ports_encl_opt)


State 16

    8 module: MODULE IDENTIFIER list_of_ports_encl_opt . ';' module_item_list ENDMODULE

    ';'  shift, and go to state 27


State 17

   47 UDP: PRIMITIVE IDENTIFIER '(' . list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

    IDENTIFIER  shift, and go to state 28

    list_of_variables  go to state 29


State 18

   20 port_expression: '{' . port_reference_list '}'

    IDENTIFIER  shift, and go to state 20

    port_reference_list  go to state 30
    port_reference       go to state 31


State 19

   16 port: '.' . name_of_port '(' port_expression_opt ')'

    IDENTIFIER  shift, and go to state 32

    name_of_port  go to state 33


State 20

   23 port_reference: IDENTIFIER .
   24               | IDENTIFIER . '[' constant_expression ']'
   25               | IDENTIFIER . '[' constant_expression ':' constant_expression ']'

    '['  shift, and go to state 34

    $default  reduce using rule 23 (port_reference)


State 21

   12 list_of_ports_encl: '(' list_of_ports . ')'
   14 list_of_ports: list_of_ports . ',' port

    ')'  shift, and go to state 35
    ','  shift, and go to state 36


State 22

   13 list_of_ports: port .

    $default  reduce using rule 13 (list_of_ports)


State 23

   15 port: port_expression_opt .

    $default  reduce using rule 15 (port)


State 24

   18 port_expression_opt: port_expression .

    $default  reduce using rule 18 (port_expression_opt)


State 25

   19 port_expression: port_reference .

    $default  reduce using rule 19 (port_expression)


State 26

    9 module: MACROMODULE IDENTIFIER list_of_ports_encl_opt ';' . module_item_list ENDMODULE

    $default  reduce using rule 6 (module_item_list)

    module_item_list  go to state 37


State 27

    8 module: MODULE IDENTIFIER list_of_ports_encl_opt ';' . module_item_list ENDMODULE

    $default  reduce using rule 6 (module_item_list)

    module_item_list  go to state 38


State 28

  130 list_of_variables: IDENTIFIER .

    $default  reduce using rule 130 (list_of_variables)


State 29

   47 UDP: PRIMITIVE IDENTIFIER '(' list_of_variables . ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE
  131 list_of_variables: list_of_variables . ',' IDENTIFIER

    ')'  shift, and go to state 39
    ','  shift, and go to state 40


State 30

   20 port_expression: '{' port_reference_list . '}'
   22 port_reference_list: port_reference_list . ',' port_reference

    '}'  shift, and go to state 41
    ','  shift, and go to state 42


State 31

   21 port_reference_list: port_reference .

    $default  reduce using rule 21 (port_reference_list)


State 32

   26 name_of_port: IDENTIFIER .

    $default  reduce using rule 26 (name_of_port)


State 33

   16 port: '.' name_of_port . '(' port_expression_opt ')'

    '('  shift, and go to state 43


State 34

   24 port_reference: IDENTIFIER '[' . constant_expression ']'
   25               | IDENTIFIER '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 61
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 35

   12 list_of_ports_encl: '(' list_of_ports ')' .

    $default  reduce using rule 12 (list_of_ports_encl)


State 36

   14 list_of_ports: list_of_ports ',' . port

    '{'         shift, and go to state 18
    '.'         shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    $default  reduce using rule 17 (port_expression_opt)

    port                 go to state 72
    port_expression_opt  go to state 23
    port_expression      go to state 24
    port_reference       go to state 25


State 37

    7 module_item_list: module_item_list . module_item
    9 module: MACROMODULE IDENTIFIER list_of_ports_encl_opt ';' module_item_list . ENDMODULE

    ENDMODULE   shift, and go to state 73
    TASK        shift, and go to state 74
    FUNCTION    shift, and go to state 75
    SPECIFY     shift, and go to state 76
    INTEGER     shift, and go to state 77
    REAL        shift, and go to state 78
    TIME        shift, and go to state 79
    PARAMETER   shift, and go to state 80
    DEFPARAM    shift, and go to state 81
    INPUT       shift, and go to state 82
    OUTPUT      shift, and go to state 83
    INOUT       shift, and go to state 84
    WIRE        shift, and go to state 85
    TRI         shift, and go to state 86
    TRI0        shift, and go to state 87
    TRI1        shift, and go to state 88
    SUPPLY0     shift, and go to state 89
    SUPPLY1     shift, and go to state 90
    WAND        shift, and go to state 91
    TRIAND      shift, and go to state 92
    TRIOR       shift, and go to state 93
    WOR         shift, and go to state 94
    TRIREG      shift, and go to state 95
    REG         shift, and go to state 96
    EVENT       shift, and go to state 97
    AND         shift, and go to state 98
    NAND        shift, and go to state 99
    OR          shift, and go to state 100
    NOR         shift, and go to state 101
    XOR         shift, and go to state 102
    XNOR        shift, and go to state 103
    BUF         shift, and go to state 104
    BUFIF0      shift, and go to state 105
    BUFIF1      shift, and go to state 106
    NOT         shift, and go to state 107
    NOTIF0      shift, and go to state 108
    NOTIF1      shift, and go to state 109
    PULLDOWN    shift, and go to state 110
    PULLUP      shift, and go to state 111
    NMOS        shift, and go to state 112
    RNMOS       shift, and go to state 113
    PMOS        shift, and go to state 114
    RPMOS       shift, and go to state 115
    CMOS        shift, and go to state 116
    RCMOS       shift, and go to state 117
    TRAN        shift, and go to state 118
    RTRAN       shift, and go to state 119
    TRANIF0     shift, and go to state 120
    TRANIF1     shift, and go to state 121
    RTRANIF0    shift, and go to state 122
    RTRANIF1    shift, and go to state 123
    ASSIGN      shift, and go to state 124
    _INITIAL_   shift, and go to state 125
    ALWAYS      shift, and go to state 126
    IDENTIFIER  shift, and go to state 127

    module_item            go to state 128
    task                   go to state 129
    function               go to state 130
    parameter_declaration  go to state 131
    input_declaration      go to state 132
    output_declaration     go to state 133
    inout_declaration      go to state 134
    net_declaration        go to state 135
    NETTYPE                go to state 136
    reg_declaration        go to state 137
    time_declaration       go to state 138
    integer_declaration    go to state 139
    real_declaration       go to state 140
    event_declaration      go to state 141
    continuous_assign      go to state 142
    parameter_override     go to state 143
    gate_declaration       go to state 144
    GATETYPE               go to state 145
    UDP_instantiation      go to state 146
    module_instantiation   go to state 147
    initial_statement      go to state 148
    always_statement       go to state 149
    specify_block          go to state 150


State 38

    7 module_item_list: module_item_list . module_item
    8 module: MODULE IDENTIFIER list_of_ports_encl_opt ';' module_item_list . ENDMODULE

    ENDMODULE   shift, and go to state 151
    TASK        shift, and go to state 74
    FUNCTION    shift, and go to state 75
    SPECIFY     shift, and go to state 76
    INTEGER     shift, and go to state 77
    REAL        shift, and go to state 78
    TIME        shift, and go to state 79
    PARAMETER   shift, and go to state 80
    DEFPARAM    shift, and go to state 81
    INPUT       shift, and go to state 82
    OUTPUT      shift, and go to state 83
    INOUT       shift, and go to state 84
    WIRE        shift, and go to state 85
    TRI         shift, and go to state 86
    TRI0        shift, and go to state 87
    TRI1        shift, and go to state 88
    SUPPLY0     shift, and go to state 89
    SUPPLY1     shift, and go to state 90
    WAND        shift, and go to state 91
    TRIAND      shift, and go to state 92
    TRIOR       shift, and go to state 93
    WOR         shift, and go to state 94
    TRIREG      shift, and go to state 95
    REG         shift, and go to state 96
    EVENT       shift, and go to state 97
    AND         shift, and go to state 98
    NAND        shift, and go to state 99
    OR          shift, and go to state 100
    NOR         shift, and go to state 101
    XOR         shift, and go to state 102
    XNOR        shift, and go to state 103
    BUF         shift, and go to state 104
    BUFIF0      shift, and go to state 105
    BUFIF1      shift, and go to state 106
    NOT         shift, and go to state 107
    NOTIF0      shift, and go to state 108
    NOTIF1      shift, and go to state 109
    PULLDOWN    shift, and go to state 110
    PULLUP      shift, and go to state 111
    NMOS        shift, and go to state 112
    RNMOS       shift, and go to state 113
    PMOS        shift, and go to state 114
    RPMOS       shift, and go to state 115
    CMOS        shift, and go to state 116
    RCMOS       shift, and go to state 117
    TRAN        shift, and go to state 118
    RTRAN       shift, and go to state 119
    TRANIF0     shift, and go to state 120
    TRANIF1     shift, and go to state 121
    RTRANIF0    shift, and go to state 122
    RTRANIF1    shift, and go to state 123
    ASSIGN      shift, and go to state 124
    _INITIAL_   shift, and go to state 125
    ALWAYS      shift, and go to state 126
    IDENTIFIER  shift, and go to state 127

    module_item            go to state 128
    task                   go to state 129
    function               go to state 130
    parameter_declaration  go to state 131
    input_declaration      go to state 132
    output_declaration     go to state 133
    inout_declaration      go to state 134
    net_declaration        go to state 135
    NETTYPE                go to state 136
    reg_declaration        go to state 137
    time_declaration       go to state 138
    integer_declaration    go to state 139
    real_declaration       go to state 140
    event_declaration      go to state 141
    continuous_assign      go to state 142
    parameter_override     go to state 143
    gate_declaration       go to state 144
    GATETYPE               go to state 145
    UDP_instantiation      go to state 146
    module_instantiation   go to state 147
    initial_statement      go to state 148
    always_statement       go to state 149
    specify_block          go to state 150


State 39

   47 UDP: PRIMITIVE IDENTIFIER '(' list_of_variables ')' . ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

    ';'  shift, and go to state 152


State 40

  131 list_of_variables: list_of_variables ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 153


State 41

   20 port_expression: '{' port_reference_list '}' .

    $default  reduce using rule 20 (port_expression)


State 42

   22 port_reference_list: port_reference_list ',' . port_reference

    IDENTIFIER  shift, and go to state 20

    port_reference  go to state 154


State 43

   16 port: '.' name_of_port '(' . port_expression_opt ')'

    '{'         shift, and go to state 18
    IDENTIFIER  shift, and go to state 20

    $default  reduce using rule 17 (port_expression_opt)

    port_expression_opt  go to state 155
    port_expression      go to state 24
    port_reference       go to state 25


State 44

  437 primary: '(' . mintypmax_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    mintypmax_expression     go to state 156
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 45

  447 concatenation: '{' . expression_list '}'
  448 multiple_concatenation: '{' . expression '{' expression_list '}' '}'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression_list          go to state 158
    expression               go to state 159
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 46

  452 name_of_system_function: '$' . system_identifier

    IDENTIFIER  shift, and go to state 160

    system_identifier  go to state 161


State 47

  399 UNARY_OPERATOR: '+' .

    $default  reduce using rule 399 (UNARY_OPERATOR)


State 48

  400 UNARY_OPERATOR: '-' .

    $default  reduce using rule 400 (UNARY_OPERATOR)


State 49

  401 UNARY_OPERATOR: '!' .

    $default  reduce using rule 401 (UNARY_OPERATOR)


State 50

  402 UNARY_OPERATOR: '~' .

    $default  reduce using rule 402 (UNARY_OPERATOR)


State 51

  403 UNARY_OPERATOR: '&' .

    $default  reduce using rule 403 (UNARY_OPERATOR)


State 52

  405 UNARY_OPERATOR: '|' .

    $default  reduce using rule 405 (UNARY_OPERATOR)


State 53

  407 UNARY_OPERATOR: '^' .

    $default  reduce using rule 407 (UNARY_OPERATOR)


State 54

  404 UNARY_OPERATOR: TILDE_AMP .

    $default  reduce using rule 404 (UNARY_OPERATOR)


State 55

  406 UNARY_OPERATOR: CARET_PIPE .

    $default  reduce using rule 406 (UNARY_OPERATOR)


State 56

  408 UNARY_OPERATOR: TILDE_CARET .

    $default  reduce using rule 408 (UNARY_OPERATOR)


State 57

  398 expression: STRING .

    $default  reduce using rule 398 (expression)


State 58

  449 function_call: IDENTIFIER . '(' expression_list ')'
  453 identifier_hier: IDENTIFIER .

    '('  shift, and go to state 162

    $default  reduce using rule 453 (identifier_hier)


State 59

  442 number: DECIMAL_NUMBER .
  444       | DECIMAL_NUMBER . '.' UNSIGNED_NUMBER
  445       | DECIMAL_NUMBER . dot_unsigned_number_opt 'E' DECIMAL_NUMBER
  446       | DECIMAL_NUMBER . dot_unsigned_number_opt 'e' DECIMAL_NUMBER

    '.'  shift, and go to state 163

    'e'       reduce using rule 440 (dot_unsigned_number_opt)
    'E'       reduce using rule 440 (dot_unsigned_number_opt)
    $default  reduce using rule 442 (number)

    dot_unsigned_number_opt  go to state 164


State 60

  439 unsigned_number_opt: UNSIGNED_NUMBER .

    $default  reduce using rule 439 (unsigned_number_opt)


State 61

   24 port_reference: IDENTIFIER '[' constant_expression . ']'
   25               | IDENTIFIER '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 165
    ']'  shift, and go to state 166


State 62

  387 constant_expression: expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 387 (constant_expression)

    BINARY_OPERATOR  go to state 189


State 63

  395 expression: UNARY_OPERATOR . primary

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    primary                  go to state 190
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 64

  394 expression: primary .

    $default  reduce using rule 394 (expression)


State 65

  443 number: unsigned_number_opt . BASE UNSIGNED_NUMBER

    BASE  shift, and go to state 191


State 66

  430 primary: number .

    $default  reduce using rule 430 (primary)


State 67

  434 primary: concatenation .

    $default  reduce using rule 434 (primary)


State 68

  435 primary: multiple_concatenation .

    $default  reduce using rule 435 (primary)


State 69

  436 primary: function_call .

    $default  reduce using rule 436 (primary)


State 70

  450 function_call: name_of_system_function . '(' expression_list ')'
  451              | name_of_system_function .

    '('  shift, and go to state 192

    $default  reduce using rule 451 (function_call)


State 71

  431 primary: identifier_hier .
  432        | identifier_hier . '[' expression ']'
  433        | identifier_hier . '[' constant_expression ':' constant_expression ']'
  454 identifier_hier: identifier_hier . '.' IDENTIFIER

    '['  shift, and go to state 193
    '.'  shift, and go to state 194

    $default  reduce using rule 431 (primary)


State 72

   14 list_of_ports: list_of_ports ',' port .

    $default  reduce using rule 14 (list_of_ports)


State 73

    9 module: MACROMODULE IDENTIFIER list_of_ports_encl_opt ';' module_item_list ENDMODULE .

    $default  reduce using rule 9 (module)


State 74

   79 task: TASK . name_of_task ';' tf_declaration_star statement_or_null ENDTASK

    IDENTIFIER  shift, and go to state 195

    name_of_task  go to state 196


State 75

   81 function: FUNCTION . range_or_type_opt IDENTIFIER ';' tf_declaration_plus statement ENDFUNCTION

    '['      shift, and go to state 197
    INTEGER  shift, and go to state 198
    REAL     shift, and go to state 199

    $default  reduce using rule 82 (range_or_type_opt)

    range_or_type_opt  go to state 200
    range_or_type      go to state 201
    range              go to state 202


State 76

  289 specify_block: SPECIFY . specify_item_list ENDSPECIFY

    $default  reduce using rule 290 (specify_item_list)

    specify_item_list  go to state 203


State 77

  124 integer_declaration: INTEGER . list_of_register_variables ';'

    IDENTIFIER  shift, and go to state 204

    list_of_register_variables  go to state 205
    register_variable           go to state 206
    name_of_register            go to state 207
    name_of_memory              go to state 208


State 78

  125 real_declaration: REAL . list_of_variables ';'

    IDENTIFIER  shift, and go to state 28

    list_of_variables  go to state 209


State 79

  123 time_declaration: TIME . list_of_register_variables ';'

    IDENTIFIER  shift, and go to state 204

    list_of_register_variables  go to state 210
    register_variable           go to state 206
    name_of_register            go to state 207
    name_of_memory              go to state 208


State 80

   99 parameter_declaration: PARAMETER . list_of_param_assignments ';'

    IDENTIFIER  shift, and go to state 211

    list_of_param_assignments  go to state 212
    param_assignment           go to state 213
    identifier_hier            go to state 214


State 81

  129 parameter_override: DEFPARAM . list_of_param_assignments ';'

    IDENTIFIER  shift, and go to state 211

    list_of_param_assignments  go to state 215
    param_assignment           go to state 213
    identifier_hier            go to state 214


State 82

  100 input_declaration: INPUT . range_opt list_of_variables ';'

    '['  shift, and go to state 197

    $default  reduce using rule 160 (range_opt)

    range_opt  go to state 216
    range      go to state 217


State 83

  101 output_declaration: OUTPUT . range_opt list_of_variables ';'

    '['  shift, and go to state 197

    $default  reduce using rule 160 (range_opt)

    range_opt  go to state 218
    range      go to state 217


State 84

  102 inout_declaration: INOUT . range_opt list_of_variables ';'

    '['  shift, and go to state 197

    $default  reduce using rule 160 (range_opt)

    range_opt  go to state 219
    range      go to state 217


State 85

  106 NETTYPE: WIRE .

    $default  reduce using rule 106 (NETTYPE)


State 86

  107 NETTYPE: TRI .

    $default  reduce using rule 107 (NETTYPE)


State 87

  112 NETTYPE: TRI0 .

    $default  reduce using rule 112 (NETTYPE)


State 88

  108 NETTYPE: TRI1 .

    $default  reduce using rule 108 (NETTYPE)


State 89

  109 NETTYPE: SUPPLY0 .

    $default  reduce using rule 109 (NETTYPE)


State 90

  113 NETTYPE: SUPPLY1 .

    $default  reduce using rule 113 (NETTYPE)


State 91

  110 NETTYPE: WAND .

    $default  reduce using rule 110 (NETTYPE)


State 92

  111 NETTYPE: TRIAND .

    $default  reduce using rule 111 (NETTYPE)


State 93

  115 NETTYPE: TRIOR .

    $default  reduce using rule 115 (NETTYPE)


State 94

  114 NETTYPE: WOR .

    $default  reduce using rule 114 (NETTYPE)


State 95

  104 net_declaration: TRIREG . charge_strength_opt expandrange_opt delay_opt list_of_variables ';'
  116 NETTYPE: TRIREG .

    '('  shift, and go to state 220

    '('         [reduce using rule 116 (NETTYPE)]
    '['         reduce using rule 116 (NETTYPE)
    '['         [reduce using rule 141 (charge_strength_opt)]
    '#'         reduce using rule 116 (NETTYPE)
    '#'         [reduce using rule 141 (charge_strength_opt)]
    SCALARED    reduce using rule 116 (NETTYPE)
    SCALARED    [reduce using rule 141 (charge_strength_opt)]
    VECTORED    reduce using rule 116 (NETTYPE)
    VECTORED    [reduce using rule 141 (charge_strength_opt)]
    IDENTIFIER  reduce using rule 116 (NETTYPE)
    IDENTIFIER  [reduce using rule 141 (charge_strength_opt)]
    $default    reduce using rule 116 (NETTYPE)

    charge_strength_opt  go to state 221
    charge_strength      go to state 222


State 96

  122 reg_declaration: REG . range_opt list_of_register_variables ';'

    '['  shift, and go to state 197

    $default  reduce using rule 160 (range_opt)

    range_opt  go to state 223
    range      go to state 217


State 97

  126 event_declaration: EVENT . list_of_name_of_events ';'

    IDENTIFIER  shift, and go to state 224

    list_of_name_of_events  go to state 225
    name_of_event           go to state 226


State 98

  166 GATETYPE: AND .

    $default  reduce using rule 166 (GATETYPE)


State 99

  167 GATETYPE: NAND .

    $default  reduce using rule 167 (GATETYPE)


State 100

  168 GATETYPE: OR .

    $default  reduce using rule 168 (GATETYPE)


State 101

  169 GATETYPE: NOR .

    $default  reduce using rule 169 (GATETYPE)


State 102

  170 GATETYPE: XOR .

    $default  reduce using rule 170 (GATETYPE)


State 103

  171 GATETYPE: XNOR .

    $default  reduce using rule 171 (GATETYPE)


State 104

  172 GATETYPE: BUF .

    $default  reduce using rule 172 (GATETYPE)


State 105

  173 GATETYPE: BUFIF0 .

    $default  reduce using rule 173 (GATETYPE)


State 106

  174 GATETYPE: BUFIF1 .

    $default  reduce using rule 174 (GATETYPE)


State 107

  175 GATETYPE: NOT .

    $default  reduce using rule 175 (GATETYPE)


State 108

  176 GATETYPE: NOTIF0 .

    $default  reduce using rule 176 (GATETYPE)


State 109

  177 GATETYPE: NOTIF1 .

    $default  reduce using rule 177 (GATETYPE)


State 110

  178 GATETYPE: PULLDOWN .

    $default  reduce using rule 178 (GATETYPE)


State 111

  179 GATETYPE: PULLUP .

    $default  reduce using rule 179 (GATETYPE)


State 112

  180 GATETYPE: NMOS .

    $default  reduce using rule 180 (GATETYPE)


State 113

  181 GATETYPE: RNMOS .

    $default  reduce using rule 181 (GATETYPE)


State 114

  182 GATETYPE: PMOS .

    $default  reduce using rule 182 (GATETYPE)


State 115

  183 GATETYPE: RPMOS .

    $default  reduce using rule 183 (GATETYPE)


State 116

  184 GATETYPE: CMOS .

    $default  reduce using rule 184 (GATETYPE)


State 117

  185 GATETYPE: RCMOS .

    $default  reduce using rule 185 (GATETYPE)


State 118

  186 GATETYPE: TRAN .

    $default  reduce using rule 186 (GATETYPE)


State 119

  187 GATETYPE: RTRAN .

    $default  reduce using rule 187 (GATETYPE)


State 120

  188 GATETYPE: TRANIF0 .

    $default  reduce using rule 188 (GATETYPE)


State 121

  190 GATETYPE: TRANIF1 .

    $default  reduce using rule 190 (GATETYPE)


State 122

  189 GATETYPE: RTRANIF0 .

    $default  reduce using rule 189 (GATETYPE)


State 123

  191 GATETYPE: RTRANIF1 .

    $default  reduce using rule 191 (GATETYPE)


State 124

  127 continuous_assign: ASSIGN . drive_strength_opt delay_opt list_of_assignments ';'

    '('  shift, and go to state 227

    $default  reduce using rule 146 (drive_strength_opt)

    drive_strength_opt  go to state 228
    drive_strength      go to state 229


State 125

  227 initial_statement: _INITIAL_ . statement

    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement                go to state 253
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 126

  228 always_statement: ALWAYS . statement

    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement                go to state 267
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 127

  198 UDP_instantiation: IDENTIFIER . drive_strength_opt delay_opt UDP_instance_list ';'
  209 module_instantiation: IDENTIFIER . parameter_value_assignment_opt module_instance_list ';'

    '('  shift, and go to state 227
    '#'  shift, and go to state 268

    '('         [reduce using rule 146 (drive_strength_opt)]
    '#'         [reduce using rule 146 (drive_strength_opt)]
    IDENTIFIER  reduce using rule 146 (drive_strength_opt)
    IDENTIFIER  [reduce using rule 210 (parameter_value_assignment_opt)]
    $default    reduce using rule 146 (drive_strength_opt)

    drive_strength_opt              go to state 269
    drive_strength                  go to state 229
    parameter_value_assignment_opt  go to state 270
    parameter_value_assignment      go to state 271


State 128

    7 module_item_list: module_item_list module_item .

    $default  reduce using rule 7 (module_item_list)


State 129

   45 module_item: task .

    $default  reduce using rule 45 (module_item)


State 130

   46 module_item: function .

    $default  reduce using rule 46 (module_item)


State 131

   27 module_item: parameter_declaration .

    $default  reduce using rule 27 (module_item)


State 132

   28 module_item: input_declaration .

    $default  reduce using rule 28 (module_item)


State 133

   29 module_item: output_declaration .

    $default  reduce using rule 29 (module_item)


State 134

   30 module_item: inout_declaration .

    $default  reduce using rule 30 (module_item)


State 135

   31 module_item: net_declaration .

    $default  reduce using rule 31 (module_item)


State 136

  103 net_declaration: NETTYPE . expandrange_opt delay_opt list_of_variables ';'
  105                | NETTYPE . drive_strength_opt expandrange_opt delay_opt list_of_assignments ';'
  128 continuous_assign: NETTYPE . drive_strength_opt expandrange_opt delay_opt list_of_assignments ';'

    '('       shift, and go to state 227
    '['       shift, and go to state 197
    SCALARED  shift, and go to state 272
    VECTORED  shift, and go to state 273

    '{'         reduce using rule 146 (drive_strength_opt)
    '['         [reduce using rule 146 (drive_strength_opt)]
    '#'         reduce using rule 117 (expandrange_opt)
    '#'         [reduce using rule 146 (drive_strength_opt)]
    SCALARED    [reduce using rule 146 (drive_strength_opt)]
    VECTORED    [reduce using rule 146 (drive_strength_opt)]
    IDENTIFIER  reduce using rule 117 (expandrange_opt)
    IDENTIFIER  [reduce using rule 146 (drive_strength_opt)]
    $default    reduce using rule 117 (expandrange_opt)

    expandrange_opt     go to state 274
    expandrange         go to state 275
    drive_strength_opt  go to state 276
    drive_strength      go to state 229
    range               go to state 277


State 137

   32 module_item: reg_declaration .

    $default  reduce using rule 32 (module_item)


State 138

   33 module_item: time_declaration .

    $default  reduce using rule 33 (module_item)


State 139

   34 module_item: integer_declaration .

    $default  reduce using rule 34 (module_item)


State 140

   35 module_item: real_declaration .

    $default  reduce using rule 35 (module_item)


State 141

   36 module_item: event_declaration .

    $default  reduce using rule 36 (module_item)


State 142

   41 module_item: continuous_assign .

    $default  reduce using rule 41 (module_item)


State 143

   40 module_item: parameter_override .

    $default  reduce using rule 40 (module_item)


State 144

   37 module_item: gate_declaration .

    $default  reduce using rule 37 (module_item)


State 145

  165 gate_declaration: GATETYPE . drive_strength_opt delay_opt gate_instance_list ';'

    '('  shift, and go to state 227

    '('       [reduce using rule 146 (drive_strength_opt)]
    $default  reduce using rule 146 (drive_strength_opt)

    drive_strength_opt  go to state 278
    drive_strength      go to state 229


State 146

   38 module_item: UDP_instantiation .

    $default  reduce using rule 38 (module_item)


State 147

   39 module_item: module_instantiation .

    $default  reduce using rule 39 (module_item)


State 148

   43 module_item: initial_statement .

    $default  reduce using rule 43 (module_item)


State 149

   44 module_item: always_statement .

    $default  reduce using rule 44 (module_item)


State 150

   42 module_item: specify_block .

    $default  reduce using rule 42 (module_item)


State 151

    8 module: MODULE IDENTIFIER list_of_ports_encl_opt ';' module_item_list ENDMODULE .

    $default  reduce using rule 8 (module)


State 152

   47 UDP: PRIMITIVE IDENTIFIER '(' list_of_variables ')' ';' . UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE

    INPUT   shift, and go to state 82
    OUTPUT  shift, and go to state 83
    REG     shift, and go to state 96

    UDP_declaration_list  go to state 279
    UDP_declaration       go to state 280
    input_declaration     go to state 281
    output_declaration    go to state 282
    reg_declaration       go to state 283


State 153

  131 list_of_variables: list_of_variables ',' IDENTIFIER .

    $default  reduce using rule 131 (list_of_variables)


State 154

   22 port_reference_list: port_reference_list ',' port_reference .

    $default  reduce using rule 22 (port_reference_list)


State 155

   16 port: '.' name_of_port '(' port_expression_opt . ')'

    ')'  shift, and go to state 284


State 156

  437 primary: '(' mintypmax_expression . ')'

    ')'  shift, and go to state 285


State 157

  390 mintypmax_expression: expression .
  391                     | expression . ':' expression ':' expression
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ':'          shift, and go to state 286
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 390 (mintypmax_expression)

    BINARY_OPERATOR  go to state 189


State 158

  393 expression_list: expression_list . ',' expression
  447 concatenation: '{' expression_list . '}'

    '}'  shift, and go to state 287
    ','  shift, and go to state 288


State 159

  392 expression_list: expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression
  448 multiple_concatenation: '{' expression . '{' expression_list '}' '}'

    '{'          shift, and go to state 289
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 392 (expression_list)

    BINARY_OPERATOR  go to state 189


State 160

  288 system_identifier: IDENTIFIER .

    $default  reduce using rule 288 (system_identifier)


State 161

  452 name_of_system_function: '$' system_identifier .

    $default  reduce using rule 452 (name_of_system_function)


State 162

  449 function_call: IDENTIFIER '(' . expression_list ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression_list          go to state 290
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 163

  441 dot_unsigned_number_opt: '.' . UNSIGNED_NUMBER
  444 number: DECIMAL_NUMBER '.' . UNSIGNED_NUMBER

    UNSIGNED_NUMBER  shift, and go to state 292


State 164

  445 number: DECIMAL_NUMBER dot_unsigned_number_opt . 'E' DECIMAL_NUMBER
  446       | DECIMAL_NUMBER dot_unsigned_number_opt . 'e' DECIMAL_NUMBER

    'e'  shift, and go to state 293
    'E'  shift, and go to state 294


State 165

   25 port_reference: IDENTIFIER '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 295
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 166

   24 port_reference: IDENTIFIER '[' constant_expression ']' .

    $default  reduce using rule 24 (port_reference)


State 167

  397 expression: expression '?' . expression ':' expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 296
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 168

  409 BINARY_OPERATOR: '+' .

    $default  reduce using rule 409 (BINARY_OPERATOR)


State 169

  410 BINARY_OPERATOR: '-' .

    $default  reduce using rule 410 (BINARY_OPERATOR)


State 170

  411 BINARY_OPERATOR: '*' .

    $default  reduce using rule 411 (BINARY_OPERATOR)


State 171

  412 BINARY_OPERATOR: '/' .

    $default  reduce using rule 412 (BINARY_OPERATOR)


State 172

  413 BINARY_OPERATOR: '%' .

    $default  reduce using rule 413 (BINARY_OPERATOR)


State 173

  424 BINARY_OPERATOR: '&' .

    $default  reduce using rule 424 (BINARY_OPERATOR)


State 174

  425 BINARY_OPERATOR: '|' .

    $default  reduce using rule 425 (BINARY_OPERATOR)


State 175

  420 BINARY_OPERATOR: '<' .

    $default  reduce using rule 420 (BINARY_OPERATOR)


State 176

  422 BINARY_OPERATOR: '>' .

    $default  reduce using rule 422 (BINARY_OPERATOR)


State 177

  426 BINARY_OPERATOR: '^' .

    $default  reduce using rule 426 (BINARY_OPERATOR)


State 178

  414 BINARY_OPERATOR: EQ_EQ .

    $default  reduce using rule 414 (BINARY_OPERATOR)


State 179

  415 BINARY_OPERATOR: NOT_EQ .

    $default  reduce using rule 415 (BINARY_OPERATOR)


State 180

  416 BINARY_OPERATOR: EQ_EQ_EQ .

    $default  reduce using rule 416 (BINARY_OPERATOR)


State 181

  417 BINARY_OPERATOR: NOT_EQ_EQ .

    $default  reduce using rule 417 (BINARY_OPERATOR)


State 182

  418 BINARY_OPERATOR: LAND .

    $default  reduce using rule 418 (BINARY_OPERATOR)


State 183

  419 BINARY_OPERATOR: LOR .

    $default  reduce using rule 419 (BINARY_OPERATOR)


State 184

  421 BINARY_OPERATOR: LTE .

    $default  reduce using rule 421 (BINARY_OPERATOR)


State 185

  423 BINARY_OPERATOR: GTE .

    $default  reduce using rule 423 (BINARY_OPERATOR)


State 186

  427 BINARY_OPERATOR: CARET_TILDE .

    $default  reduce using rule 427 (BINARY_OPERATOR)


State 187

  429 BINARY_OPERATOR: LSHIFT .

    $default  reduce using rule 429 (BINARY_OPERATOR)


State 188

  428 BINARY_OPERATOR: RSHIFT .

    $default  reduce using rule 428 (BINARY_OPERATOR)


State 189

  396 expression: expression BINARY_OPERATOR . expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 297
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 190

  395 expression: UNARY_OPERATOR primary .

    $default  reduce using rule 395 (expression)


State 191

  443 number: unsigned_number_opt BASE . UNSIGNED_NUMBER

    UNSIGNED_NUMBER  shift, and go to state 298


State 192

  450 function_call: name_of_system_function '(' . expression_list ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression_list          go to state 299
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 193

  432 primary: identifier_hier '[' . expression ']'
  433        | identifier_hier '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 300
    expression               go to state 301
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 194

  454 identifier_hier: identifier_hier '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 302


State 195

   80 name_of_task: IDENTIFIER .

    $default  reduce using rule 80 (name_of_task)


State 196

   79 task: TASK name_of_task . ';' tf_declaration_star statement_or_null ENDTASK

    ';'  shift, and go to state 303


State 197

  162 range: '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 304
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 198

   85 range_or_type: INTEGER .

    $default  reduce using rule 85 (range_or_type)


State 199

   86 range_or_type: REAL .

    $default  reduce using rule 86 (range_or_type)


State 200

   81 function: FUNCTION range_or_type_opt . IDENTIFIER ';' tf_declaration_plus statement ENDFUNCTION

    IDENTIFIER  shift, and go to state 305


State 201

   83 range_or_type_opt: range_or_type .

    $default  reduce using rule 83 (range_or_type_opt)


State 202

   84 range_or_type: range .

    $default  reduce using rule 84 (range_or_type)


State 203

  289 specify_block: SPECIFY specify_item_list . ENDSPECIFY
  291 specify_item_list: specify_item_list . specify_item

    '('         shift, and go to state 306
    '$'         shift, and go to state 307
    ENDSPECIFY  shift, and go to state 308
    SPECPARAM   shift, and go to state 309
    IF          shift, and go to state 310

    '('  [reduce using rule 371 (if_expression_opt)]

    specify_item                      go to state 311
    specparam_declaration             go to state 312
    path_declaration                  go to state 313
    path_description                  go to state 314
    system_timing_check               go to state 315
    level_sensitive_path_declaration  go to state 316
    if_expression_opt                 go to state 317
    edge_sensitive_path_declaration   go to state 318
    sdpd                              go to state 319


State 204

  136 name_of_register: IDENTIFIER .
  137 name_of_memory: IDENTIFIER .

    '['       reduce using rule 137 (name_of_memory)
    $default  reduce using rule 136 (name_of_register)


State 205

  124 integer_declaration: INTEGER list_of_register_variables . ';'
  133 list_of_register_variables: list_of_register_variables . ',' register_variable

    ';'  shift, and go to state 320
    ','  shift, and go to state 321


State 206

  132 list_of_register_variables: register_variable .

    $default  reduce using rule 132 (list_of_register_variables)


State 207

  134 register_variable: name_of_register .

    $default  reduce using rule 134 (register_variable)


State 208

  135 register_variable: name_of_memory . '[' constant_expression ':' constant_expression ']'

    '['  shift, and go to state 322


State 209

  125 real_declaration: REAL list_of_variables . ';'
  131 list_of_variables: list_of_variables . ',' IDENTIFIER

    ';'  shift, and go to state 323
    ','  shift, and go to state 40


State 210

  123 time_declaration: TIME list_of_register_variables . ';'
  133 list_of_register_variables: list_of_register_variables . ',' register_variable

    ';'  shift, and go to state 324
    ','  shift, and go to state 321


State 211

  453 identifier_hier: IDENTIFIER .

    $default  reduce using rule 453 (identifier_hier)


State 212

   99 parameter_declaration: PARAMETER list_of_param_assignments . ';'
  300 list_of_param_assignments: list_of_param_assignments . ',' param_assignment

    ';'  shift, and go to state 325
    ','  shift, and go to state 326


State 213

  299 list_of_param_assignments: param_assignment .

    $default  reduce using rule 299 (list_of_param_assignments)


State 214

  301 param_assignment: identifier_hier . '=' constant_expression
  454 identifier_hier: identifier_hier . '.' IDENTIFIER

    '.'  shift, and go to state 194
    '='  shift, and go to state 327


State 215

  129 parameter_override: DEFPARAM list_of_param_assignments . ';'
  300 list_of_param_assignments: list_of_param_assignments . ',' param_assignment

    ';'  shift, and go to state 328
    ','  shift, and go to state 326


State 216

  100 input_declaration: INPUT range_opt . list_of_variables ';'

    IDENTIFIER  shift, and go to state 28

    list_of_variables  go to state 329


State 217

  161 range_opt: range .

    $default  reduce using rule 161 (range_opt)


State 218

  101 output_declaration: OUTPUT range_opt . list_of_variables ';'

    IDENTIFIER  shift, and go to state 28

    list_of_variables  go to state 330


State 219

  102 inout_declaration: INOUT range_opt . list_of_variables ';'

    IDENTIFIER  shift, and go to state 28

    list_of_variables  go to state 331


State 220

  143 charge_strength: '(' . SMALL ')'
  144                | '(' . MEDIUM ')'
  145                | '(' . LARGE ')'

    SMALL   shift, and go to state 332
    MEDIUM  shift, and go to state 333
    LARGE   shift, and go to state 334


State 221

  104 net_declaration: TRIREG charge_strength_opt . expandrange_opt delay_opt list_of_variables ';'

    '['       shift, and go to state 197
    SCALARED  shift, and go to state 272
    VECTORED  shift, and go to state 273

    $default  reduce using rule 117 (expandrange_opt)

    expandrange_opt  go to state 335
    expandrange      go to state 275
    range            go to state 277


State 222

  142 charge_strength_opt: charge_strength .

    $default  reduce using rule 142 (charge_strength_opt)


State 223

  122 reg_declaration: REG range_opt . list_of_register_variables ';'

    IDENTIFIER  shift, and go to state 204

    list_of_register_variables  go to state 336
    register_variable           go to state 206
    name_of_register            go to state 207
    name_of_memory              go to state 208


State 224

  140 name_of_event: IDENTIFIER .

    $default  reduce using rule 140 (name_of_event)


State 225

  126 event_declaration: EVENT list_of_name_of_events . ';'
  139 list_of_name_of_events: list_of_name_of_events . ',' name_of_event

    ';'  shift, and go to state 337
    ','  shift, and go to state 338


State 226

  138 list_of_name_of_events: name_of_event .

    $default  reduce using rule 138 (list_of_name_of_events)


State 227

  148 drive_strength: '(' . STRENGTH0 ',' STRENGTH1 ')'
  149               | '(' . STRENGTH1 ',' STRENGTH0 ')'

    SUPPLY0  shift, and go to state 339
    SUPPLY1  shift, and go to state 340
    STRONG0  shift, and go to state 341
    STRONG1  shift, and go to state 342
    PULL0    shift, and go to state 343
    PULL1    shift, and go to state 344
    WEAK0    shift, and go to state 345
    WEAK1    shift, and go to state 346
    HIGHZ0   shift, and go to state 347
    HIGHZ1   shift, and go to state 348

    STRENGTH0  go to state 349
    STRENGTH1  go to state 350


State 228

  127 continuous_assign: ASSIGN drive_strength_opt . delay_opt list_of_assignments ';'

    '#'  shift, and go to state 351

    $default  reduce using rule 455 (delay_opt)

    delay_opt  go to state 352
    delay      go to state 353


State 229

  147 drive_strength_opt: drive_strength .

    $default  reduce using rule 147 (drive_strength_opt)


State 230

  447 concatenation: '{' . expression_list '}'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression_list          go to state 158
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 231

  463 event_control: '@' . identifier_hier
  464              | '@' . '(' event_expression ')'

    '('         shift, and go to state 354
    IDENTIFIER  shift, and go to state 211

    identifier_hier  go to state 355


State 232

  460 delay_control: '#' . number
  461              | '#' . identifier_hier
  462              | '#' . '(' mintypmax_expression ')'

    '('              shift, and go to state 356
    IDENTIFIER       shift, and go to state 211
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    unsigned_number_opt  go to state 65
    number               go to state 357
    identifier_hier      go to state 358


State 233

  287 name_of_system_task: '$' . system_identifier

    IDENTIFIER  shift, and go to state 160

    system_identifier  go to state 359


State 234

  246 statement: HYPH_GT . name_of_event ';'

    IDENTIFIER  shift, and go to state 224

    name_of_event  go to state 360


State 235

  270 seq_block: _BEGIN_ . statement_list END
  271          | _BEGIN_ . ':' name_of_block block_declaration_list statement_list END

    ':'  shift, and go to state 361

    $default  reduce using rule 231 (statement_list)

    statement_list  go to state 362


State 236

  253 statement: ASSIGN . assignment ';'

    '{'         shift, and go to state 230
    IDENTIFIER  shift, and go to state 211

    assignment       go to state 363
    lvalue           go to state 364
    concatenation    go to state 263
    identifier_hier  go to state 264


State 237

  254 statement: DEASSIGN . lvalue ';'

    '{'         shift, and go to state 230
    IDENTIFIER  shift, and go to state 211

    lvalue           go to state 365
    concatenation    go to state 263
    identifier_hier  go to state 264


State 238

  235 statement: IF . '(' expression ')' statement_or_null
  236          | IF . '(' expression ')' statement_or_null ELSE statement_or_null

    '('  shift, and go to state 366


State 239

  237 statement: CASE . '(' expression ')' case_item_list ENDCASE

    '('  shift, and go to state 367


State 240

  238 statement: CASEZ . '(' expression ')' case_item_list ENDCASE

    '('  shift, and go to state 368


State 241

  239 statement: CASEX . '(' expression ')' case_item_list ENDCASE

    '('  shift, and go to state 369


State 242

  240 statement: FOREVER . statement

    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement                go to state 370
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 243

  241 statement: REPEAT . '(' expression ')' statement
  264 delay_or_event_control: REPEAT . '(' expression ')' event_control

    '('  shift, and go to state 371


State 244

  242 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 372


State 245

  243 statement: FOR . '(' assignment ';' expression ';' assignment ')' statement

    '('  shift, and go to state 373


State 246

  245 statement: WAIT . '(' expression ')' statement_or_null

    '('  shift, and go to state 374


State 247

  251 statement: DISABLE . name_of_task ';'
  252          | DISABLE . name_of_block ';'

    IDENTIFIER  shift, and go to state 375

    name_of_task   go to state 376
    name_of_block  go to state 377


State 248

  255 statement: FORCE . assignment ';'

    '{'         shift, and go to state 230
    IDENTIFIER  shift, and go to state 211

    assignment       go to state 378
    lvalue           go to state 364
    concatenation    go to state 263
    identifier_hier  go to state 264


State 249

  256 statement: RELEASE . lvalue ';'

    '{'         shift, and go to state 230
    IDENTIFIER  shift, and go to state 211

    lvalue           go to state 379
    concatenation    go to state 263
    identifier_hier  go to state 264


State 250

  272 par_block: FORK . statement_list JOIN
  273          | FORK . ':' name_of_block block_declaration_list statement_list JOIN

    ':'  shift, and go to state 380

    $default  reduce using rule 231 (statement_list)

    statement_list  go to state 381


State 251

   80 name_of_task: IDENTIFIER .
  453 identifier_hier: IDENTIFIER .

    '['       reduce using rule 453 (identifier_hier)
    '.'       reduce using rule 453 (identifier_hier)
    '='       reduce using rule 453 (identifier_hier)
    LTE       reduce using rule 453 (identifier_hier)
    $default  reduce using rule 80 (name_of_task)


State 252

  283 task_enable: name_of_task .
  284            | name_of_task . '(' expression_list ')' ';'

    '('  shift, and go to state 382

    '('       [reduce using rule 283 (task_enable)]
    $default  reduce using rule 283 (task_enable)


State 253

  227 initial_statement: _INITIAL_ statement .

    $default  reduce using rule 227 (initial_statement)


State 254

  233 statement: blocking_assignment . ';'

    ';'  shift, and go to state 383


State 255

  234 statement: non_blocking_assignment . ';'

    ';'  shift, and go to state 384


State 256

  244 statement: delay_or_event_control . statement_or_null

    ';'         shift, and go to state 385
    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement_or_null        go to state 386
    statement                go to state 387
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 257

  247 statement: seq_block .

    $default  reduce using rule 247 (statement)


State 258

  248 statement: par_block .

    $default  reduce using rule 248 (statement)


State 259

  249 statement: task_enable .

    $default  reduce using rule 249 (statement)


State 260

  250 statement: system_task_enable .

    $default  reduce using rule 250 (statement)


State 261

  285 system_task_enable: name_of_system_task . ';'
  286                   | name_of_system_task . '(' expression_list ')' ';'

    ';'  shift, and go to state 388
    '('  shift, and go to state 389


State 262

  258 blocking_assignment: lvalue . '=' expression
  259                    | lvalue . '=' delay_or_event_control expression ';'
  260 non_blocking_assignment: lvalue . LTE expression
  261                        | lvalue . '=' delay_or_event_control expression ';'

    '='  shift, and go to state 390
    LTE  shift, and go to state 391


State 263

  386 lvalue: concatenation .

    $default  reduce using rule 386 (lvalue)


State 264

  383 lvalue: identifier_hier .
  384       | identifier_hier . '[' expression ']'
  385       | identifier_hier . '[' constant_expression ':' constant_expression ']'
  454 identifier_hier: identifier_hier . '.' IDENTIFIER

    '['  shift, and go to state 392
    '.'  shift, and go to state 194

    $default  reduce using rule 383 (lvalue)


State 265

  262 delay_or_event_control: delay_control .

    $default  reduce using rule 262 (delay_or_event_control)


State 266

  263 delay_or_event_control: event_control .

    $default  reduce using rule 263 (delay_or_event_control)


State 267

  228 always_statement: ALWAYS statement .

    $default  reduce using rule 228 (always_statement)


State 268

  212 parameter_value_assignment: '#' . '(' expression_list ')'

    '('  shift, and go to state 393


State 269

  198 UDP_instantiation: IDENTIFIER drive_strength_opt . delay_opt UDP_instance_list ';'

    '#'  shift, and go to state 351

    $default  reduce using rule 455 (delay_opt)

    delay_opt  go to state 394
    delay      go to state 353


State 270

  209 module_instantiation: IDENTIFIER parameter_value_assignment_opt . module_instance_list ';'

    IDENTIFIER  shift, and go to state 395

    module_instance_list  go to state 396
    module_instance       go to state 397


State 271

  211 parameter_value_assignment_opt: parameter_value_assignment .

    $default  reduce using rule 211 (parameter_value_assignment_opt)


State 272

  120 expandrange: SCALARED . range

    '['  shift, and go to state 197

    range  go to state 398


State 273

  121 expandrange: VECTORED . range

    '['  shift, and go to state 197

    range  go to state 399


State 274

  103 net_declaration: NETTYPE expandrange_opt . delay_opt list_of_variables ';'

    '#'  shift, and go to state 351

    $default  reduce using rule 455 (delay_opt)

    delay_opt  go to state 400
    delay      go to state 353


State 275

  118 expandrange_opt: expandrange .

    $default  reduce using rule 118 (expandrange_opt)


State 276

  105 net_declaration: NETTYPE drive_strength_opt . expandrange_opt delay_opt list_of_assignments ';'
  128 continuous_assign: NETTYPE drive_strength_opt . expandrange_opt delay_opt list_of_assignments ';'

    '['       shift, and go to state 197
    SCALARED  shift, and go to state 272
    VECTORED  shift, and go to state 273

    $default  reduce using rule 117 (expandrange_opt)

    expandrange_opt  go to state 401
    expandrange      go to state 275
    range            go to state 277


State 277

  119 expandrange: range .

    $default  reduce using rule 119 (expandrange)


State 278

  165 gate_declaration: GATETYPE drive_strength_opt . delay_opt gate_instance_list ';'

    '#'  shift, and go to state 351

    $default  reduce using rule 455 (delay_opt)

    delay_opt  go to state 402
    delay      go to state 353


State 279

   47 UDP: PRIMITIVE IDENTIFIER '(' list_of_variables ')' ';' UDP_declaration_list . UDP_initial_statement_opt table_definition ENDPRIMITIVE
   49 UDP_declaration_list: UDP_declaration_list . UDP_declaration

    INPUT      shift, and go to state 82
    OUTPUT     shift, and go to state 83
    REG        shift, and go to state 96
    _INITIAL_  shift, and go to state 403

    $default  reduce using rule 53 (UDP_initial_statement_opt)

    UDP_declaration            go to state 404
    UDP_initial_statement_opt  go to state 405
    UDP_initial_statement      go to state 406
    input_declaration          go to state 281
    output_declaration         go to state 282
    reg_declaration            go to state 283


State 280

   48 UDP_declaration_list: UDP_declaration .

    $default  reduce using rule 48 (UDP_declaration_list)


State 281

   52 UDP_declaration: input_declaration .

    $default  reduce using rule 52 (UDP_declaration)


State 282

   50 UDP_declaration: output_declaration .

    $default  reduce using rule 50 (UDP_declaration)


State 283

   51 UDP_declaration: reg_declaration .

    $default  reduce using rule 51 (UDP_declaration)


State 284

   16 port: '.' name_of_port '(' port_expression_opt ')' .

    $default  reduce using rule 16 (port)


State 285

  437 primary: '(' mintypmax_expression ')' .

    $default  reduce using rule 437 (primary)


State 286

  391 mintypmax_expression: expression ':' . expression ':' expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 407
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 287

  447 concatenation: '{' expression_list '}' .

    $default  reduce using rule 447 (concatenation)


State 288

  393 expression_list: expression_list ',' . expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 408
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 289

  448 multiple_concatenation: '{' expression '{' . expression_list '}' '}'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression_list          go to state 409
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 290

  393 expression_list: expression_list . ',' expression
  449 function_call: IDENTIFIER '(' expression_list . ')'

    ')'  shift, and go to state 410
    ','  shift, and go to state 288


State 291

  392 expression_list: expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 392 (expression_list)

    BINARY_OPERATOR  go to state 189


State 292

  441 dot_unsigned_number_opt: '.' UNSIGNED_NUMBER .
  444 number: DECIMAL_NUMBER '.' UNSIGNED_NUMBER .

    'e'       reduce using rule 441 (dot_unsigned_number_opt)
    'E'       reduce using rule 441 (dot_unsigned_number_opt)
    $default  reduce using rule 444 (number)


State 293

  446 number: DECIMAL_NUMBER dot_unsigned_number_opt 'e' . DECIMAL_NUMBER

    DECIMAL_NUMBER  shift, and go to state 411


State 294

  445 number: DECIMAL_NUMBER dot_unsigned_number_opt 'E' . DECIMAL_NUMBER

    DECIMAL_NUMBER  shift, and go to state 412


State 295

   25 port_reference: IDENTIFIER '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 413


State 296

  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression
  397           | expression '?' expression . ':' expression

    ':'          shift, and go to state 414
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 297

  396 expression: expression . BINARY_OPERATOR expression
  396           | expression BINARY_OPERATOR expression .
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    '?'          [reduce using rule 396 (expression)]
    '+'          [reduce using rule 396 (expression)]
    '-'          [reduce using rule 396 (expression)]
    '*'          [reduce using rule 396 (expression)]
    '/'          [reduce using rule 396 (expression)]
    '%'          [reduce using rule 396 (expression)]
    '&'          [reduce using rule 396 (expression)]
    '|'          [reduce using rule 396 (expression)]
    '<'          [reduce using rule 396 (expression)]
    '>'          [reduce using rule 396 (expression)]
    '^'          [reduce using rule 396 (expression)]
    EQ_EQ        [reduce using rule 396 (expression)]
    NOT_EQ       [reduce using rule 396 (expression)]
    EQ_EQ_EQ     [reduce using rule 396 (expression)]
    NOT_EQ_EQ    [reduce using rule 396 (expression)]
    LAND         [reduce using rule 396 (expression)]
    LOR          [reduce using rule 396 (expression)]
    LTE          [reduce using rule 396 (expression)]
    GTE          [reduce using rule 396 (expression)]
    CARET_TILDE  [reduce using rule 396 (expression)]
    LSHIFT       [reduce using rule 396 (expression)]
    RSHIFT       [reduce using rule 396 (expression)]
    $default     reduce using rule 396 (expression)

    BINARY_OPERATOR  go to state 189


State 298

  443 number: unsigned_number_opt BASE UNSIGNED_NUMBER .

    $default  reduce using rule 443 (number)


State 299

  393 expression_list: expression_list . ',' expression
  450 function_call: name_of_system_function '(' expression_list . ')'

    ')'  shift, and go to state 415
    ','  shift, and go to state 288


State 300

  433 primary: identifier_hier '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 416


State 301

  387 constant_expression: expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression
  432 primary: identifier_hier '[' expression . ']'

    ']'          shift, and go to state 417
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 387 (constant_expression)

    BINARY_OPERATOR  go to state 189


State 302

  454 identifier_hier: identifier_hier '.' IDENTIFIER .

    $default  reduce using rule 454 (identifier_hier)


State 303

   79 task: TASK name_of_task ';' . tf_declaration_star statement_or_null ENDTASK

    $default  reduce using rule 87 (tf_declaration_star)

    tf_declaration_star  go to state 418


State 304

  162 range: '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 419


State 305

   81 function: FUNCTION range_or_type_opt IDENTIFIER . ';' tf_declaration_plus statement ENDFUNCTION

    ';'  shift, and go to state 420


State 306

  303 path_description: '(' . specify_input_terminal_descriptor EQ_GT specify_output_terminal_descriptor ')'
  304                 | '(' . list_of_path_inputs AST_GT list_of_path_outputs ')'

    IDENTIFIER  shift, and go to state 421

    list_of_path_inputs                     go to state 422
    specify_input_terminal_descriptor_list  go to state 423
    specify_input_terminal_descriptor       go to state 424
    input_identifier                        go to state 425


State 307

  327 system_timing_check: '$' . SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  328                    | '$' . HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  329                    | '$' . PERIOD '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  330                    | '$' . WIDTH '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'
  331                    | '$' . SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  332                    | '$' . RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'
  333                    | '$' . SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    SETUP      shift, and go to state 426
    HOLD       shift, and go to state 427
    PERIOD     shift, and go to state 428
    WIDTH      shift, and go to state 429
    SKEW       shift, and go to state 430
    RECOVERY   shift, and go to state 431
    SETUPHOLD  shift, and go to state 432


State 308

  289 specify_block: SPECIFY specify_item_list ENDSPECIFY .

    $default  reduce using rule 289 (specify_block)


State 309

  298 specparam_declaration: SPECPARAM . list_of_param_assignments ';'

    IDENTIFIER  shift, and go to state 211

    list_of_param_assignments  go to state 433
    param_assignment           go to state 213
    identifier_hier            go to state 214


State 310

  362 level_sensitive_path_declaration: IF . '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  363                                 | IF . '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'
  372 if_expression_opt: IF . '(' expression ')'
  380 sdpd: IF . '(' sdpd_conditional_expression ')' path_description '=' path_delay_value ';'

    '('  shift, and go to state 434


State 311

  291 specify_item_list: specify_item_list specify_item .

    $default  reduce using rule 291 (specify_item_list)


State 312

  292 specify_item: specparam_declaration .

    $default  reduce using rule 292 (specify_item)


State 313

  293 specify_item: path_declaration .

    $default  reduce using rule 293 (specify_item)


State 314

  302 path_declaration: path_description . '=' path_delay_value ';'

    '='  shift, and go to state 435


State 315

  296 specify_item: system_timing_check .

    $default  reduce using rule 296 (specify_item)


State 316

  294 specify_item: level_sensitive_path_declaration .

    $default  reduce using rule 294 (specify_item)


State 317

  373 edge_sensitive_path_declaration: if_expression_opt . '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'
  374                                | if_expression_opt . '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    '('  shift, and go to state 436


State 318

  295 specify_item: edge_sensitive_path_declaration .

    $default  reduce using rule 295 (specify_item)


State 319

  297 specify_item: sdpd .

    $default  reduce using rule 297 (specify_item)


State 320

  124 integer_declaration: INTEGER list_of_register_variables ';' .

    $default  reduce using rule 124 (integer_declaration)


State 321

  133 list_of_register_variables: list_of_register_variables ',' . register_variable

    IDENTIFIER  shift, and go to state 204

    register_variable  go to state 437
    name_of_register   go to state 207
    name_of_memory     go to state 208


State 322

  135 register_variable: name_of_memory '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 438
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 323

  125 real_declaration: REAL list_of_variables ';' .

    $default  reduce using rule 125 (real_declaration)


State 324

  123 time_declaration: TIME list_of_register_variables ';' .

    $default  reduce using rule 123 (time_declaration)


State 325

   99 parameter_declaration: PARAMETER list_of_param_assignments ';' .

    $default  reduce using rule 99 (parameter_declaration)


State 326

  300 list_of_param_assignments: list_of_param_assignments ',' . param_assignment

    IDENTIFIER  shift, and go to state 211

    param_assignment  go to state 439
    identifier_hier   go to state 214


State 327

  301 param_assignment: identifier_hier '=' . constant_expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 440
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 328

  129 parameter_override: DEFPARAM list_of_param_assignments ';' .

    $default  reduce using rule 129 (parameter_override)


State 329

  100 input_declaration: INPUT range_opt list_of_variables . ';'
  131 list_of_variables: list_of_variables . ',' IDENTIFIER

    ';'  shift, and go to state 441
    ','  shift, and go to state 40


State 330

  101 output_declaration: OUTPUT range_opt list_of_variables . ';'
  131 list_of_variables: list_of_variables . ',' IDENTIFIER

    ';'  shift, and go to state 442
    ','  shift, and go to state 40


State 331

  102 inout_declaration: INOUT range_opt list_of_variables . ';'
  131 list_of_variables: list_of_variables . ',' IDENTIFIER

    ';'  shift, and go to state 443
    ','  shift, and go to state 40


State 332

  143 charge_strength: '(' SMALL . ')'

    ')'  shift, and go to state 444


State 333

  144 charge_strength: '(' MEDIUM . ')'

    ')'  shift, and go to state 445


State 334

  145 charge_strength: '(' LARGE . ')'

    ')'  shift, and go to state 446


State 335

  104 net_declaration: TRIREG charge_strength_opt expandrange_opt . delay_opt list_of_variables ';'

    '#'  shift, and go to state 351

    $default  reduce using rule 455 (delay_opt)

    delay_opt  go to state 447
    delay      go to state 353


State 336

  122 reg_declaration: REG range_opt list_of_register_variables . ';'
  133 list_of_register_variables: list_of_register_variables . ',' register_variable

    ';'  shift, and go to state 448
    ','  shift, and go to state 321


State 337

  126 event_declaration: EVENT list_of_name_of_events ';' .

    $default  reduce using rule 126 (event_declaration)


State 338

  139 list_of_name_of_events: list_of_name_of_events ',' . name_of_event

    IDENTIFIER  shift, and go to state 224

    name_of_event  go to state 449


State 339

  150 STRENGTH0: SUPPLY0 .

    $default  reduce using rule 150 (STRENGTH0)


State 340

  155 STRENGTH1: SUPPLY1 .

    $default  reduce using rule 155 (STRENGTH1)


State 341

  151 STRENGTH0: STRONG0 .

    $default  reduce using rule 151 (STRENGTH0)


State 342

  156 STRENGTH1: STRONG1 .

    $default  reduce using rule 156 (STRENGTH1)


State 343

  152 STRENGTH0: PULL0 .

    $default  reduce using rule 152 (STRENGTH0)


State 344

  157 STRENGTH1: PULL1 .

    $default  reduce using rule 157 (STRENGTH1)


State 345

  153 STRENGTH0: WEAK0 .

    $default  reduce using rule 153 (STRENGTH0)


State 346

  158 STRENGTH1: WEAK1 .

    $default  reduce using rule 158 (STRENGTH1)


State 347

  154 STRENGTH0: HIGHZ0 .

    $default  reduce using rule 154 (STRENGTH0)


State 348

  159 STRENGTH1: HIGHZ1 .

    $default  reduce using rule 159 (STRENGTH1)


State 349

  148 drive_strength: '(' STRENGTH0 . ',' STRENGTH1 ')'

    ','  shift, and go to state 450


State 350

  149 drive_strength: '(' STRENGTH1 . ',' STRENGTH0 ')'

    ','  shift, and go to state 451


State 351

  457 delay: '#' . number
  458      | '#' . identifier_hier
  459      | '#' . '(' mintypmax_expression comma_mintypmax_expression_opt comma_mintypmax_expression_opt ')'

    '('              shift, and go to state 452
    IDENTIFIER       shift, and go to state 211
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    unsigned_number_opt  go to state 65
    number               go to state 453
    identifier_hier      go to state 454


State 352

  127 continuous_assign: ASSIGN drive_strength_opt delay_opt . list_of_assignments ';'

    '{'         shift, and go to state 230
    IDENTIFIER  shift, and go to state 211

    list_of_assignments  go to state 455
    assignment           go to state 456
    lvalue               go to state 364
    concatenation        go to state 263
    identifier_hier      go to state 264


State 353

  456 delay_opt: delay .

    $default  reduce using rule 456 (delay_opt)


State 354

  464 event_control: '@' '(' . event_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    POSEDGE          shift, and go to state 457
    NEGEDGE          shift, and go to state 458
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 459
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71
    event_expression         go to state 460


State 355

  454 identifier_hier: identifier_hier . '.' IDENTIFIER
  463 event_control: '@' identifier_hier .

    '.'  shift, and go to state 194

    $default  reduce using rule 463 (event_control)


State 356

  462 delay_control: '#' '(' . mintypmax_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    mintypmax_expression     go to state 461
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 357

  460 delay_control: '#' number .

    $default  reduce using rule 460 (delay_control)


State 358

  454 identifier_hier: identifier_hier . '.' IDENTIFIER
  461 delay_control: '#' identifier_hier .

    '.'  shift, and go to state 194

    $default  reduce using rule 461 (delay_control)


State 359

  287 name_of_system_task: '$' system_identifier .

    $default  reduce using rule 287 (name_of_system_task)


State 360

  246 statement: HYPH_GT name_of_event . ';'

    ';'  shift, and go to state 462


State 361

  271 seq_block: _BEGIN_ ':' . name_of_block block_declaration_list statement_list END

    IDENTIFIER  shift, and go to state 463

    name_of_block  go to state 464


State 362

  232 statement_list: statement_list . statement
  270 seq_block: _BEGIN_ statement_list . END

    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    END         shift, and go to state 465
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement                go to state 466
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 363

  253 statement: ASSIGN assignment . ';'

    ';'  shift, and go to state 467


State 364

  257 assignment: lvalue . '=' expression

    '='  shift, and go to state 468


State 365

  254 statement: DEASSIGN lvalue . ';'

    ';'  shift, and go to state 469


State 366

  235 statement: IF '(' . expression ')' statement_or_null
  236          | IF '(' . expression ')' statement_or_null ELSE statement_or_null

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 470
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 367

  237 statement: CASE '(' . expression ')' case_item_list ENDCASE

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 471
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 368

  238 statement: CASEZ '(' . expression ')' case_item_list ENDCASE

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 472
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 369

  239 statement: CASEX '(' . expression ')' case_item_list ENDCASE

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 473
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 370

  240 statement: FOREVER statement .

    $default  reduce using rule 240 (statement)


State 371

  241 statement: REPEAT '(' . expression ')' statement
  264 delay_or_event_control: REPEAT '(' . expression ')' event_control

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 474
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 372

  242 statement: WHILE '(' . expression ')' statement

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 475
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 373

  243 statement: FOR '(' . assignment ';' expression ';' assignment ')' statement

    '{'         shift, and go to state 230
    IDENTIFIER  shift, and go to state 211

    assignment       go to state 476
    lvalue           go to state 364
    concatenation    go to state 263
    identifier_hier  go to state 264


State 374

  245 statement: WAIT '(' . expression ')' statement_or_null

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 477
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 375

   80 name_of_task: IDENTIFIER .
  274 name_of_block: IDENTIFIER .

    ';'       reduce using rule 80 (name_of_task)
    ';'       [reduce using rule 274 (name_of_block)]
    $default  reduce using rule 80 (name_of_task)


State 376

  251 statement: DISABLE name_of_task . ';'

    ';'  shift, and go to state 478


State 377

  252 statement: DISABLE name_of_block . ';'

    ';'  shift, and go to state 479


State 378

  255 statement: FORCE assignment . ';'

    ';'  shift, and go to state 480


State 379

  256 statement: RELEASE lvalue . ';'

    ';'  shift, and go to state 481


State 380

  273 par_block: FORK ':' . name_of_block block_declaration_list statement_list JOIN

    IDENTIFIER  shift, and go to state 463

    name_of_block  go to state 482


State 381

  232 statement_list: statement_list . statement
  272 par_block: FORK statement_list . JOIN

    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    JOIN        shift, and go to state 483
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement                go to state 466
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 382

  284 task_enable: name_of_task '(' . expression_list ')' ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression_list          go to state 484
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 383

  233 statement: blocking_assignment ';' .

    $default  reduce using rule 233 (statement)


State 384

  234 statement: non_blocking_assignment ';' .

    $default  reduce using rule 234 (statement)


State 385

  230 statement_or_null: ';' .

    $default  reduce using rule 230 (statement_or_null)


State 386

  244 statement: delay_or_event_control statement_or_null .

    $default  reduce using rule 244 (statement)


State 387

  229 statement_or_null: statement .

    $default  reduce using rule 229 (statement_or_null)


State 388

  285 system_task_enable: name_of_system_task ';' .

    $default  reduce using rule 285 (system_task_enable)


State 389

  286 system_task_enable: name_of_system_task '(' . expression_list ')' ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression_list          go to state 485
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 390

  258 blocking_assignment: lvalue '=' . expression
  259                    | lvalue '=' . delay_or_event_control expression ';'
  261 non_blocking_assignment: lvalue '=' . delay_or_event_control expression ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '@'              shift, and go to state 231
    '#'              shift, and go to state 232
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    REPEAT           shift, and go to state 486
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    delay_or_event_control   go to state 487
    expression               go to state 488
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71
    delay_control            go to state 265
    event_control            go to state 266


State 391

  260 non_blocking_assignment: lvalue LTE . expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 489
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 392

  384 lvalue: identifier_hier '[' . expression ']'
  385       | identifier_hier '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 490
    expression               go to state 491
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 393

  212 parameter_value_assignment: '#' '(' . expression_list ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression_list          go to state 492
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 394

  198 UDP_instantiation: IDENTIFIER drive_strength_opt delay_opt . UDP_instance_list ';'

    IDENTIFIER  shift, and go to state 493

    $default  reduce using rule 202 (name_of_UDP_instance_opt)

    UDP_instance_list         go to state 494
    UDP_instance              go to state 495
    name_of_UDP_instance_opt  go to state 496
    name_of_UDP_instance      go to state 497


State 395

  215 module_instance: IDENTIFIER . range_opt '(' list_of_module_connections_opt ')'

    '['  shift, and go to state 197

    $default  reduce using rule 160 (range_opt)

    range_opt  go to state 498
    range      go to state 217


State 396

  209 module_instantiation: IDENTIFIER parameter_value_assignment_opt module_instance_list . ';'
  214 module_instance_list: module_instance_list . ',' module_instance

    ';'  shift, and go to state 499
    ','  shift, and go to state 500


State 397

  213 module_instance_list: module_instance .

    $default  reduce using rule 213 (module_instance_list)


State 398

  120 expandrange: SCALARED range .

    $default  reduce using rule 120 (expandrange)


State 399

  121 expandrange: VECTORED range .

    $default  reduce using rule 121 (expandrange)


State 400

  103 net_declaration: NETTYPE expandrange_opt delay_opt . list_of_variables ';'

    IDENTIFIER  shift, and go to state 28

    list_of_variables  go to state 501


State 401

  105 net_declaration: NETTYPE drive_strength_opt expandrange_opt . delay_opt list_of_assignments ';'
  128 continuous_assign: NETTYPE drive_strength_opt expandrange_opt . delay_opt list_of_assignments ';'

    '#'  shift, and go to state 351

    $default  reduce using rule 455 (delay_opt)

    delay_opt  go to state 502
    delay      go to state 353


State 402

  165 gate_declaration: GATETYPE drive_strength_opt delay_opt . gate_instance_list ';'

    IDENTIFIER  shift, and go to state 503

    $default  reduce using rule 195 (name_of_gate_instance_opt)

    gate_instance_list         go to state 504
    gate_instance              go to state 505
    name_of_gate_instance_opt  go to state 506
    name_of_gate_instance      go to state 507


State 403

   55 UDP_initial_statement: _INITIAL_ . output_terminal_name '=' INIT_VAL ';'

    IDENTIFIER  shift, and go to state 508

    output_terminal_name  go to state 509


State 404

   49 UDP_declaration_list: UDP_declaration_list UDP_declaration .

    $default  reduce using rule 49 (UDP_declaration_list)


State 405

   47 UDP: PRIMITIVE IDENTIFIER '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt . table_definition ENDPRIMITIVE

    TABLE  shift, and go to state 510

    table_definition  go to state 511


State 406

   54 UDP_initial_statement_opt: UDP_initial_statement .

    $default  reduce using rule 54 (UDP_initial_statement_opt)


State 407

  391 mintypmax_expression: expression ':' expression . ':' expression
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ':'          shift, and go to state 512
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 408

  393 expression_list: expression_list ',' expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 393 (expression_list)

    BINARY_OPERATOR  go to state 189


State 409

  393 expression_list: expression_list . ',' expression
  448 multiple_concatenation: '{' expression '{' expression_list . '}' '}'

    '}'  shift, and go to state 513
    ','  shift, and go to state 288


State 410

  449 function_call: IDENTIFIER '(' expression_list ')' .

    $default  reduce using rule 449 (function_call)


State 411

  446 number: DECIMAL_NUMBER dot_unsigned_number_opt 'e' DECIMAL_NUMBER .

    $default  reduce using rule 446 (number)


State 412

  445 number: DECIMAL_NUMBER dot_unsigned_number_opt 'E' DECIMAL_NUMBER .

    $default  reduce using rule 445 (number)


State 413

   25 port_reference: IDENTIFIER '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 25 (port_reference)


State 414

  397 expression: expression '?' expression ':' . expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 514
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 415

  450 function_call: name_of_system_function '(' expression_list ')' .

    $default  reduce using rule 450 (function_call)


State 416

  433 primary: identifier_hier '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 515
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 417

  432 primary: identifier_hier '[' expression ']' .

    $default  reduce using rule 432 (primary)


State 418

   79 task: TASK name_of_task ';' tf_declaration_star . statement_or_null ENDTASK
   88 tf_declaration_star: tf_declaration_star . tf_declaration

    ';'         shift, and go to state 385
    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    INTEGER     shift, and go to state 77
    REAL        shift, and go to state 78
    TIME        shift, and go to state 79
    PARAMETER   shift, and go to state 80
    INPUT       shift, and go to state 82
    OUTPUT      shift, and go to state 83
    INOUT       shift, and go to state 84
    REG         shift, and go to state 96
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    tf_declaration           go to state 516
    parameter_declaration    go to state 517
    input_declaration        go to state 518
    output_declaration       go to state 519
    inout_declaration        go to state 520
    reg_declaration          go to state 521
    time_declaration         go to state 522
    integer_declaration      go to state 523
    real_declaration         go to state 524
    statement_or_null        go to state 525
    statement                go to state 387
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 419

  162 range: '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 526
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 420

   81 function: FUNCTION range_or_type_opt IDENTIFIER ';' . tf_declaration_plus statement ENDFUNCTION

    INTEGER    shift, and go to state 77
    REAL       shift, and go to state 78
    TIME       shift, and go to state 79
    PARAMETER  shift, and go to state 80
    INPUT      shift, and go to state 82
    OUTPUT     shift, and go to state 83
    INOUT      shift, and go to state 84
    REG        shift, and go to state 96

    tf_declaration_plus    go to state 527
    tf_declaration         go to state 528
    parameter_declaration  go to state 517
    input_declaration      go to state 518
    output_declaration     go to state 519
    inout_declaration      go to state 520
    reg_declaration        go to state 521
    time_declaration       go to state 522
    integer_declaration    go to state 523
    real_declaration       go to state 524


State 421

  317 input_identifier: IDENTIFIER .

    $default  reduce using rule 317 (input_identifier)


State 422

  304 path_description: '(' list_of_path_inputs . AST_GT list_of_path_outputs ')'

    AST_GT  shift, and go to state 529


State 423

  305 list_of_path_inputs: specify_input_terminal_descriptor_list .
  308 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor_list . ',' specify_input_terminal_descriptor

    ','  shift, and go to state 530

    $default  reduce using rule 305 (list_of_path_inputs)


State 424

  303 path_description: '(' specify_input_terminal_descriptor . EQ_GT specify_output_terminal_descriptor ')'
  307 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor .

    EQ_GT  shift, and go to state 531

    $default  reduce using rule 307 (specify_input_terminal_descriptor_list)


State 425

  309 specify_input_terminal_descriptor: input_identifier .
  310                                  | input_identifier . '[' constant_expression ']'
  311                                  | input_identifier . '[' constant_expression ':' constant_expression ']'

    '['  shift, and go to state 532

    $default  reduce using rule 309 (specify_input_terminal_descriptor)


State 426

  327 system_timing_check: '$' SETUP . '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 533


State 427

  328 system_timing_check: '$' HOLD . '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 534


State 428

  329 system_timing_check: '$' PERIOD . '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 535


State 429

  330 system_timing_check: '$' WIDTH . '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'

    '('  shift, and go to state 536


State 430

  331 system_timing_check: '$' SKEW . '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 537


State 431

  332 system_timing_check: '$' RECOVERY . '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 538


State 432

  333 system_timing_check: '$' SETUPHOLD . '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('  shift, and go to state 539


State 433

  298 specparam_declaration: SPECPARAM list_of_param_assignments . ';'
  300 list_of_param_assignments: list_of_param_assignments . ',' param_assignment

    ';'  shift, and go to state 540
    ','  shift, and go to state 326


State 434

  362 level_sensitive_path_declaration: IF '(' . conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  363                                 | IF '(' . conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'
  372 if_expression_opt: IF '(' . expression ')'
  380 sdpd: IF '(' . sdpd_conditional_expression ')' path_description '=' path_delay_value ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 541
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    port_reference               go to state 542
    conditional_port_expression  go to state 543
    sdpd_conditional_expression  go to state 544
    expression                   go to state 545
    UNARY_OPERATOR               go to state 546
    primary                      go to state 64
    unsigned_number_opt          go to state 65
    number                       go to state 66
    concatenation                go to state 67
    multiple_concatenation       go to state 68
    function_call                go to state 69
    name_of_system_function      go to state 70
    identifier_hier              go to state 71


State 435

  302 path_declaration: path_description '=' . path_delay_value ';'

    '('              shift, and go to state 547
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_value         go to state 548
    path_delay_expression    go to state 549
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 436

  373 edge_sensitive_path_declaration: if_expression_opt '(' . edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'
  374                                | if_expression_opt '(' . edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    POSEDGE  shift, and go to state 551
    NEGEDGE  shift, and go to state 552

    $default  reduce using rule 376 (edge_identifier_opt)

    edge_identifier_opt  go to state 553
    edge_identifier      go to state 554


State 437

  133 list_of_register_variables: list_of_register_variables ',' register_variable .

    $default  reduce using rule 133 (list_of_register_variables)


State 438

  135 register_variable: name_of_memory '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 555


State 439

  300 list_of_param_assignments: list_of_param_assignments ',' param_assignment .

    $default  reduce using rule 300 (list_of_param_assignments)


State 440

  301 param_assignment: identifier_hier '=' constant_expression .

    $default  reduce using rule 301 (param_assignment)


State 441

  100 input_declaration: INPUT range_opt list_of_variables ';' .

    $default  reduce using rule 100 (input_declaration)


State 442

  101 output_declaration: OUTPUT range_opt list_of_variables ';' .

    $default  reduce using rule 101 (output_declaration)


State 443

  102 inout_declaration: INOUT range_opt list_of_variables ';' .

    $default  reduce using rule 102 (inout_declaration)


State 444

  143 charge_strength: '(' SMALL ')' .

    $default  reduce using rule 143 (charge_strength)


State 445

  144 charge_strength: '(' MEDIUM ')' .

    $default  reduce using rule 144 (charge_strength)


State 446

  145 charge_strength: '(' LARGE ')' .

    $default  reduce using rule 145 (charge_strength)


State 447

  104 net_declaration: TRIREG charge_strength_opt expandrange_opt delay_opt . list_of_variables ';'

    IDENTIFIER  shift, and go to state 28

    list_of_variables  go to state 556


State 448

  122 reg_declaration: REG range_opt list_of_register_variables ';' .

    $default  reduce using rule 122 (reg_declaration)


State 449

  139 list_of_name_of_events: list_of_name_of_events ',' name_of_event .

    $default  reduce using rule 139 (list_of_name_of_events)


State 450

  148 drive_strength: '(' STRENGTH0 ',' . STRENGTH1 ')'

    SUPPLY1  shift, and go to state 340
    STRONG1  shift, and go to state 342
    PULL1    shift, and go to state 344
    WEAK1    shift, and go to state 346
    HIGHZ1   shift, and go to state 348

    STRENGTH1  go to state 557


State 451

  149 drive_strength: '(' STRENGTH1 ',' . STRENGTH0 ')'

    SUPPLY0  shift, and go to state 339
    STRONG0  shift, and go to state 341
    PULL0    shift, and go to state 343
    WEAK0    shift, and go to state 345
    HIGHZ0   shift, and go to state 347

    STRENGTH0  go to state 558


State 452

  459 delay: '#' '(' . mintypmax_expression comma_mintypmax_expression_opt comma_mintypmax_expression_opt ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    mintypmax_expression     go to state 559
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 453

  457 delay: '#' number .

    $default  reduce using rule 457 (delay)


State 454

  454 identifier_hier: identifier_hier . '.' IDENTIFIER
  458 delay: '#' identifier_hier .

    '.'  shift, and go to state 194

    $default  reduce using rule 458 (delay)


State 455

  127 continuous_assign: ASSIGN drive_strength_opt delay_opt list_of_assignments . ';'
  164 list_of_assignments: list_of_assignments . ',' assignment

    ';'  shift, and go to state 560
    ','  shift, and go to state 561


State 456

  163 list_of_assignments: assignment .

    $default  reduce using rule 163 (list_of_assignments)


State 457

  466 event_expression: POSEDGE . scalar_event_expression

    IDENTIFIER  shift, and go to state 562

    scalar_event_expression  go to state 563


State 458

  467 event_expression: NEGEDGE . scalar_event_expression

    IDENTIFIER  shift, and go to state 562

    scalar_event_expression  go to state 564


State 459

  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression
  465 event_expression: expression .

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 465 (event_expression)

    BINARY_OPERATOR  go to state 189


State 460

  464 event_control: '@' '(' event_expression . ')'
  468 event_expression: event_expression . OR event_expression

    ')'  shift, and go to state 565
    OR   shift, and go to state 566


State 461

  462 delay_control: '#' '(' mintypmax_expression . ')'

    ')'  shift, and go to state 567


State 462

  246 statement: HYPH_GT name_of_event ';' .

    $default  reduce using rule 246 (statement)


State 463

  274 name_of_block: IDENTIFIER .

    $default  reduce using rule 274 (name_of_block)


State 464

  271 seq_block: _BEGIN_ ':' name_of_block . block_declaration_list statement_list END

    $default  reduce using rule 275 (block_declaration_list)

    block_declaration_list  go to state 568


State 465

  270 seq_block: _BEGIN_ statement_list END .

    $default  reduce using rule 270 (seq_block)


State 466

  232 statement_list: statement_list statement .

    $default  reduce using rule 232 (statement_list)


State 467

  253 statement: ASSIGN assignment ';' .

    $default  reduce using rule 253 (statement)


State 468

  257 assignment: lvalue '=' . expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 569
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 469

  254 statement: DEASSIGN lvalue ';' .

    $default  reduce using rule 254 (statement)


State 470

  235 statement: IF '(' expression . ')' statement_or_null
  236          | IF '(' expression . ')' statement_or_null ELSE statement_or_null
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ')'          shift, and go to state 570
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 471

  237 statement: CASE '(' expression . ')' case_item_list ENDCASE
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ')'          shift, and go to state 571
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 472

  238 statement: CASEZ '(' expression . ')' case_item_list ENDCASE
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ')'          shift, and go to state 572
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 473

  239 statement: CASEX '(' expression . ')' case_item_list ENDCASE
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ')'          shift, and go to state 573
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 474

  241 statement: REPEAT '(' expression . ')' statement
  264 delay_or_event_control: REPEAT '(' expression . ')' event_control
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ')'          shift, and go to state 574
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 475

  242 statement: WHILE '(' expression . ')' statement
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ')'          shift, and go to state 575
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 476

  243 statement: FOR '(' assignment . ';' expression ';' assignment ')' statement

    ';'  shift, and go to state 576


State 477

  245 statement: WAIT '(' expression . ')' statement_or_null
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ')'          shift, and go to state 577
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 478

  251 statement: DISABLE name_of_task ';' .

    $default  reduce using rule 251 (statement)


State 479

  252 statement: DISABLE name_of_block ';' .

    $default  reduce using rule 252 (statement)


State 480

  255 statement: FORCE assignment ';' .

    $default  reduce using rule 255 (statement)


State 481

  256 statement: RELEASE lvalue ';' .

    $default  reduce using rule 256 (statement)


State 482

  273 par_block: FORK ':' name_of_block . block_declaration_list statement_list JOIN

    $default  reduce using rule 275 (block_declaration_list)

    block_declaration_list  go to state 578


State 483

  272 par_block: FORK statement_list JOIN .

    $default  reduce using rule 272 (par_block)


State 484

  284 task_enable: name_of_task '(' expression_list . ')' ';'
  393 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 579
    ','  shift, and go to state 288


State 485

  286 system_task_enable: name_of_system_task '(' expression_list . ')' ';'
  393 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 580
    ','  shift, and go to state 288


State 486

  264 delay_or_event_control: REPEAT . '(' expression ')' event_control

    '('  shift, and go to state 581


State 487

  259 blocking_assignment: lvalue '=' delay_or_event_control . expression ';'
  261 non_blocking_assignment: lvalue '=' delay_or_event_control . expression ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 582
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 488

  258 blocking_assignment: lvalue '=' expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 258 (blocking_assignment)

    BINARY_OPERATOR  go to state 189


State 489

  260 non_blocking_assignment: lvalue LTE expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 260 (non_blocking_assignment)

    BINARY_OPERATOR  go to state 189


State 490

  385 lvalue: identifier_hier '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 583


State 491

  384 lvalue: identifier_hier '[' expression . ']'
  387 constant_expression: expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ']'          shift, and go to state 584
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 387 (constant_expression)

    BINARY_OPERATOR  go to state 189


State 492

  212 parameter_value_assignment: '#' '(' expression_list . ')'
  393 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 585
    ','  shift, and go to state 288


State 493

  204 name_of_UDP_instance: IDENTIFIER . range_opt

    '['  shift, and go to state 197

    $default  reduce using rule 160 (range_opt)

    range_opt  go to state 586
    range      go to state 217


State 494

  198 UDP_instantiation: IDENTIFIER drive_strength_opt delay_opt UDP_instance_list . ';'
  200 UDP_instance_list: UDP_instance_list . ',' UDP_instance

    ';'  shift, and go to state 587
    ','  shift, and go to state 588


State 495

  199 UDP_instance_list: UDP_instance .

    $default  reduce using rule 199 (UDP_instance_list)


State 496

  201 UDP_instance: name_of_UDP_instance_opt . '(' terminal_list ')'

    '('  shift, and go to state 589


State 497

  203 name_of_UDP_instance_opt: name_of_UDP_instance .

    $default  reduce using rule 203 (name_of_UDP_instance_opt)


State 498

  215 module_instance: IDENTIFIER range_opt . '(' list_of_module_connections_opt ')'

    '('  shift, and go to state 590


State 499

  209 module_instantiation: IDENTIFIER parameter_value_assignment_opt module_instance_list ';' .

    $default  reduce using rule 209 (module_instantiation)


State 500

  214 module_instance_list: module_instance_list ',' . module_instance

    IDENTIFIER  shift, and go to state 395

    module_instance  go to state 591


State 501

  103 net_declaration: NETTYPE expandrange_opt delay_opt list_of_variables . ';'
  131 list_of_variables: list_of_variables . ',' IDENTIFIER

    ';'  shift, and go to state 592
    ','  shift, and go to state 40


State 502

  105 net_declaration: NETTYPE drive_strength_opt expandrange_opt delay_opt . list_of_assignments ';'
  128 continuous_assign: NETTYPE drive_strength_opt expandrange_opt delay_opt . list_of_assignments ';'

    '{'         shift, and go to state 230
    IDENTIFIER  shift, and go to state 211

    list_of_assignments  go to state 593
    assignment           go to state 456
    lvalue               go to state 364
    concatenation        go to state 263
    identifier_hier      go to state 264


State 503

  197 name_of_gate_instance: IDENTIFIER . range_opt

    '['  shift, and go to state 197

    $default  reduce using rule 160 (range_opt)

    range_opt  go to state 594
    range      go to state 217


State 504

  165 gate_declaration: GATETYPE drive_strength_opt delay_opt gate_instance_list . ';'
  193 gate_instance_list: gate_instance_list . ',' gate_instance

    ';'  shift, and go to state 595
    ','  shift, and go to state 596


State 505

  192 gate_instance_list: gate_instance .

    $default  reduce using rule 192 (gate_instance_list)


State 506

  194 gate_instance: name_of_gate_instance_opt . '(' terminal_list ')'

    '('  shift, and go to state 597


State 507

  196 name_of_gate_instance_opt: name_of_gate_instance .

    $default  reduce using rule 196 (name_of_gate_instance_opt)


State 508

   56 output_terminal_name: IDENTIFIER .

    $default  reduce using rule 56 (output_terminal_name)


State 509

   55 UDP_initial_statement: _INITIAL_ output_terminal_name . '=' INIT_VAL ';'

    '='  shift, and go to state 598


State 510

   57 table_definition: TABLE . table_entries ENDTABLE

    LEVEL_SYMBOL  shift, and go to state 599

    LEVEL_SYMBOL  [reduce using rule 75 (level_symbol_star)]
    $default      reduce using rule 75 (level_symbol_star)

    table_entries             go to state 600
    combinational_entry_list  go to state 601
    combinational_entry       go to state 602
    sequential_entry_list     go to state 603
    sequential_entry          go to state 604
    input_list                go to state 605
    level_input_list          go to state 606
    edge_input_list           go to state 607
    level_symbol_star         go to state 608
    level_symbol_plus         go to state 609


State 511

   47 UDP: PRIMITIVE IDENTIFIER '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition . ENDPRIMITIVE

    ENDPRIMITIVE  shift, and go to state 610


State 512

  391 mintypmax_expression: expression ':' expression ':' . expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 611
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 513

  448 multiple_concatenation: '{' expression '{' expression_list '}' . '}'

    '}'  shift, and go to state 612


State 514

  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression
  397           | expression '?' expression ':' expression .

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    '?'          [reduce using rule 397 (expression)]
    '+'          [reduce using rule 397 (expression)]
    '-'          [reduce using rule 397 (expression)]
    '*'          [reduce using rule 397 (expression)]
    '/'          [reduce using rule 397 (expression)]
    '%'          [reduce using rule 397 (expression)]
    '&'          [reduce using rule 397 (expression)]
    '|'          [reduce using rule 397 (expression)]
    '<'          [reduce using rule 397 (expression)]
    '>'          [reduce using rule 397 (expression)]
    '^'          [reduce using rule 397 (expression)]
    EQ_EQ        [reduce using rule 397 (expression)]
    NOT_EQ       [reduce using rule 397 (expression)]
    EQ_EQ_EQ     [reduce using rule 397 (expression)]
    NOT_EQ_EQ    [reduce using rule 397 (expression)]
    LAND         [reduce using rule 397 (expression)]
    LOR          [reduce using rule 397 (expression)]
    LTE          [reduce using rule 397 (expression)]
    GTE          [reduce using rule 397 (expression)]
    CARET_TILDE  [reduce using rule 397 (expression)]
    LSHIFT       [reduce using rule 397 (expression)]
    RSHIFT       [reduce using rule 397 (expression)]
    $default     reduce using rule 397 (expression)

    BINARY_OPERATOR  go to state 189


State 515

  433 primary: identifier_hier '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 613


State 516

   88 tf_declaration_star: tf_declaration_star tf_declaration .

    $default  reduce using rule 88 (tf_declaration_star)


State 517

   91 tf_declaration: parameter_declaration .

    $default  reduce using rule 91 (tf_declaration)


State 518

   92 tf_declaration: input_declaration .

    $default  reduce using rule 92 (tf_declaration)


State 519

   93 tf_declaration: output_declaration .

    $default  reduce using rule 93 (tf_declaration)


State 520

   94 tf_declaration: inout_declaration .

    $default  reduce using rule 94 (tf_declaration)


State 521

   95 tf_declaration: reg_declaration .

    $default  reduce using rule 95 (tf_declaration)


State 522

   96 tf_declaration: time_declaration .

    $default  reduce using rule 96 (tf_declaration)


State 523

   97 tf_declaration: integer_declaration .

    $default  reduce using rule 97 (tf_declaration)


State 524

   98 tf_declaration: real_declaration .

    $default  reduce using rule 98 (tf_declaration)


State 525

   79 task: TASK name_of_task ';' tf_declaration_star statement_or_null . ENDTASK

    ENDTASK  shift, and go to state 614


State 526

  162 range: '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 615


State 527

   81 function: FUNCTION range_or_type_opt IDENTIFIER ';' tf_declaration_plus . statement ENDFUNCTION
   90 tf_declaration_plus: tf_declaration_plus . tf_declaration

    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    INTEGER     shift, and go to state 77
    REAL        shift, and go to state 78
    TIME        shift, and go to state 79
    PARAMETER   shift, and go to state 80
    INPUT       shift, and go to state 82
    OUTPUT      shift, and go to state 83
    INOUT       shift, and go to state 84
    REG         shift, and go to state 96
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    tf_declaration           go to state 616
    parameter_declaration    go to state 517
    input_declaration        go to state 518
    output_declaration       go to state 519
    inout_declaration        go to state 520
    reg_declaration          go to state 521
    time_declaration         go to state 522
    integer_declaration      go to state 523
    real_declaration         go to state 524
    statement                go to state 617
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 528

   89 tf_declaration_plus: tf_declaration .

    $default  reduce using rule 89 (tf_declaration_plus)


State 529

  304 path_description: '(' list_of_path_inputs AST_GT . list_of_path_outputs ')'

    IDENTIFIER  shift, and go to state 618

    list_of_path_outputs                     go to state 619
    specify_output_terminal_descriptor_list  go to state 620
    specify_output_terminal_descriptor       go to state 621
    output_identifier                        go to state 622


State 530

  308 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor_list ',' . specify_input_terminal_descriptor

    IDENTIFIER  shift, and go to state 421

    specify_input_terminal_descriptor  go to state 623
    input_identifier                   go to state 425


State 531

  303 path_description: '(' specify_input_terminal_descriptor EQ_GT . specify_output_terminal_descriptor ')'

    IDENTIFIER  shift, and go to state 618

    specify_output_terminal_descriptor  go to state 624
    output_identifier                   go to state 622


State 532

  310 specify_input_terminal_descriptor: input_identifier '[' . constant_expression ']'
  311                                  | input_identifier '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 625
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 533

  327 system_timing_check: '$' SETUP '(' . timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    $default  reduce using rule 338 (timing_check_event_control_opt)

    timing_check_event              go to state 629
    timing_check_event_control_opt  go to state 630
    timing_check_event_control      go to state 631
    edge_control_specifier          go to state 632


State 534

  328 system_timing_check: '$' HOLD '(' . timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    $default  reduce using rule 338 (timing_check_event_control_opt)

    timing_check_event              go to state 633
    timing_check_event_control_opt  go to state 630
    timing_check_event_control      go to state 631
    edge_control_specifier          go to state 632


State 535

  329 system_timing_check: '$' PERIOD '(' . controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    controlled_timing_check_event  go to state 634
    timing_check_event_control     go to state 635
    edge_control_specifier         go to state 632


State 536

  330 system_timing_check: '$' WIDTH '(' . controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    controlled_timing_check_event  go to state 636
    timing_check_event_control     go to state 635
    edge_control_specifier         go to state 632


State 537

  331 system_timing_check: '$' SKEW '(' . timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    $default  reduce using rule 338 (timing_check_event_control_opt)

    timing_check_event              go to state 637
    timing_check_event_control_opt  go to state 630
    timing_check_event_control      go to state 631
    edge_control_specifier          go to state 632


State 538

  332 system_timing_check: '$' RECOVERY '(' . controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    controlled_timing_check_event  go to state 638
    timing_check_event_control     go to state 635
    edge_control_specifier         go to state 632


State 539

  333 system_timing_check: '$' SETUPHOLD '(' . timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    $default  reduce using rule 338 (timing_check_event_control_opt)

    timing_check_event              go to state 639
    timing_check_event_control_opt  go to state 630
    timing_check_event_control      go to state 631
    edge_control_specifier          go to state 632


State 540

  298 specparam_declaration: SPECPARAM list_of_param_assignments ';' .

    $default  reduce using rule 298 (specparam_declaration)


State 541

   23 port_reference: IDENTIFIER .
   24               | IDENTIFIER . '[' constant_expression ']'
   25               | IDENTIFIER . '[' constant_expression ':' constant_expression ']'
  449 function_call: IDENTIFIER . '(' expression_list ')'
  453 identifier_hier: IDENTIFIER .

    '('  shift, and go to state 162
    '['  shift, and go to state 34

    ')'          reduce using rule 23 (port_reference)
    ')'          [reduce using rule 453 (identifier_hier)]
    '['          [reduce using rule 453 (identifier_hier)]
    '.'          reduce using rule 453 (identifier_hier)
    '?'          reduce using rule 453 (identifier_hier)
    '+'          reduce using rule 23 (port_reference)
    '+'          [reduce using rule 453 (identifier_hier)]
    '-'          reduce using rule 23 (port_reference)
    '-'          [reduce using rule 453 (identifier_hier)]
    '*'          reduce using rule 23 (port_reference)
    '*'          [reduce using rule 453 (identifier_hier)]
    '/'          reduce using rule 23 (port_reference)
    '/'          [reduce using rule 453 (identifier_hier)]
    '%'          reduce using rule 23 (port_reference)
    '%'          [reduce using rule 453 (identifier_hier)]
    '&'          reduce using rule 23 (port_reference)
    '&'          [reduce using rule 453 (identifier_hier)]
    '|'          reduce using rule 23 (port_reference)
    '|'          [reduce using rule 453 (identifier_hier)]
    '<'          reduce using rule 23 (port_reference)
    '<'          [reduce using rule 453 (identifier_hier)]
    '>'          reduce using rule 23 (port_reference)
    '>'          [reduce using rule 453 (identifier_hier)]
    '^'          reduce using rule 23 (port_reference)
    '^'          [reduce using rule 453 (identifier_hier)]
    EQ_EQ        reduce using rule 23 (port_reference)
    EQ_EQ        [reduce using rule 453 (identifier_hier)]
    NOT_EQ       reduce using rule 23 (port_reference)
    NOT_EQ       [reduce using rule 453 (identifier_hier)]
    EQ_EQ_EQ     reduce using rule 23 (port_reference)
    EQ_EQ_EQ     [reduce using rule 453 (identifier_hier)]
    NOT_EQ_EQ    reduce using rule 23 (port_reference)
    NOT_EQ_EQ    [reduce using rule 453 (identifier_hier)]
    LAND         reduce using rule 23 (port_reference)
    LAND         [reduce using rule 453 (identifier_hier)]
    LOR          reduce using rule 23 (port_reference)
    LOR          [reduce using rule 453 (identifier_hier)]
    LTE          reduce using rule 23 (port_reference)
    LTE          [reduce using rule 453 (identifier_hier)]
    GTE          reduce using rule 23 (port_reference)
    GTE          [reduce using rule 453 (identifier_hier)]
    CARET_TILDE  reduce using rule 23 (port_reference)
    CARET_TILDE  [reduce using rule 453 (identifier_hier)]
    LSHIFT       reduce using rule 23 (port_reference)
    LSHIFT       [reduce using rule 453 (identifier_hier)]
    RSHIFT       reduce using rule 23 (port_reference)
    RSHIFT       [reduce using rule 453 (identifier_hier)]
    $default     reduce using rule 23 (port_reference)


State 542

  364 conditional_port_expression: port_reference .
  366                            | port_reference . BINARY_OPERATOR port_reference

    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 364 (conditional_port_expression)

    BINARY_OPERATOR  go to state 640


State 543

  362 level_sensitive_path_declaration: IF '(' conditional_port_expression . ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  363                                 | IF '(' conditional_port_expression . ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

    ')'  shift, and go to state 641


State 544

  380 sdpd: IF '(' sdpd_conditional_expression . ')' path_description '=' path_delay_value ';'

    ')'  shift, and go to state 642


State 545

  372 if_expression_opt: IF '(' expression . ')'
  381 sdpd_conditional_expression: expression . BINARY_OPERATOR expression
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ')'          shift, and go to state 643
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 644


State 546

  365 conditional_port_expression: UNARY_OPERATOR . port_reference
  382 sdpd_conditional_expression: UNARY_OPERATOR . expression
  395 expression: UNARY_OPERATOR . primary

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 541
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    port_reference           go to state 645
    expression               go to state 646
    UNARY_OPERATOR           go to state 63
    primary                  go to state 647
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 547

  320 path_delay_value: '(' . path_delay_expression ',' path_delay_expression ')'
  321                 | '(' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  322                 | '(' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  323                 | '(' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  437 primary: '(' . mintypmax_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 648
    mintypmax_expression     go to state 649
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 548

  302 path_declaration: path_description '=' path_delay_value . ';'

    ';'  shift, and go to state 650


State 549

  319 path_delay_value: path_delay_expression .

    $default  reduce using rule 319 (path_delay_value)


State 550

  324 path_delay_expression: mintypmax_expression .

    $default  reduce using rule 324 (path_delay_expression)


State 551

  378 edge_identifier: POSEDGE .

    $default  reduce using rule 378 (edge_identifier)


State 552

  379 edge_identifier: NEGEDGE .

    $default  reduce using rule 379 (edge_identifier)


State 553

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt . specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'
  374                                | if_expression_opt '(' edge_identifier_opt . specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 421

    specify_input_terminal_descriptor  go to state 651
    input_identifier                   go to state 425


State 554

  377 edge_identifier_opt: edge_identifier .

    $default  reduce using rule 377 (edge_identifier_opt)


State 555

  135 register_variable: name_of_memory '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 652
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 556

  104 net_declaration: TRIREG charge_strength_opt expandrange_opt delay_opt list_of_variables . ';'
  131 list_of_variables: list_of_variables . ',' IDENTIFIER

    ';'  shift, and go to state 653
    ','  shift, and go to state 40


State 557

  148 drive_strength: '(' STRENGTH0 ',' STRENGTH1 . ')'

    ')'  shift, and go to state 654


State 558

  149 drive_strength: '(' STRENGTH1 ',' STRENGTH0 . ')'

    ')'  shift, and go to state 655


State 559

  459 delay: '#' '(' mintypmax_expression . comma_mintypmax_expression_opt comma_mintypmax_expression_opt ')'

    ','  shift, and go to state 656

    ','       [reduce using rule 388 (comma_mintypmax_expression_opt)]
    $default  reduce using rule 388 (comma_mintypmax_expression_opt)

    comma_mintypmax_expression_opt  go to state 657


State 560

  127 continuous_assign: ASSIGN drive_strength_opt delay_opt list_of_assignments ';' .

    $default  reduce using rule 127 (continuous_assign)


State 561

  164 list_of_assignments: list_of_assignments ',' . assignment

    '{'         shift, and go to state 230
    IDENTIFIER  shift, and go to state 211

    assignment       go to state 658
    lvalue           go to state 364
    concatenation    go to state 263
    identifier_hier  go to state 264


State 562

  469 scalar_event_expression: IDENTIFIER .

    $default  reduce using rule 469 (scalar_event_expression)


State 563

  466 event_expression: POSEDGE scalar_event_expression .

    $default  reduce using rule 466 (event_expression)


State 564

  467 event_expression: NEGEDGE scalar_event_expression .

    $default  reduce using rule 467 (event_expression)


State 565

  464 event_control: '@' '(' event_expression ')' .

    $default  reduce using rule 464 (event_control)


State 566

  468 event_expression: event_expression OR . event_expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    POSEDGE          shift, and go to state 457
    NEGEDGE          shift, and go to state 458
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 459
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71
    event_expression         go to state 659


State 567

  462 delay_control: '#' '(' mintypmax_expression ')' .

    $default  reduce using rule 462 (delay_control)


State 568

  271 seq_block: _BEGIN_ ':' name_of_block block_declaration_list . statement_list END
  276 block_declaration_list: block_declaration_list . block_declaration

    INTEGER    shift, and go to state 77
    REAL       shift, and go to state 78
    TIME       shift, and go to state 79
    PARAMETER  shift, and go to state 80
    REG        shift, and go to state 96
    EVENT      shift, and go to state 97

    $default  reduce using rule 231 (statement_list)

    parameter_declaration  go to state 660
    reg_declaration        go to state 661
    time_declaration       go to state 662
    integer_declaration    go to state 663
    real_declaration       go to state 664
    event_declaration      go to state 665
    statement_list         go to state 666
    block_declaration      go to state 667


State 569

  257 assignment: lvalue '=' expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 257 (assignment)

    BINARY_OPERATOR  go to state 189


State 570

  235 statement: IF '(' expression ')' . statement_or_null
  236          | IF '(' expression ')' . statement_or_null ELSE statement_or_null

    ';'         shift, and go to state 385
    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement_or_null        go to state 668
    statement                go to state 387
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 571

  237 statement: CASE '(' expression ')' . case_item_list ENDCASE

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    DEFAULT          shift, and go to state 669
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    case_item_list           go to state 670
    case_item                go to state 671
    expression_list          go to state 672
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 572

  238 statement: CASEZ '(' expression ')' . case_item_list ENDCASE

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    DEFAULT          shift, and go to state 669
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    case_item_list           go to state 673
    case_item                go to state 671
    expression_list          go to state 672
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 573

  239 statement: CASEX '(' expression ')' . case_item_list ENDCASE

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    DEFAULT          shift, and go to state 669
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    case_item_list           go to state 674
    case_item                go to state 671
    expression_list          go to state 672
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 574

  241 statement: REPEAT '(' expression ')' . statement
  264 delay_or_event_control: REPEAT '(' expression ')' . event_control

    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement                go to state 675
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 676


State 575

  242 statement: WHILE '(' expression ')' . statement

    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement                go to state 677
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 576

  243 statement: FOR '(' assignment ';' . expression ';' assignment ')' statement

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 678
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 577

  245 statement: WAIT '(' expression ')' . statement_or_null

    ';'         shift, and go to state 385
    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement_or_null        go to state 679
    statement                go to state 387
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 578

  273 par_block: FORK ':' name_of_block block_declaration_list . statement_list JOIN
  276 block_declaration_list: block_declaration_list . block_declaration

    INTEGER    shift, and go to state 77
    REAL       shift, and go to state 78
    TIME       shift, and go to state 79
    PARAMETER  shift, and go to state 80
    REG        shift, and go to state 96
    EVENT      shift, and go to state 97

    $default  reduce using rule 231 (statement_list)

    parameter_declaration  go to state 660
    reg_declaration        go to state 661
    time_declaration       go to state 662
    integer_declaration    go to state 663
    real_declaration       go to state 664
    event_declaration      go to state 665
    statement_list         go to state 680
    block_declaration      go to state 667


State 579

  284 task_enable: name_of_task '(' expression_list ')' . ';'

    ';'  shift, and go to state 681


State 580

  286 system_task_enable: name_of_system_task '(' expression_list ')' . ';'

    ';'  shift, and go to state 682


State 581

  264 delay_or_event_control: REPEAT '(' . expression ')' event_control

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 683
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 582

  259 blocking_assignment: lvalue '=' delay_or_event_control expression . ';'
  261 non_blocking_assignment: lvalue '=' delay_or_event_control expression . ';'
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ';'          shift, and go to state 684
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 583

  385 lvalue: identifier_hier '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 685
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 584

  384 lvalue: identifier_hier '[' expression ']' .

    $default  reduce using rule 384 (lvalue)


State 585

  212 parameter_value_assignment: '#' '(' expression_list ')' .

    $default  reduce using rule 212 (parameter_value_assignment)


State 586

  204 name_of_UDP_instance: IDENTIFIER range_opt .

    $default  reduce using rule 204 (name_of_UDP_instance)


State 587

  198 UDP_instantiation: IDENTIFIER drive_strength_opt delay_opt UDP_instance_list ';' .

    $default  reduce using rule 198 (UDP_instantiation)


State 588

  200 UDP_instance_list: UDP_instance_list ',' . UDP_instance

    IDENTIFIER  shift, and go to state 493

    $default  reduce using rule 202 (name_of_UDP_instance_opt)

    UDP_instance              go to state 686
    name_of_UDP_instance_opt  go to state 496
    name_of_UDP_instance      go to state 497


State 589

  201 UDP_instance: name_of_UDP_instance_opt '(' . terminal_list ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 687
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    terminal_list            go to state 688
    terminal                 go to state 689
    expression               go to state 690
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 590

  215 module_instance: IDENTIFIER range_opt '(' . list_of_module_connections_opt ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '.'              shift, and go to state 691
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    ')'       reduce using rule 216 (list_of_module_connections_opt)
    ')'       [reduce using rule 222 (module_port_connection)]
    ','       reduce using rule 222 (module_port_connection)
    BASE      reduce using rule 438 (unsigned_number_opt)
    $default  reduce using rule 216 (list_of_module_connections_opt)

    list_of_module_connections_opt  go to state 692
    list_of_module_connections      go to state 693
    module_port_connection_list     go to state 694
    module_port_connection          go to state 695
    named_port_connection_list      go to state 696
    named_port_connection           go to state 697
    expression                      go to state 698
    UNARY_OPERATOR                  go to state 63
    primary                         go to state 64
    unsigned_number_opt             go to state 65
    number                          go to state 66
    concatenation                   go to state 67
    multiple_concatenation          go to state 68
    function_call                   go to state 69
    name_of_system_function         go to state 70
    identifier_hier                 go to state 71


State 591

  214 module_instance_list: module_instance_list ',' module_instance .

    $default  reduce using rule 214 (module_instance_list)


State 592

  103 net_declaration: NETTYPE expandrange_opt delay_opt list_of_variables ';' .

    $default  reduce using rule 103 (net_declaration)


State 593

  105 net_declaration: NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments . ';'
  128 continuous_assign: NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments . ';'
  164 list_of_assignments: list_of_assignments . ',' assignment

    ';'  shift, and go to state 699
    ','  shift, and go to state 561


State 594

  197 name_of_gate_instance: IDENTIFIER range_opt .

    $default  reduce using rule 197 (name_of_gate_instance)


State 595

  165 gate_declaration: GATETYPE drive_strength_opt delay_opt gate_instance_list ';' .

    $default  reduce using rule 165 (gate_declaration)


State 596

  193 gate_instance_list: gate_instance_list ',' . gate_instance

    IDENTIFIER  shift, and go to state 503

    $default  reduce using rule 195 (name_of_gate_instance_opt)

    gate_instance              go to state 700
    name_of_gate_instance_opt  go to state 506
    name_of_gate_instance      go to state 507


State 597

  194 gate_instance: name_of_gate_instance_opt '(' . terminal_list ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 687
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    terminal_list            go to state 701
    terminal                 go to state 689
    expression               go to state 690
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 598

   55 UDP_initial_statement: _INITIAL_ output_terminal_name '=' . INIT_VAL ';'

    INIT_VAL  shift, and go to state 702


State 599

   77 level_symbol_plus: LEVEL_SYMBOL .

    $default  reduce using rule 77 (level_symbol_plus)


State 600

   57 table_definition: TABLE table_entries . ENDTABLE

    ENDTABLE  shift, and go to state 703


State 601

   58 table_entries: combinational_entry_list .
   61 combinational_entry_list: combinational_entry_list . combinational_entry

    LEVEL_SYMBOL  shift, and go to state 599

    $default  reduce using rule 58 (table_entries)

    combinational_entry  go to state 704
    level_input_list     go to state 705
    level_symbol_plus    go to state 609


State 602

   60 combinational_entry_list: combinational_entry .

    $default  reduce using rule 60 (combinational_entry_list)


State 603

   59 table_entries: sequential_entry_list .
   64 sequential_entry_list: sequential_entry_list . sequential_entry

    LEVEL_SYMBOL  shift, and go to state 599

    ENDTABLE      reduce using rule 59 (table_entries)
    LEVEL_SYMBOL  [reduce using rule 75 (level_symbol_star)]
    $default      reduce using rule 75 (level_symbol_star)

    sequential_entry   go to state 706
    input_list         go to state 605
    level_input_list   go to state 707
    edge_input_list    go to state 607
    level_symbol_star  go to state 608
    level_symbol_plus  go to state 609


State 604

   63 sequential_entry_list: sequential_entry .

    $default  reduce using rule 63 (sequential_entry_list)


State 605

   65 sequential_entry: input_list . ':' state ':' next_state ';'

    ':'  shift, and go to state 708


State 606

   62 combinational_entry: level_input_list . ':' OUTPUT_SYMBOL ';'
   66 input_list: level_input_list .

    ':'  shift, and go to state 709

    ':'  [reduce using rule 66 (input_list)]


State 607

   67 input_list: edge_input_list .

    $default  reduce using rule 67 (input_list)


State 608

   69 edge_input_list: level_symbol_star . edge level_symbol_star
   76 level_symbol_star: level_symbol_star . LEVEL_SYMBOL

    '('           shift, and go to state 710
    LEVEL_SYMBOL  shift, and go to state 711
    EDGE_SYMBOL   shift, and go to state 712

    edge  go to state 713


State 609

   68 level_input_list: level_symbol_plus .
   78 level_symbol_plus: level_symbol_plus . LEVEL_SYMBOL

    LEVEL_SYMBOL  shift, and go to state 714

    $default  reduce using rule 68 (level_input_list)


State 610

   47 UDP: PRIMITIVE IDENTIFIER '(' list_of_variables ')' ';' UDP_declaration_list UDP_initial_statement_opt table_definition ENDPRIMITIVE .

    $default  reduce using rule 47 (UDP)


State 611

  391 mintypmax_expression: expression ':' expression ':' expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 391 (mintypmax_expression)

    BINARY_OPERATOR  go to state 189


State 612

  448 multiple_concatenation: '{' expression '{' expression_list '}' '}' .

    $default  reduce using rule 448 (multiple_concatenation)


State 613

  433 primary: identifier_hier '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 433 (primary)


State 614

   79 task: TASK name_of_task ';' tf_declaration_star statement_or_null ENDTASK .

    $default  reduce using rule 79 (task)


State 615

  162 range: '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 162 (range)


State 616

   90 tf_declaration_plus: tf_declaration_plus tf_declaration .

    $default  reduce using rule 90 (tf_declaration_plus)


State 617

   81 function: FUNCTION range_or_type_opt IDENTIFIER ';' tf_declaration_plus statement . ENDFUNCTION

    ENDFUNCTION  shift, and go to state 715


State 618

  318 output_identifier: IDENTIFIER .

    $default  reduce using rule 318 (output_identifier)


State 619

  304 path_description: '(' list_of_path_inputs AST_GT list_of_path_outputs . ')'

    ')'  shift, and go to state 716


State 620

  306 list_of_path_outputs: specify_output_terminal_descriptor_list .
  313 specify_output_terminal_descriptor_list: specify_output_terminal_descriptor_list . ',' specify_output_terminal_descriptor

    ','  shift, and go to state 717

    $default  reduce using rule 306 (list_of_path_outputs)


State 621

  312 specify_output_terminal_descriptor_list: specify_output_terminal_descriptor .

    $default  reduce using rule 312 (specify_output_terminal_descriptor_list)


State 622

  314 specify_output_terminal_descriptor: output_identifier .
  315                                   | output_identifier . '[' constant_expression ']'
  316                                   | output_identifier . '[' constant_expression ':' constant_expression ']'

    '['  shift, and go to state 718

    $default  reduce using rule 314 (specify_output_terminal_descriptor)


State 623

  308 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor_list ',' specify_input_terminal_descriptor .

    $default  reduce using rule 308 (specify_input_terminal_descriptor_list)


State 624

  303 path_description: '(' specify_input_terminal_descriptor EQ_GT specify_output_terminal_descriptor . ')'

    ')'  shift, and go to state 719


State 625

  310 specify_input_terminal_descriptor: input_identifier '[' constant_expression . ']'
  311                                  | input_identifier '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 720
    ']'  shift, and go to state 721


State 626

  340 timing_check_event_control: POSEDGE .

    $default  reduce using rule 340 (timing_check_event_control)


State 627

  341 timing_check_event_control: NEGEDGE .

    $default  reduce using rule 341 (timing_check_event_control)


State 628

  343 edge_control_specifier: EDGE . '[' edge_descriptor_list ']'

    '['  shift, and go to state 722


State 629

  327 system_timing_check: '$' SETUP '(' timing_check_event . ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 723


State 630

  334 timing_check_event: timing_check_event_control_opt . specify_terminal_descriptor amp_timing_check_condition_opt

    IDENTIFIER  shift, and go to state 724

    specify_input_terminal_descriptor   go to state 725
    specify_output_terminal_descriptor  go to state 726
    input_identifier                    go to state 425
    output_identifier                   go to state 622
    specify_terminal_descriptor         go to state 727


State 631

  339 timing_check_event_control_opt: timing_check_event_control .

    $default  reduce using rule 339 (timing_check_event_control_opt)


State 632

  342 timing_check_event_control: edge_control_specifier .

    $default  reduce using rule 342 (timing_check_event_control)


State 633

  328 system_timing_check: '$' HOLD '(' timing_check_event . ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 728


State 634

  329 system_timing_check: '$' PERIOD '(' controlled_timing_check_event . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 729


State 635

  337 controlled_timing_check_event: timing_check_event_control . specify_terminal_descriptor amp_timing_check_condition_opt

    IDENTIFIER  shift, and go to state 724

    specify_input_terminal_descriptor   go to state 725
    specify_output_terminal_descriptor  go to state 726
    input_identifier                    go to state 425
    output_identifier                   go to state 622
    specify_terminal_descriptor         go to state 730


State 636

  330 system_timing_check: '$' WIDTH '(' controlled_timing_check_event . ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'

    ','  shift, and go to state 731


State 637

  331 system_timing_check: '$' SKEW '(' timing_check_event . ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 732


State 638

  332 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event . ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 733


State 639

  333 system_timing_check: '$' SETUPHOLD '(' timing_check_event . ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 734


State 640

  366 conditional_port_expression: port_reference BINARY_OPERATOR . port_reference

    IDENTIFIER  shift, and go to state 20

    port_reference  go to state 735


State 641

  362 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' . '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  363                                 | IF '(' conditional_port_expression ')' . '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

    '('  shift, and go to state 736


State 642

  380 sdpd: IF '(' sdpd_conditional_expression ')' . path_description '=' path_delay_value ';'

    '('  shift, and go to state 306

    path_description  go to state 737


State 643

  372 if_expression_opt: IF '(' expression ')' .

    $default  reduce using rule 372 (if_expression_opt)


State 644

  381 sdpd_conditional_expression: expression BINARY_OPERATOR . expression
  396 expression: expression BINARY_OPERATOR . expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 738
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 645

  365 conditional_port_expression: UNARY_OPERATOR port_reference .

    $default  reduce using rule 365 (conditional_port_expression)


State 646

  382 sdpd_conditional_expression: UNARY_OPERATOR expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 382 (sdpd_conditional_expression)

    BINARY_OPERATOR  go to state 189


State 647

  394 expression: primary .
  395           | UNARY_OPERATOR primary .

    ')'          reduce using rule 394 (expression)
    ')'          [reduce using rule 395 (expression)]
    '?'          reduce using rule 394 (expression)
    '?'          [reduce using rule 395 (expression)]
    '+'          reduce using rule 394 (expression)
    '+'          [reduce using rule 395 (expression)]
    '-'          reduce using rule 394 (expression)
    '-'          [reduce using rule 395 (expression)]
    '*'          reduce using rule 394 (expression)
    '*'          [reduce using rule 395 (expression)]
    '/'          reduce using rule 394 (expression)
    '/'          [reduce using rule 395 (expression)]
    '%'          reduce using rule 394 (expression)
    '%'          [reduce using rule 395 (expression)]
    '&'          reduce using rule 394 (expression)
    '&'          [reduce using rule 395 (expression)]
    '|'          reduce using rule 394 (expression)
    '|'          [reduce using rule 395 (expression)]
    '<'          reduce using rule 394 (expression)
    '<'          [reduce using rule 395 (expression)]
    '>'          reduce using rule 394 (expression)
    '>'          [reduce using rule 395 (expression)]
    '^'          reduce using rule 394 (expression)
    '^'          [reduce using rule 395 (expression)]
    EQ_EQ        reduce using rule 394 (expression)
    EQ_EQ        [reduce using rule 395 (expression)]
    NOT_EQ       reduce using rule 394 (expression)
    NOT_EQ       [reduce using rule 395 (expression)]
    EQ_EQ_EQ     reduce using rule 394 (expression)
    EQ_EQ_EQ     [reduce using rule 395 (expression)]
    NOT_EQ_EQ    reduce using rule 394 (expression)
    NOT_EQ_EQ    [reduce using rule 395 (expression)]
    LAND         reduce using rule 394 (expression)
    LAND         [reduce using rule 395 (expression)]
    LOR          reduce using rule 394 (expression)
    LOR          [reduce using rule 395 (expression)]
    LTE          reduce using rule 394 (expression)
    LTE          [reduce using rule 395 (expression)]
    GTE          reduce using rule 394 (expression)
    GTE          [reduce using rule 395 (expression)]
    CARET_TILDE  reduce using rule 394 (expression)
    CARET_TILDE  [reduce using rule 395 (expression)]
    LSHIFT       reduce using rule 394 (expression)
    LSHIFT       [reduce using rule 395 (expression)]
    RSHIFT       reduce using rule 394 (expression)
    RSHIFT       [reduce using rule 395 (expression)]
    $default     reduce using rule 394 (expression)


State 648

  320 path_delay_value: '(' path_delay_expression . ',' path_delay_expression ')'
  321                 | '(' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ')'
  322                 | '(' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  323                 | '(' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 739


State 649

  324 path_delay_expression: mintypmax_expression .
  437 primary: '(' mintypmax_expression . ')'

    ')'  shift, and go to state 285

    $default  reduce using rule 324 (path_delay_expression)


State 650

  302 path_declaration: path_description '=' path_delay_value ';' .

    $default  reduce using rule 302 (path_declaration)


State 651

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor . EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'
  374                                | if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor . AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    EQ_GT   shift, and go to state 740
    AST_GT  shift, and go to state 741


State 652

  135 register_variable: name_of_memory '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 742


State 653

  104 net_declaration: TRIREG charge_strength_opt expandrange_opt delay_opt list_of_variables ';' .

    $default  reduce using rule 104 (net_declaration)


State 654

  148 drive_strength: '(' STRENGTH0 ',' STRENGTH1 ')' .

    $default  reduce using rule 148 (drive_strength)


State 655

  149 drive_strength: '(' STRENGTH1 ',' STRENGTH0 ')' .

    $default  reduce using rule 149 (drive_strength)


State 656

  389 comma_mintypmax_expression_opt: ',' . mintypmax_expression

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    mintypmax_expression     go to state 743
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 657

  459 delay: '#' '(' mintypmax_expression comma_mintypmax_expression_opt . comma_mintypmax_expression_opt ')'

    ','  shift, and go to state 656

    $default  reduce using rule 388 (comma_mintypmax_expression_opt)

    comma_mintypmax_expression_opt  go to state 744


State 658

  164 list_of_assignments: list_of_assignments ',' assignment .

    $default  reduce using rule 164 (list_of_assignments)


State 659

  468 event_expression: event_expression . OR event_expression
  468                 | event_expression OR event_expression .

    OR  shift, and go to state 566

    OR        [reduce using rule 468 (event_expression)]
    $default  reduce using rule 468 (event_expression)


State 660

  277 block_declaration: parameter_declaration .

    $default  reduce using rule 277 (block_declaration)


State 661

  278 block_declaration: reg_declaration .

    $default  reduce using rule 278 (block_declaration)


State 662

  281 block_declaration: time_declaration .

    $default  reduce using rule 281 (block_declaration)


State 663

  279 block_declaration: integer_declaration .

    $default  reduce using rule 279 (block_declaration)


State 664

  280 block_declaration: real_declaration .

    $default  reduce using rule 280 (block_declaration)


State 665

  282 block_declaration: event_declaration .

    $default  reduce using rule 282 (block_declaration)


State 666

  232 statement_list: statement_list . statement
  271 seq_block: _BEGIN_ ':' name_of_block block_declaration_list statement_list . END

    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    END         shift, and go to state 745
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement                go to state 466
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 667

  276 block_declaration_list: block_declaration_list block_declaration .

    $default  reduce using rule 276 (block_declaration_list)


State 668

  235 statement: IF '(' expression ')' statement_or_null .
  236          | IF '(' expression ')' statement_or_null . ELSE statement_or_null

    ELSE  shift, and go to state 746

    ELSE      [reduce using rule 235 (statement)]
    $default  reduce using rule 235 (statement)


State 669

  268 case_item: DEFAULT . ':' statement_or_null
  269          | DEFAULT . statement_or_null

    ';'         shift, and go to state 385
    ':'         shift, and go to state 747
    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement_or_null        go to state 748
    statement                go to state 387
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 670

  237 statement: CASE '(' expression ')' case_item_list . ENDCASE
  266 case_item_list: case_item_list . case_item

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    ENDCASE          shift, and go to state 749
    DEFAULT          shift, and go to state 669
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    case_item                go to state 750
    expression_list          go to state 672
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 671

  265 case_item_list: case_item .

    $default  reduce using rule 265 (case_item_list)


State 672

  267 case_item: expression_list . ':' statement_or_null
  393 expression_list: expression_list . ',' expression

    ':'  shift, and go to state 751
    ','  shift, and go to state 288


State 673

  238 statement: CASEZ '(' expression ')' case_item_list . ENDCASE
  266 case_item_list: case_item_list . case_item

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    ENDCASE          shift, and go to state 752
    DEFAULT          shift, and go to state 669
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    case_item                go to state 750
    expression_list          go to state 672
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 674

  239 statement: CASEX '(' expression ')' case_item_list . ENDCASE
  266 case_item_list: case_item_list . case_item

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    ENDCASE          shift, and go to state 753
    DEFAULT          shift, and go to state 669
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    case_item                go to state 750
    expression_list          go to state 672
    expression               go to state 291
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 675

  241 statement: REPEAT '(' expression ')' statement .

    $default  reduce using rule 241 (statement)


State 676

  263 delay_or_event_control: event_control .
  264                       | REPEAT '(' expression ')' event_control .

    ';'         reduce using rule 263 (delay_or_event_control)
    ';'         [reduce using rule 264 (delay_or_event_control)]
    '{'         reduce using rule 263 (delay_or_event_control)
    '{'         [reduce using rule 264 (delay_or_event_control)]
    '@'         reduce using rule 263 (delay_or_event_control)
    '@'         [reduce using rule 264 (delay_or_event_control)]
    '#'         reduce using rule 263 (delay_or_event_control)
    '#'         [reduce using rule 264 (delay_or_event_control)]
    '$'         reduce using rule 263 (delay_or_event_control)
    '$'         [reduce using rule 264 (delay_or_event_control)]
    HYPH_GT     reduce using rule 263 (delay_or_event_control)
    HYPH_GT     [reduce using rule 264 (delay_or_event_control)]
    _BEGIN_     reduce using rule 263 (delay_or_event_control)
    _BEGIN_     [reduce using rule 264 (delay_or_event_control)]
    ASSIGN      reduce using rule 263 (delay_or_event_control)
    ASSIGN      [reduce using rule 264 (delay_or_event_control)]
    DEASSIGN    reduce using rule 263 (delay_or_event_control)
    DEASSIGN    [reduce using rule 264 (delay_or_event_control)]
    IF          reduce using rule 263 (delay_or_event_control)
    IF          [reduce using rule 264 (delay_or_event_control)]
    CASE        reduce using rule 263 (delay_or_event_control)
    CASE        [reduce using rule 264 (delay_or_event_control)]
    CASEZ       reduce using rule 263 (delay_or_event_control)
    CASEZ       [reduce using rule 264 (delay_or_event_control)]
    CASEX       reduce using rule 263 (delay_or_event_control)
    CASEX       [reduce using rule 264 (delay_or_event_control)]
    FOREVER     reduce using rule 263 (delay_or_event_control)
    FOREVER     [reduce using rule 264 (delay_or_event_control)]
    REPEAT      reduce using rule 263 (delay_or_event_control)
    REPEAT      [reduce using rule 264 (delay_or_event_control)]
    WHILE       reduce using rule 263 (delay_or_event_control)
    WHILE       [reduce using rule 264 (delay_or_event_control)]
    FOR         reduce using rule 263 (delay_or_event_control)
    FOR         [reduce using rule 264 (delay_or_event_control)]
    WAIT        reduce using rule 263 (delay_or_event_control)
    WAIT        [reduce using rule 264 (delay_or_event_control)]
    DISABLE     reduce using rule 263 (delay_or_event_control)
    DISABLE     [reduce using rule 264 (delay_or_event_control)]
    FORCE       reduce using rule 263 (delay_or_event_control)
    FORCE       [reduce using rule 264 (delay_or_event_control)]
    RELEASE     reduce using rule 263 (delay_or_event_control)
    RELEASE     [reduce using rule 264 (delay_or_event_control)]
    FORK        reduce using rule 263 (delay_or_event_control)
    FORK        [reduce using rule 264 (delay_or_event_control)]
    IDENTIFIER  reduce using rule 263 (delay_or_event_control)
    IDENTIFIER  [reduce using rule 264 (delay_or_event_control)]
    $default    reduce using rule 263 (delay_or_event_control)


State 677

  242 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 242 (statement)


State 678

  243 statement: FOR '(' assignment ';' expression . ';' assignment ')' statement
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ';'          shift, and go to state 754
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 679

  245 statement: WAIT '(' expression ')' statement_or_null .

    $default  reduce using rule 245 (statement)


State 680

  232 statement_list: statement_list . statement
  273 par_block: FORK ':' name_of_block block_declaration_list statement_list . JOIN

    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    JOIN        shift, and go to state 755
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement                go to state 466
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 681

  284 task_enable: name_of_task '(' expression_list ')' ';' .

    $default  reduce using rule 284 (task_enable)


State 682

  286 system_task_enable: name_of_system_task '(' expression_list ')' ';' .

    $default  reduce using rule 286 (system_task_enable)


State 683

  264 delay_or_event_control: REPEAT '(' expression . ')' event_control
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ')'          shift, and go to state 756
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 684

  259 blocking_assignment: lvalue '=' delay_or_event_control expression ';' .
  261 non_blocking_assignment: lvalue '=' delay_or_event_control expression ';' .

    ';'       reduce using rule 259 (blocking_assignment)
    ';'       [reduce using rule 261 (non_blocking_assignment)]
    $default  reduce using rule 259 (blocking_assignment)


State 685

  385 lvalue: identifier_hier '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 757


State 686

  200 UDP_instance_list: UDP_instance_list ',' UDP_instance .

    $default  reduce using rule 200 (UDP_instance_list)


State 687

  208 terminal: IDENTIFIER .
  449 function_call: IDENTIFIER . '(' expression_list ')'
  453 identifier_hier: IDENTIFIER .

    '('  shift, and go to state 162

    ')'       reduce using rule 208 (terminal)
    ')'       [reduce using rule 453 (identifier_hier)]
    ','       reduce using rule 208 (terminal)
    ','       [reduce using rule 453 (identifier_hier)]
    $default  reduce using rule 453 (identifier_hier)


State 688

  201 UDP_instance: name_of_UDP_instance_opt '(' terminal_list . ')'
  206 terminal_list: terminal_list . ',' terminal

    ')'  shift, and go to state 758
    ','  shift, and go to state 759


State 689

  205 terminal_list: terminal .

    $default  reduce using rule 205 (terminal_list)


State 690

  207 terminal: expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 207 (terminal)

    BINARY_OPERATOR  go to state 189


State 691

  226 named_port_connection: '.' . IDENTIFIER '(' expression ')'

    IDENTIFIER  shift, and go to state 760


State 692

  215 module_instance: IDENTIFIER range_opt '(' list_of_module_connections_opt . ')'

    ')'  shift, and go to state 761


State 693

  217 list_of_module_connections_opt: list_of_module_connections .

    $default  reduce using rule 217 (list_of_module_connections_opt)


State 694

  218 list_of_module_connections: module_port_connection_list .
  221 module_port_connection_list: module_port_connection_list . ',' module_port_connection

    ','  shift, and go to state 762

    $default  reduce using rule 218 (list_of_module_connections)


State 695

  220 module_port_connection_list: module_port_connection .

    $default  reduce using rule 220 (module_port_connection_list)


State 696

  219 list_of_module_connections: named_port_connection_list .
  225 named_port_connection_list: named_port_connection_list . ',' named_port_connection

    ','  shift, and go to state 763

    $default  reduce using rule 219 (list_of_module_connections)


State 697

  224 named_port_connection_list: named_port_connection .

    $default  reduce using rule 224 (named_port_connection_list)


State 698

  223 module_port_connection: expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 223 (module_port_connection)

    BINARY_OPERATOR  go to state 189


State 699

  105 net_declaration: NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments ';' .
  128 continuous_assign: NETTYPE drive_strength_opt expandrange_opt delay_opt list_of_assignments ';' .

    ENDMODULE   reduce using rule 105 (net_declaration)
    ENDMODULE   [reduce using rule 128 (continuous_assign)]
    TASK        reduce using rule 105 (net_declaration)
    TASK        [reduce using rule 128 (continuous_assign)]
    FUNCTION    reduce using rule 105 (net_declaration)
    FUNCTION    [reduce using rule 128 (continuous_assign)]
    SPECIFY     reduce using rule 105 (net_declaration)
    SPECIFY     [reduce using rule 128 (continuous_assign)]
    INTEGER     reduce using rule 105 (net_declaration)
    INTEGER     [reduce using rule 128 (continuous_assign)]
    REAL        reduce using rule 105 (net_declaration)
    REAL        [reduce using rule 128 (continuous_assign)]
    TIME        reduce using rule 105 (net_declaration)
    TIME        [reduce using rule 128 (continuous_assign)]
    PARAMETER   reduce using rule 105 (net_declaration)
    PARAMETER   [reduce using rule 128 (continuous_assign)]
    DEFPARAM    reduce using rule 105 (net_declaration)
    DEFPARAM    [reduce using rule 128 (continuous_assign)]
    INPUT       reduce using rule 105 (net_declaration)
    INPUT       [reduce using rule 128 (continuous_assign)]
    OUTPUT      reduce using rule 105 (net_declaration)
    OUTPUT      [reduce using rule 128 (continuous_assign)]
    INOUT       reduce using rule 105 (net_declaration)
    INOUT       [reduce using rule 128 (continuous_assign)]
    WIRE        reduce using rule 105 (net_declaration)
    WIRE        [reduce using rule 128 (continuous_assign)]
    TRI         reduce using rule 105 (net_declaration)
    TRI         [reduce using rule 128 (continuous_assign)]
    TRI0        reduce using rule 105 (net_declaration)
    TRI0        [reduce using rule 128 (continuous_assign)]
    TRI1        reduce using rule 105 (net_declaration)
    TRI1        [reduce using rule 128 (continuous_assign)]
    SUPPLY0     reduce using rule 105 (net_declaration)
    SUPPLY0     [reduce using rule 128 (continuous_assign)]
    SUPPLY1     reduce using rule 105 (net_declaration)
    SUPPLY1     [reduce using rule 128 (continuous_assign)]
    WAND        reduce using rule 105 (net_declaration)
    WAND        [reduce using rule 128 (continuous_assign)]
    TRIAND      reduce using rule 105 (net_declaration)
    TRIAND      [reduce using rule 128 (continuous_assign)]
    TRIOR       reduce using rule 105 (net_declaration)
    TRIOR       [reduce using rule 128 (continuous_assign)]
    WOR         reduce using rule 105 (net_declaration)
    WOR         [reduce using rule 128 (continuous_assign)]
    TRIREG      reduce using rule 105 (net_declaration)
    TRIREG      [reduce using rule 128 (continuous_assign)]
    REG         reduce using rule 105 (net_declaration)
    REG         [reduce using rule 128 (continuous_assign)]
    EVENT       reduce using rule 105 (net_declaration)
    EVENT       [reduce using rule 128 (continuous_assign)]
    AND         reduce using rule 105 (net_declaration)
    AND         [reduce using rule 128 (continuous_assign)]
    NAND        reduce using rule 105 (net_declaration)
    NAND        [reduce using rule 128 (continuous_assign)]
    OR          reduce using rule 105 (net_declaration)
    OR          [reduce using rule 128 (continuous_assign)]
    NOR         reduce using rule 105 (net_declaration)
    NOR         [reduce using rule 128 (continuous_assign)]
    XOR         reduce using rule 105 (net_declaration)
    XOR         [reduce using rule 128 (continuous_assign)]
    XNOR        reduce using rule 105 (net_declaration)
    XNOR        [reduce using rule 128 (continuous_assign)]
    BUF         reduce using rule 105 (net_declaration)
    BUF         [reduce using rule 128 (continuous_assign)]
    BUFIF0      reduce using rule 105 (net_declaration)
    BUFIF0      [reduce using rule 128 (continuous_assign)]
    BUFIF1      reduce using rule 105 (net_declaration)
    BUFIF1      [reduce using rule 128 (continuous_assign)]
    NOT         reduce using rule 105 (net_declaration)
    NOT         [reduce using rule 128 (continuous_assign)]
    NOTIF0      reduce using rule 105 (net_declaration)
    NOTIF0      [reduce using rule 128 (continuous_assign)]
    NOTIF1      reduce using rule 105 (net_declaration)
    NOTIF1      [reduce using rule 128 (continuous_assign)]
    PULLDOWN    reduce using rule 105 (net_declaration)
    PULLDOWN    [reduce using rule 128 (continuous_assign)]
    PULLUP      reduce using rule 105 (net_declaration)
    PULLUP      [reduce using rule 128 (continuous_assign)]
    NMOS        reduce using rule 105 (net_declaration)
    NMOS        [reduce using rule 128 (continuous_assign)]
    RNMOS       reduce using rule 105 (net_declaration)
    RNMOS       [reduce using rule 128 (continuous_assign)]
    PMOS        reduce using rule 105 (net_declaration)
    PMOS        [reduce using rule 128 (continuous_assign)]
    RPMOS       reduce using rule 105 (net_declaration)
    RPMOS       [reduce using rule 128 (continuous_assign)]
    CMOS        reduce using rule 105 (net_declaration)
    CMOS        [reduce using rule 128 (continuous_assign)]
    RCMOS       reduce using rule 105 (net_declaration)
    RCMOS       [reduce using rule 128 (continuous_assign)]
    TRAN        reduce using rule 105 (net_declaration)
    TRAN        [reduce using rule 128 (continuous_assign)]
    RTRAN       reduce using rule 105 (net_declaration)
    RTRAN       [reduce using rule 128 (continuous_assign)]
    TRANIF0     reduce using rule 105 (net_declaration)
    TRANIF0     [reduce using rule 128 (continuous_assign)]
    TRANIF1     reduce using rule 105 (net_declaration)
    TRANIF1     [reduce using rule 128 (continuous_assign)]
    RTRANIF0    reduce using rule 105 (net_declaration)
    RTRANIF0    [reduce using rule 128 (continuous_assign)]
    RTRANIF1    reduce using rule 105 (net_declaration)
    RTRANIF1    [reduce using rule 128 (continuous_assign)]
    ASSIGN      reduce using rule 105 (net_declaration)
    ASSIGN      [reduce using rule 128 (continuous_assign)]
    _INITIAL_   reduce using rule 105 (net_declaration)
    _INITIAL_   [reduce using rule 128 (continuous_assign)]
    ALWAYS      reduce using rule 105 (net_declaration)
    ALWAYS      [reduce using rule 128 (continuous_assign)]
    IDENTIFIER  reduce using rule 105 (net_declaration)
    IDENTIFIER  [reduce using rule 128 (continuous_assign)]
    $default    reduce using rule 105 (net_declaration)


State 700

  193 gate_instance_list: gate_instance_list ',' gate_instance .

    $default  reduce using rule 193 (gate_instance_list)


State 701

  194 gate_instance: name_of_gate_instance_opt '(' terminal_list . ')'
  206 terminal_list: terminal_list . ',' terminal

    ')'  shift, and go to state 764
    ','  shift, and go to state 759


State 702

   55 UDP_initial_statement: _INITIAL_ output_terminal_name '=' INIT_VAL . ';'

    ';'  shift, and go to state 765


State 703

   57 table_definition: TABLE table_entries ENDTABLE .

    $default  reduce using rule 57 (table_definition)


State 704

   61 combinational_entry_list: combinational_entry_list combinational_entry .

    $default  reduce using rule 61 (combinational_entry_list)


State 705

   62 combinational_entry: level_input_list . ':' OUTPUT_SYMBOL ';'

    ':'  shift, and go to state 709


State 706

   64 sequential_entry_list: sequential_entry_list sequential_entry .

    $default  reduce using rule 64 (sequential_entry_list)


State 707

   66 input_list: level_input_list .

    $default  reduce using rule 66 (input_list)


State 708

   65 sequential_entry: input_list ':' . state ':' next_state ';'

    LEVEL_SYMBOL  shift, and go to state 766

    state  go to state 767


State 709

   62 combinational_entry: level_input_list ':' . OUTPUT_SYMBOL ';'

    OUTPUT_SYMBOL  shift, and go to state 768


State 710

   70 edge: '(' . LEVEL_SYMBOL LEVEL_SYMBOL ')'

    LEVEL_SYMBOL  shift, and go to state 769


State 711

   76 level_symbol_star: level_symbol_star LEVEL_SYMBOL .

    $default  reduce using rule 76 (level_symbol_star)


State 712

   71 edge: EDGE_SYMBOL .

    $default  reduce using rule 71 (edge)


State 713

   69 edge_input_list: level_symbol_star edge . level_symbol_star

    $default  reduce using rule 75 (level_symbol_star)

    level_symbol_star  go to state 770


State 714

   78 level_symbol_plus: level_symbol_plus LEVEL_SYMBOL .

    $default  reduce using rule 78 (level_symbol_plus)


State 715

   81 function: FUNCTION range_or_type_opt IDENTIFIER ';' tf_declaration_plus statement ENDFUNCTION .

    $default  reduce using rule 81 (function)


State 716

  304 path_description: '(' list_of_path_inputs AST_GT list_of_path_outputs ')' .

    $default  reduce using rule 304 (path_description)


State 717

  313 specify_output_terminal_descriptor_list: specify_output_terminal_descriptor_list ',' . specify_output_terminal_descriptor

    IDENTIFIER  shift, and go to state 618

    specify_output_terminal_descriptor  go to state 771
    output_identifier                   go to state 622


State 718

  315 specify_output_terminal_descriptor: output_identifier '[' . constant_expression ']'
  316                                   | output_identifier '[' . constant_expression ':' constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 772
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 719

  303 path_description: '(' specify_input_terminal_descriptor EQ_GT specify_output_terminal_descriptor ')' .

    $default  reduce using rule 303 (path_description)


State 720

  311 specify_input_terminal_descriptor: input_identifier '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 773
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 721

  310 specify_input_terminal_descriptor: input_identifier '[' constant_expression ']' .

    $default  reduce using rule 310 (specify_input_terminal_descriptor)


State 722

  343 edge_control_specifier: EDGE '[' . edge_descriptor_list ']'

    EDGE_DESCRIPTOR  shift, and go to state 774

    edge_descriptor_list  go to state 775


State 723

  327 system_timing_check: '$' SETUP '(' timing_check_event ',' . timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    $default  reduce using rule 338 (timing_check_event_control_opt)

    timing_check_event              go to state 776
    timing_check_event_control_opt  go to state 630
    timing_check_event_control      go to state 631
    edge_control_specifier          go to state 632


State 724

  317 input_identifier: IDENTIFIER .
  318 output_identifier: IDENTIFIER .

    '['          reduce using rule 317 (input_identifier)
    '['          [reduce using rule 318 (output_identifier)]
    ','          reduce using rule 317 (input_identifier)
    ','          [reduce using rule 318 (output_identifier)]
    AMP_AMP_AMP  reduce using rule 317 (input_identifier)
    AMP_AMP_AMP  [reduce using rule 318 (output_identifier)]
    $default     reduce using rule 317 (input_identifier)


State 725

  335 specify_terminal_descriptor: specify_input_terminal_descriptor .

    $default  reduce using rule 335 (specify_terminal_descriptor)


State 726

  336 specify_terminal_descriptor: specify_output_terminal_descriptor .

    $default  reduce using rule 336 (specify_terminal_descriptor)


State 727

  334 timing_check_event: timing_check_event_control_opt specify_terminal_descriptor . amp_timing_check_condition_opt

    AMP_AMP_AMP  shift, and go to state 777

    $default  reduce using rule 346 (amp_timing_check_condition_opt)

    amp_timing_check_condition_opt  go to state 778


State 728

  328 system_timing_check: '$' HOLD '(' timing_check_event ',' . timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    $default  reduce using rule 338 (timing_check_event_control_opt)

    timing_check_event              go to state 779
    timing_check_event_control_opt  go to state 630
    timing_check_event_control      go to state 631
    edge_control_specifier          go to state 632


State 729

  329 system_timing_check: '$' PERIOD '(' controlled_timing_check_event ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    timing_check_limit       go to state 780
    expression               go to state 781
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 730

  337 controlled_timing_check_event: timing_check_event_control specify_terminal_descriptor . amp_timing_check_condition_opt

    AMP_AMP_AMP  shift, and go to state 777

    $default  reduce using rule 346 (amp_timing_check_condition_opt)

    amp_timing_check_condition_opt  go to state 782


State 731

  330 system_timing_check: '$' WIDTH '(' controlled_timing_check_event ',' . timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    timing_check_limit       go to state 783
    expression               go to state 781
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 732

  331 system_timing_check: '$' SKEW '(' timing_check_event ',' . timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    $default  reduce using rule 338 (timing_check_event_control_opt)

    timing_check_event              go to state 784
    timing_check_event_control_opt  go to state 630
    timing_check_event_control      go to state 631
    edge_control_specifier          go to state 632


State 733

  332 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' . timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    $default  reduce using rule 338 (timing_check_event_control_opt)

    timing_check_event              go to state 785
    timing_check_event_control_opt  go to state 630
    timing_check_event_control      go to state 631
    edge_control_specifier          go to state 632


State 734

  333 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' . timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    POSEDGE  shift, and go to state 626
    NEGEDGE  shift, and go to state 627
    EDGE     shift, and go to state 628

    $default  reduce using rule 338 (timing_check_event_control_opt)

    timing_check_event              go to state 786
    timing_check_event_control_opt  go to state 630
    timing_check_event_control      go to state 631
    edge_control_specifier          go to state 632


State 735

  366 conditional_port_expression: port_reference BINARY_OPERATOR port_reference .

    $default  reduce using rule 366 (conditional_port_expression)


State 736

  362 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' . specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'
  363                                 | IF '(' conditional_port_expression ')' '(' . list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 421

    list_of_path_inputs                     go to state 787
    specify_input_terminal_descriptor_list  go to state 423
    specify_input_terminal_descriptor       go to state 788
    input_identifier                        go to state 425


State 737

  380 sdpd: IF '(' sdpd_conditional_expression ')' path_description . '=' path_delay_value ';'

    '='  shift, and go to state 789


State 738

  381 sdpd_conditional_expression: expression BINARY_OPERATOR expression .
  396 expression: expression . BINARY_OPERATOR expression
  396           | expression BINARY_OPERATOR expression .
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    ')'          reduce using rule 381 (sdpd_conditional_expression)
    ')'          [reduce using rule 396 (expression)]
    '?'          [reduce using rule 396 (expression)]
    '+'          [reduce using rule 396 (expression)]
    '-'          [reduce using rule 396 (expression)]
    '*'          [reduce using rule 396 (expression)]
    '/'          [reduce using rule 396 (expression)]
    '%'          [reduce using rule 396 (expression)]
    '&'          [reduce using rule 396 (expression)]
    '|'          [reduce using rule 396 (expression)]
    '<'          [reduce using rule 396 (expression)]
    '>'          [reduce using rule 396 (expression)]
    '^'          [reduce using rule 396 (expression)]
    EQ_EQ        [reduce using rule 396 (expression)]
    NOT_EQ       [reduce using rule 396 (expression)]
    EQ_EQ_EQ     [reduce using rule 396 (expression)]
    NOT_EQ_EQ    [reduce using rule 396 (expression)]
    LAND         [reduce using rule 396 (expression)]
    LOR          [reduce using rule 396 (expression)]
    LTE          [reduce using rule 396 (expression)]
    GTE          [reduce using rule 396 (expression)]
    CARET_TILDE  [reduce using rule 396 (expression)]
    LSHIFT       [reduce using rule 396 (expression)]
    RSHIFT       [reduce using rule 396 (expression)]
    $default     reduce using rule 381 (sdpd_conditional_expression)

    BINARY_OPERATOR  go to state 189


State 739

  320 path_delay_value: '(' path_delay_expression ',' . path_delay_expression ')'
  321                 | '(' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ')'
  322                 | '(' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  323                 | '(' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 790
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 740

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT . '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    '('  shift, and go to state 791


State 741

  374 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT . '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    '('  shift, and go to state 792


State 742

  135 register_variable: name_of_memory '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 135 (register_variable)


State 743

  389 comma_mintypmax_expression_opt: ',' mintypmax_expression .

    $default  reduce using rule 389 (comma_mintypmax_expression_opt)


State 744

  459 delay: '#' '(' mintypmax_expression comma_mintypmax_expression_opt comma_mintypmax_expression_opt . ')'

    ')'  shift, and go to state 793


State 745

  271 seq_block: _BEGIN_ ':' name_of_block block_declaration_list statement_list END .

    $default  reduce using rule 271 (seq_block)


State 746

  236 statement: IF '(' expression ')' statement_or_null ELSE . statement_or_null

    ';'         shift, and go to state 385
    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement_or_null        go to state 794
    statement                go to state 387
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 747

  268 case_item: DEFAULT ':' . statement_or_null

    ';'         shift, and go to state 385
    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement_or_null        go to state 795
    statement                go to state 387
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 748

  269 case_item: DEFAULT statement_or_null .

    $default  reduce using rule 269 (case_item)


State 749

  237 statement: CASE '(' expression ')' case_item_list ENDCASE .

    $default  reduce using rule 237 (statement)


State 750

  266 case_item_list: case_item_list case_item .

    $default  reduce using rule 266 (case_item_list)


State 751

  267 case_item: expression_list ':' . statement_or_null

    ';'         shift, and go to state 385
    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement_or_null        go to state 796
    statement                go to state 387
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 752

  238 statement: CASEZ '(' expression ')' case_item_list ENDCASE .

    $default  reduce using rule 238 (statement)


State 753

  239 statement: CASEX '(' expression ')' case_item_list ENDCASE .

    $default  reduce using rule 239 (statement)


State 754

  243 statement: FOR '(' assignment ';' expression ';' . assignment ')' statement

    '{'         shift, and go to state 230
    IDENTIFIER  shift, and go to state 211

    assignment       go to state 797
    lvalue           go to state 364
    concatenation    go to state 263
    identifier_hier  go to state 264


State 755

  273 par_block: FORK ':' name_of_block block_declaration_list statement_list JOIN .

    $default  reduce using rule 273 (par_block)


State 756

  264 delay_or_event_control: REPEAT '(' expression ')' . event_control

    '@'  shift, and go to state 231

    event_control  go to state 798


State 757

  385 lvalue: identifier_hier '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 385 (lvalue)


State 758

  201 UDP_instance: name_of_UDP_instance_opt '(' terminal_list ')' .

    $default  reduce using rule 201 (UDP_instance)


State 759

  206 terminal_list: terminal_list ',' . terminal

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 687
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    terminal                 go to state 799
    expression               go to state 690
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 760

  226 named_port_connection: '.' IDENTIFIER . '(' expression ')'

    '('  shift, and go to state 800


State 761

  215 module_instance: IDENTIFIER range_opt '(' list_of_module_connections_opt ')' .

    $default  reduce using rule 215 (module_instance)


State 762

  221 module_port_connection_list: module_port_connection_list ',' . module_port_connection

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    BASE      reduce using rule 438 (unsigned_number_opt)
    $default  reduce using rule 222 (module_port_connection)

    module_port_connection   go to state 801
    expression               go to state 698
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 763

  225 named_port_connection_list: named_port_connection_list ',' . named_port_connection

    '.'  shift, and go to state 691

    named_port_connection  go to state 802


State 764

  194 gate_instance: name_of_gate_instance_opt '(' terminal_list ')' .

    $default  reduce using rule 194 (gate_instance)


State 765

   55 UDP_initial_statement: _INITIAL_ output_terminal_name '=' INIT_VAL ';' .

    $default  reduce using rule 55 (UDP_initial_statement)


State 766

   72 state: LEVEL_SYMBOL .

    $default  reduce using rule 72 (state)


State 767

   65 sequential_entry: input_list ':' state . ':' next_state ';'

    ':'  shift, and go to state 803


State 768

   62 combinational_entry: level_input_list ':' OUTPUT_SYMBOL . ';'

    ';'  shift, and go to state 804


State 769

   70 edge: '(' LEVEL_SYMBOL . LEVEL_SYMBOL ')'

    LEVEL_SYMBOL  shift, and go to state 805


State 770

   69 edge_input_list: level_symbol_star edge level_symbol_star .
   76 level_symbol_star: level_symbol_star . LEVEL_SYMBOL

    LEVEL_SYMBOL  shift, and go to state 711

    $default  reduce using rule 69 (edge_input_list)


State 771

  313 specify_output_terminal_descriptor_list: specify_output_terminal_descriptor_list ',' specify_output_terminal_descriptor .

    $default  reduce using rule 313 (specify_output_terminal_descriptor_list)


State 772

  315 specify_output_terminal_descriptor: output_identifier '[' constant_expression . ']'
  316                                   | output_identifier '[' constant_expression . ':' constant_expression ']'

    ':'  shift, and go to state 806
    ']'  shift, and go to state 807


State 773

  311 specify_input_terminal_descriptor: input_identifier '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 808


State 774

  344 edge_descriptor_list: EDGE_DESCRIPTOR .

    $default  reduce using rule 344 (edge_descriptor_list)


State 775

  343 edge_control_specifier: EDGE '[' edge_descriptor_list . ']'
  345 edge_descriptor_list: edge_descriptor_list . ',' EDGE_DESCRIPTOR

    ']'  shift, and go to state 809
    ','  shift, and go to state 810


State 776

  327 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 811


State 777

  347 amp_timing_check_condition_opt: AMP_AMP_AMP . timing_check_condition

    '('         shift, and go to state 812
    '~'         shift, and go to state 813
    IDENTIFIER  shift, and go to state 211

    timing_check_condition         go to state 814
    scalar_timing_check_condition  go to state 815
    scalar_expression              go to state 816
    identifier_hier                go to state 817


State 778

  334 timing_check_event: timing_check_event_control_opt specify_terminal_descriptor amp_timing_check_condition_opt .

    $default  reduce using rule 334 (timing_check_event)


State 779

  328 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 818


State 780

  329 system_timing_check: '$' PERIOD '(' controlled_timing_check_event ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 819

    $default  reduce using rule 359 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 820


State 781

  358 timing_check_limit: expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 358 (timing_check_limit)

    BINARY_OPERATOR  go to state 189


State 782

  337 controlled_timing_check_event: timing_check_event_control specify_terminal_descriptor amp_timing_check_condition_opt .

    $default  reduce using rule 337 (controlled_timing_check_event)


State 783

  330 system_timing_check: '$' WIDTH '(' controlled_timing_check_event ',' timing_check_limit . comma_const_exp_comma_notify_reg_opt ')' ';'

    ','  shift, and go to state 821

    $default  reduce using rule 325 (comma_const_exp_comma_notify_reg_opt)

    comma_const_exp_comma_notify_reg_opt  go to state 822


State 784

  331 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 823


State 785

  332 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 824


State 786

  333 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event . ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 825


State 787

  363 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs . polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

    '+'  shift, and go to state 826
    '-'  shift, and go to state 827

    $default  reduce using rule 367 (polarity_operator_opt)

    polarity_operator_opt  go to state 828
    polarity_operator      go to state 829


State 788

  307 specify_input_terminal_descriptor_list: specify_input_terminal_descriptor .
  362 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor . polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'

    '+'  shift, and go to state 826
    '-'  shift, and go to state 827

    '+'       [reduce using rule 307 (specify_input_terminal_descriptor_list)]
    '-'       [reduce using rule 307 (specify_input_terminal_descriptor_list)]
    EQ_GT     reduce using rule 367 (polarity_operator_opt)
    $default  reduce using rule 307 (specify_input_terminal_descriptor_list)

    polarity_operator_opt  go to state 830
    polarity_operator      go to state 829


State 789

  380 sdpd: IF '(' sdpd_conditional_expression ')' path_description '=' . path_delay_value ';'

    '('              shift, and go to state 547
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_value         go to state 831
    path_delay_expression    go to state 549
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 790

  320 path_delay_value: '(' path_delay_expression ',' path_delay_expression . ')'
  321                 | '(' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ')'
  322                 | '(' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  323                 | '(' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ')'  shift, and go to state 832
    ','  shift, and go to state 833


State 791

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' . specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 618

    specify_output_terminal_descriptor  go to state 834
    output_identifier                   go to state 622


State 792

  374 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' . list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 618

    list_of_path_outputs                     go to state 835
    specify_output_terminal_descriptor_list  go to state 620
    specify_output_terminal_descriptor       go to state 621
    output_identifier                        go to state 622


State 793

  459 delay: '#' '(' mintypmax_expression comma_mintypmax_expression_opt comma_mintypmax_expression_opt ')' .

    $default  reduce using rule 459 (delay)


State 794

  236 statement: IF '(' expression ')' statement_or_null ELSE statement_or_null .

    $default  reduce using rule 236 (statement)


State 795

  268 case_item: DEFAULT ':' statement_or_null .

    $default  reduce using rule 268 (case_item)


State 796

  267 case_item: expression_list ':' statement_or_null .

    $default  reduce using rule 267 (case_item)


State 797

  243 statement: FOR '(' assignment ';' expression ';' assignment . ')' statement

    ')'  shift, and go to state 836


State 798

  264 delay_or_event_control: REPEAT '(' expression ')' event_control .

    $default  reduce using rule 264 (delay_or_event_control)


State 799

  206 terminal_list: terminal_list ',' terminal .

    $default  reduce using rule 206 (terminal_list)


State 800

  226 named_port_connection: '.' IDENTIFIER '(' . expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 837
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 801

  221 module_port_connection_list: module_port_connection_list ',' module_port_connection .

    $default  reduce using rule 221 (module_port_connection_list)


State 802

  225 named_port_connection_list: named_port_connection_list ',' named_port_connection .

    $default  reduce using rule 225 (named_port_connection_list)


State 803

   65 sequential_entry: input_list ':' state ':' . next_state ';'

    '-'            shift, and go to state 838
    OUTPUT_SYMBOL  shift, and go to state 839

    next_state  go to state 840


State 804

   62 combinational_entry: level_input_list ':' OUTPUT_SYMBOL ';' .

    $default  reduce using rule 62 (combinational_entry)


State 805

   70 edge: '(' LEVEL_SYMBOL LEVEL_SYMBOL . ')'

    ')'  shift, and go to state 841


State 806

  316 specify_output_terminal_descriptor: output_identifier '[' constant_expression ':' . constant_expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 842
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 807

  315 specify_output_terminal_descriptor: output_identifier '[' constant_expression ']' .

    $default  reduce using rule 315 (specify_output_terminal_descriptor)


State 808

  311 specify_input_terminal_descriptor: input_identifier '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 311 (specify_input_terminal_descriptor)


State 809

  343 edge_control_specifier: EDGE '[' edge_descriptor_list ']' .

    $default  reduce using rule 343 (edge_control_specifier)


State 810

  345 edge_descriptor_list: edge_descriptor_list ',' . EDGE_DESCRIPTOR

    EDGE_DESCRIPTOR  shift, and go to state 843


State 811

  327 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    timing_check_limit       go to state 844
    expression               go to state 781
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 812

  349 timing_check_condition: '(' . scalar_timing_check_condition ')'

    '~'         shift, and go to state 813
    IDENTIFIER  shift, and go to state 211

    scalar_timing_check_condition  go to state 845
    scalar_expression              go to state 816
    identifier_hier                go to state 817


State 813

  351 scalar_timing_check_condition: '~' . scalar_expression

    IDENTIFIER  shift, and go to state 211

    scalar_expression  go to state 846
    identifier_hier    go to state 817


State 814

  347 amp_timing_check_condition_opt: AMP_AMP_AMP timing_check_condition .

    $default  reduce using rule 347 (amp_timing_check_condition_opt)


State 815

  348 timing_check_condition: scalar_timing_check_condition .

    $default  reduce using rule 348 (timing_check_condition)


State 816

  350 scalar_timing_check_condition: scalar_expression .
  352                              | scalar_expression . EQ_EQ SCALAR_CONSTANT
  353                              | scalar_expression . EQ_EQ_EQ SCALAR_CONSTANT
  354                              | scalar_expression . NOT_EQ SCALAR_CONSTANT
  355                              | scalar_expression . NOT_EQ_EQ SCALAR_CONSTANT

    EQ_EQ      shift, and go to state 847
    NOT_EQ     shift, and go to state 848
    EQ_EQ_EQ   shift, and go to state 849
    NOT_EQ_EQ  shift, and go to state 850

    $default  reduce using rule 350 (scalar_timing_check_condition)


State 817

  356 scalar_expression: identifier_hier .
  357                  | identifier_hier . '[' expression ']'
  454 identifier_hier: identifier_hier . '.' IDENTIFIER

    '['  shift, and go to state 851
    '.'  shift, and go to state 194

    $default  reduce using rule 356 (scalar_expression)


State 818

  328 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    timing_check_limit       go to state 852
    expression               go to state 781
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 819

  360 comma_notify_register_opt: ',' . notify_register

    IDENTIFIER  shift, and go to state 211

    notify_register  go to state 853
    identifier_hier  go to state 854


State 820

  329 system_timing_check: '$' PERIOD '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 855


State 821

  326 comma_const_exp_comma_notify_reg_opt: ',' . constant_expression ',' notify_register

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    constant_expression      go to state 856
    expression               go to state 62
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 822

  330 system_timing_check: '$' WIDTH '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt . ')' ';'

    ')'  shift, and go to state 857


State 823

  331 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    timing_check_limit       go to state 858
    expression               go to state 781
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 824

  332 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    timing_check_limit       go to state 859
    expression               go to state 781
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 825

  333 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' . timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    timing_check_limit       go to state 860
    expression               go to state 781
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 826

  369 polarity_operator: '+' .

    $default  reduce using rule 369 (polarity_operator)


State 827

  370 polarity_operator: '-' .

    $default  reduce using rule 370 (polarity_operator)


State 828

  363 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt . AST_GT list_of_path_outputs ')' '=' path_delay_value ';'

    AST_GT  shift, and go to state 861


State 829

  368 polarity_operator_opt: polarity_operator .

    $default  reduce using rule 368 (polarity_operator_opt)


State 830

  362 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt . EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';'

    EQ_GT  shift, and go to state 862


State 831

  380 sdpd: IF '(' sdpd_conditional_expression ')' path_description '=' path_delay_value . ';'

    ';'  shift, and go to state 863


State 832

  320 path_delay_value: '(' path_delay_expression ',' path_delay_expression ')' .

    $default  reduce using rule 320 (path_delay_value)


State 833

  321 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ')'
  322                 | '(' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  323                 | '(' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 864
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 834

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor . polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    '+'  shift, and go to state 826
    '-'  shift, and go to state 827

    $default  reduce using rule 367 (polarity_operator_opt)

    polarity_operator_opt  go to state 865
    polarity_operator      go to state 829


State 835

  374 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs . polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';'

    '+'  shift, and go to state 826
    '-'  shift, and go to state 827

    $default  reduce using rule 367 (polarity_operator_opt)

    polarity_operator_opt  go to state 866
    polarity_operator      go to state 829


State 836

  243 statement: FOR '(' assignment ';' expression ';' assignment ')' . statement

    '{'         shift, and go to state 230
    '@'         shift, and go to state 231
    '#'         shift, and go to state 232
    '$'         shift, and go to state 233
    HYPH_GT     shift, and go to state 234
    _BEGIN_     shift, and go to state 235
    ASSIGN      shift, and go to state 236
    DEASSIGN    shift, and go to state 237
    IF          shift, and go to state 238
    CASE        shift, and go to state 239
    CASEZ       shift, and go to state 240
    CASEX       shift, and go to state 241
    FOREVER     shift, and go to state 242
    REPEAT      shift, and go to state 243
    WHILE       shift, and go to state 244
    FOR         shift, and go to state 245
    WAIT        shift, and go to state 246
    DISABLE     shift, and go to state 247
    FORCE       shift, and go to state 248
    RELEASE     shift, and go to state 249
    FORK        shift, and go to state 250
    IDENTIFIER  shift, and go to state 251

    name_of_task             go to state 252
    statement                go to state 867
    blocking_assignment      go to state 254
    non_blocking_assignment  go to state 255
    delay_or_event_control   go to state 256
    seq_block                go to state 257
    par_block                go to state 258
    task_enable              go to state 259
    system_task_enable       go to state 260
    name_of_system_task      go to state 261
    lvalue                   go to state 262
    concatenation            go to state 263
    identifier_hier          go to state 264
    delay_control            go to state 265
    event_control            go to state 266


State 837

  226 named_port_connection: '.' IDENTIFIER '(' expression . ')'
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ')'          shift, and go to state 868
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 838

   74 next_state: '-' .

    $default  reduce using rule 74 (next_state)


State 839

   73 next_state: OUTPUT_SYMBOL .

    $default  reduce using rule 73 (next_state)


State 840

   65 sequential_entry: input_list ':' state ':' next_state . ';'

    ';'  shift, and go to state 869


State 841

   70 edge: '(' LEVEL_SYMBOL LEVEL_SYMBOL ')' .

    $default  reduce using rule 70 (edge)


State 842

  316 specify_output_terminal_descriptor: output_identifier '[' constant_expression ':' constant_expression . ']'

    ']'  shift, and go to state 870


State 843

  345 edge_descriptor_list: edge_descriptor_list ',' EDGE_DESCRIPTOR .

    $default  reduce using rule 345 (edge_descriptor_list)


State 844

  327 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 819

    $default  reduce using rule 359 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 871


State 845

  349 timing_check_condition: '(' scalar_timing_check_condition . ')'

    ')'  shift, and go to state 872


State 846

  351 scalar_timing_check_condition: '~' scalar_expression .

    $default  reduce using rule 351 (scalar_timing_check_condition)


State 847

  352 scalar_timing_check_condition: scalar_expression EQ_EQ . SCALAR_CONSTANT

    SCALAR_CONSTANT  shift, and go to state 873


State 848

  354 scalar_timing_check_condition: scalar_expression NOT_EQ . SCALAR_CONSTANT

    SCALAR_CONSTANT  shift, and go to state 874


State 849

  353 scalar_timing_check_condition: scalar_expression EQ_EQ_EQ . SCALAR_CONSTANT

    SCALAR_CONSTANT  shift, and go to state 875


State 850

  355 scalar_timing_check_condition: scalar_expression NOT_EQ_EQ . SCALAR_CONSTANT

    SCALAR_CONSTANT  shift, and go to state 876


State 851

  357 scalar_expression: identifier_hier '[' . expression ']'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    expression               go to state 877
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 852

  328 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 819

    $default  reduce using rule 359 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 878


State 853

  360 comma_notify_register_opt: ',' notify_register .

    $default  reduce using rule 360 (comma_notify_register_opt)


State 854

  361 notify_register: identifier_hier .
  454 identifier_hier: identifier_hier . '.' IDENTIFIER

    '.'  shift, and go to state 194

    $default  reduce using rule 361 (notify_register)


State 855

  329 system_timing_check: '$' PERIOD '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 879


State 856

  326 comma_const_exp_comma_notify_reg_opt: ',' constant_expression . ',' notify_register

    ','  shift, and go to state 880


State 857

  330 system_timing_check: '$' WIDTH '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' . ';'

    ';'  shift, and go to state 881


State 858

  331 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 819

    $default  reduce using rule 359 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 882


State 859

  332 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 819

    $default  reduce using rule 359 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 883


State 860

  333 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit . ',' timing_check_limit comma_notify_register_opt ')' ';'

    ','  shift, and go to state 884


State 861

  363 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT . list_of_path_outputs ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 618

    list_of_path_outputs                     go to state 885
    specify_output_terminal_descriptor_list  go to state 620
    specify_output_terminal_descriptor       go to state 621
    output_identifier                        go to state 622


State 862

  362 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT . specify_output_terminal_descriptor ')' '=' path_delay_value ';'

    IDENTIFIER  shift, and go to state 618

    specify_output_terminal_descriptor  go to state 886
    output_identifier                   go to state 622


State 863

  380 sdpd: IF '(' sdpd_conditional_expression ')' path_description '=' path_delay_value ';' .

    $default  reduce using rule 380 (sdpd)


State 864

  321 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ')'
  322                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  323                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ')'  shift, and go to state 887
    ','  shift, and go to state 888


State 865

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt . ':' data_source_expression ')' ')' '=' path_delay_value ';'

    ':'  shift, and go to state 889


State 866

  374 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt . ':' data_source_expression ')' ')' '=' path_delay_value ';'

    ':'  shift, and go to state 890


State 867

  243 statement: FOR '(' assignment ';' expression ';' assignment ')' statement .

    $default  reduce using rule 243 (statement)


State 868

  226 named_port_connection: '.' IDENTIFIER '(' expression ')' .

    $default  reduce using rule 226 (named_port_connection)


State 869

   65 sequential_entry: input_list ':' state ':' next_state ';' .

    $default  reduce using rule 65 (sequential_entry)


State 870

  316 specify_output_terminal_descriptor: output_identifier '[' constant_expression ':' constant_expression ']' .

    $default  reduce using rule 316 (specify_output_terminal_descriptor)


State 871

  327 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 891


State 872

  349 timing_check_condition: '(' scalar_timing_check_condition ')' .

    $default  reduce using rule 349 (timing_check_condition)


State 873

  352 scalar_timing_check_condition: scalar_expression EQ_EQ SCALAR_CONSTANT .

    $default  reduce using rule 352 (scalar_timing_check_condition)


State 874

  354 scalar_timing_check_condition: scalar_expression NOT_EQ SCALAR_CONSTANT .

    $default  reduce using rule 354 (scalar_timing_check_condition)


State 875

  353 scalar_timing_check_condition: scalar_expression EQ_EQ_EQ SCALAR_CONSTANT .

    $default  reduce using rule 353 (scalar_timing_check_condition)


State 876

  355 scalar_timing_check_condition: scalar_expression NOT_EQ_EQ SCALAR_CONSTANT .

    $default  reduce using rule 355 (scalar_timing_check_condition)


State 877

  357 scalar_expression: identifier_hier '[' expression . ']'
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    ']'          shift, and go to state 892
    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    BINARY_OPERATOR  go to state 189


State 878

  328 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 893


State 879

  329 system_timing_check: '$' PERIOD '(' controlled_timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 329 (system_timing_check)


State 880

  326 comma_const_exp_comma_notify_reg_opt: ',' constant_expression ',' . notify_register

    IDENTIFIER  shift, and go to state 211

    notify_register  go to state 894
    identifier_hier  go to state 854


State 881

  330 system_timing_check: '$' WIDTH '(' controlled_timing_check_event ',' timing_check_limit comma_const_exp_comma_notify_reg_opt ')' ';' .

    $default  reduce using rule 330 (system_timing_check)


State 882

  331 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 895


State 883

  332 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 896


State 884

  333 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' . timing_check_limit comma_notify_register_opt ')' ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    timing_check_limit       go to state 897
    expression               go to state 781
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 885

  363 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs . ')' '=' path_delay_value ';'

    ')'  shift, and go to state 898


State 886

  362 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor . ')' '=' path_delay_value ';'

    ')'  shift, and go to state 899


State 887

  321 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')' .

    $default  reduce using rule 321 (path_delay_value)


State 888

  322 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'
  323                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 900
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 889

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' . data_source_expression ')' ')' '=' path_delay_value ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    data_source_expression   go to state 901
    expression               go to state 902
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 890

  374 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' . data_source_expression ')' ')' '=' path_delay_value ';'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    data_source_expression   go to state 903
    expression               go to state 902
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 891

  327 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 904


State 892

  357 scalar_expression: identifier_hier '[' expression ']' .

    $default  reduce using rule 357 (scalar_expression)


State 893

  328 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 905


State 894

  326 comma_const_exp_comma_notify_reg_opt: ',' constant_expression ',' notify_register .

    $default  reduce using rule 326 (comma_const_exp_comma_notify_reg_opt)


State 895

  331 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 906


State 896

  332 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 907


State 897

  333 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit . comma_notify_register_opt ')' ';'

    ','  shift, and go to state 819

    $default  reduce using rule 359 (comma_notify_register_opt)

    comma_notify_register_opt  go to state 908


State 898

  363 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' . '=' path_delay_value ';'

    '='  shift, and go to state 909


State 899

  362 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' . '=' path_delay_value ';'

    '='  shift, and go to state 910


State 900

  322 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ')'
  323                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 911


State 901

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression . ')' ')' '=' path_delay_value ';'

    ')'  shift, and go to state 912


State 902

  375 data_source_expression: expression .
  396 expression: expression . BINARY_OPERATOR expression
  397           | expression . '?' expression ':' expression

    '?'          shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    '*'          shift, and go to state 170
    '/'          shift, and go to state 171
    '%'          shift, and go to state 172
    '&'          shift, and go to state 173
    '|'          shift, and go to state 174
    '<'          shift, and go to state 175
    '>'          shift, and go to state 176
    '^'          shift, and go to state 177
    EQ_EQ        shift, and go to state 178
    NOT_EQ       shift, and go to state 179
    EQ_EQ_EQ     shift, and go to state 180
    NOT_EQ_EQ    shift, and go to state 181
    LAND         shift, and go to state 182
    LOR          shift, and go to state 183
    LTE          shift, and go to state 184
    GTE          shift, and go to state 185
    CARET_TILDE  shift, and go to state 186
    LSHIFT       shift, and go to state 187
    RSHIFT       shift, and go to state 188

    $default  reduce using rule 375 (data_source_expression)

    BINARY_OPERATOR  go to state 189


State 903

  374 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression . ')' ')' '=' path_delay_value ';'

    ')'  shift, and go to state 913


State 904

  327 system_timing_check: '$' SETUP '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 327 (system_timing_check)


State 905

  328 system_timing_check: '$' HOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 328 (system_timing_check)


State 906

  331 system_timing_check: '$' SKEW '(' timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 331 (system_timing_check)


State 907

  332 system_timing_check: '$' RECOVERY '(' controlled_timing_check_event ',' timing_check_event ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 332 (system_timing_check)


State 908

  333 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt . ')' ';'

    ')'  shift, and go to state 914


State 909

  363 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' . path_delay_value ';'

    '('              shift, and go to state 547
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_value         go to state 915
    path_delay_expression    go to state 549
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 910

  362 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' . path_delay_value ';'

    '('              shift, and go to state 547
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_value         go to state 916
    path_delay_expression    go to state 549
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 911

  322 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ')'
  323                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 917
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 912

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' . ')' '=' path_delay_value ';'

    ')'  shift, and go to state 918


State 913

  374 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' . ')' '=' path_delay_value ';'

    ')'  shift, and go to state 919


State 914

  333 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' . ';'

    ';'  shift, and go to state 920


State 915

  363 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value . ';'

    ';'  shift, and go to state 921


State 916

  362 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value . ';'

    ';'  shift, and go to state 922


State 917

  322 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ')'
  323                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 923


State 918

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' . '=' path_delay_value ';'

    '='  shift, and go to state 924


State 919

  374 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' . '=' path_delay_value ';'

    '='  shift, and go to state 925


State 920

  333 system_timing_check: '$' SETUPHOLD '(' timing_check_event ',' timing_check_event ',' timing_check_limit ',' timing_check_limit comma_notify_register_opt ')' ';' .

    $default  reduce using rule 333 (system_timing_check)


State 921

  363 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' list_of_path_inputs polarity_operator_opt AST_GT list_of_path_outputs ')' '=' path_delay_value ';' .

    $default  reduce using rule 363 (level_sensitive_path_declaration)


State 922

  362 level_sensitive_path_declaration: IF '(' conditional_port_expression ')' '(' specify_input_terminal_descriptor polarity_operator_opt EQ_GT specify_output_terminal_descriptor ')' '=' path_delay_value ';' .

    $default  reduce using rule 362 (level_sensitive_path_declaration)


State 923

  322 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ')'
  323                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 926
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 924

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' . path_delay_value ';'

    '('              shift, and go to state 547
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_value         go to state 927
    path_delay_expression    go to state 549
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 925

  374 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' . path_delay_value ';'

    '('              shift, and go to state 547
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_value         go to state 928
    path_delay_expression    go to state 549
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 926

  322 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ')'
  323                 | '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ')'  shift, and go to state 929
    ','  shift, and go to state 930


State 927

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value . ';'

    ';'  shift, and go to state 931


State 928

  374 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value . ';'

    ';'  shift, and go to state 932


State 929

  322 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')' .

    $default  reduce using rule 322 (path_delay_value)


State 930

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 933
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 931

  373 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor EQ_GT '(' specify_output_terminal_descriptor polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';' .

    $default  reduce using rule 373 (edge_sensitive_path_declaration)


State 932

  374 edge_sensitive_path_declaration: if_expression_opt '(' edge_identifier_opt specify_input_terminal_descriptor AST_GT '(' list_of_path_outputs polarity_operator_opt ':' data_source_expression ')' ')' '=' path_delay_value ';' .

    $default  reduce using rule 374 (edge_sensitive_path_declaration)


State 933

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 934


State 934

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 935
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 935

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 936


State 936

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 937
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 937

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 938


State 938

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 939
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 939

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ',' path_delay_expression ')'

    ','  shift, and go to state 940


State 940

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ',' path_delay_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 941
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 941

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ',' path_delay_expression ')'

    ','  shift, and go to state 942


State 942

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' . path_delay_expression ')'

    '('              shift, and go to state 44
    '{'              shift, and go to state 45
    '$'              shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '!'              shift, and go to state 49
    '~'              shift, and go to state 50
    '&'              shift, and go to state 51
    '|'              shift, and go to state 52
    '^'              shift, and go to state 53
    TILDE_AMP        shift, and go to state 54
    CARET_PIPE       shift, and go to state 55
    TILDE_CARET      shift, and go to state 56
    STRING           shift, and go to state 57
    IDENTIFIER       shift, and go to state 58
    DECIMAL_NUMBER   shift, and go to state 59
    UNSIGNED_NUMBER  shift, and go to state 60

    $default  reduce using rule 438 (unsigned_number_opt)

    path_delay_expression    go to state 943
    mintypmax_expression     go to state 550
    expression               go to state 157
    UNARY_OPERATOR           go to state 63
    primary                  go to state 64
    unsigned_number_opt      go to state 65
    number                   go to state 66
    concatenation            go to state 67
    multiple_concatenation   go to state 68
    function_call            go to state 69
    name_of_system_function  go to state 70
    identifier_hier          go to state 71


State 943

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression . ')'

    ')'  shift, and go to state 944


State 944

  323 path_delay_value: '(' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ',' path_delay_expression ')' .

    $default  reduce using rule 323 (path_delay_value)
